// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: messages-crypto.proto
// Protobuf Java Version: 4.28.3

package com.sparrowwallet.lark.trezor.generated;

public final class TrezorMessageCrypto {
  private TrezorMessageCrypto() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 3,
      /* suffix= */ "",
      TrezorMessageCrypto.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CipherKeyValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hw.trezor.messages.crypto.CipherKeyValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     * @return A list containing the addressN.
     */
    java.util.List<java.lang.Integer> getAddressNList();
    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     * @return The count of addressN.
     */
    int getAddressNCount();
    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     * @param index The index of the element to return.
     * @return The addressN at the given index.
     */
    int getAddressN(int index);

    /**
     * <pre>
     * key component of key:value
     * </pre>
     *
     * <code>required string key = 2;</code>
     * @return Whether the key field is set.
     */
    boolean hasKey();
    /**
     * <pre>
     * key component of key:value
     * </pre>
     *
     * <code>required string key = 2;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <pre>
     * key component of key:value
     * </pre>
     *
     * <code>required string key = 2;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <pre>
     * value component of key:value
     * </pre>
     *
     * <code>required bytes value = 3;</code>
     * @return Whether the value field is set.
     */
    boolean hasValue();
    /**
     * <pre>
     * value component of key:value
     * </pre>
     *
     * <code>required bytes value = 3;</code>
     * @return The value.
     */
    com.google.protobuf.ByteString getValue();

    /**
     * <pre>
     * are we encrypting (True) or decrypting (False)?
     * </pre>
     *
     * <code>optional bool encrypt = 4;</code>
     * @return Whether the encrypt field is set.
     */
    boolean hasEncrypt();
    /**
     * <pre>
     * are we encrypting (True) or decrypting (False)?
     * </pre>
     *
     * <code>optional bool encrypt = 4;</code>
     * @return The encrypt.
     */
    boolean getEncrypt();

    /**
     * <pre>
     * should we ask on encrypt operation?
     * </pre>
     *
     * <code>optional bool ask_on_encrypt = 5;</code>
     * @return Whether the askOnEncrypt field is set.
     */
    boolean hasAskOnEncrypt();
    /**
     * <pre>
     * should we ask on encrypt operation?
     * </pre>
     *
     * <code>optional bool ask_on_encrypt = 5;</code>
     * @return The askOnEncrypt.
     */
    boolean getAskOnEncrypt();

    /**
     * <pre>
     * should we ask on decrypt operation?
     * </pre>
     *
     * <code>optional bool ask_on_decrypt = 6;</code>
     * @return Whether the askOnDecrypt field is set.
     */
    boolean hasAskOnDecrypt();
    /**
     * <pre>
     * should we ask on decrypt operation?
     * </pre>
     *
     * <code>optional bool ask_on_decrypt = 6;</code>
     * @return The askOnDecrypt.
     */
    boolean getAskOnDecrypt();

    /**
     * <pre>
     * initialization vector (will be computed if not set)
     * </pre>
     *
     * <code>optional bytes iv = 7;</code>
     * @return Whether the iv field is set.
     */
    boolean hasIv();
    /**
     * <pre>
     * initialization vector (will be computed if not set)
     * </pre>
     *
     * <code>optional bytes iv = 7;</code>
     * @return The iv.
     */
    com.google.protobuf.ByteString getIv();
  }
  /**
   * <pre>
   * *
   * Request: Ask device to encrypt or decrypt value of given key
   * &#64;start
   * &#64;next CipheredKeyValue
   * &#64;next Failure
   * </pre>
   *
   * Protobuf type {@code hw.trezor.messages.crypto.CipherKeyValue}
   */
  public static final class CipherKeyValue extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:hw.trezor.messages.crypto.CipherKeyValue)
      CipherKeyValueOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        CipherKeyValue.class.getName());
    }
    // Use CipherKeyValue.newBuilder() to construct.
    private CipherKeyValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CipherKeyValue() {
      addressN_ = emptyIntList();
      key_ = "";
      value_ = com.google.protobuf.ByteString.EMPTY;
      iv_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_CipherKeyValue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_CipherKeyValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue.class, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue.Builder.class);
    }

    private int bitField0_;
    public static final int ADDRESS_N_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList addressN_ =
        emptyIntList();
    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     * @return A list containing the addressN.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getAddressNList() {
      return addressN_;
    }
    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     * @return The count of addressN.
     */
    public int getAddressNCount() {
      return addressN_.size();
    }
    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     * @param index The index of the element to return.
     * @return The addressN at the given index.
     */
    public int getAddressN(int index) {
      return addressN_.getInt(index);
    }

    public static final int KEY_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <pre>
     * key component of key:value
     * </pre>
     *
     * <code>required string key = 2;</code>
     * @return Whether the key field is set.
     */
    @java.lang.Override
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * key component of key:value
     * </pre>
     *
     * <code>required string key = 2;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          key_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * key component of key:value
     * </pre>
     *
     * <code>required string key = 2;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * value component of key:value
     * </pre>
     *
     * <code>required bytes value = 3;</code>
     * @return Whether the value field is set.
     */
    @java.lang.Override
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * value component of key:value
     * </pre>
     *
     * <code>required bytes value = 3;</code>
     * @return The value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getValue() {
      return value_;
    }

    public static final int ENCRYPT_FIELD_NUMBER = 4;
    private boolean encrypt_ = false;
    /**
     * <pre>
     * are we encrypting (True) or decrypting (False)?
     * </pre>
     *
     * <code>optional bool encrypt = 4;</code>
     * @return Whether the encrypt field is set.
     */
    @java.lang.Override
    public boolean hasEncrypt() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * are we encrypting (True) or decrypting (False)?
     * </pre>
     *
     * <code>optional bool encrypt = 4;</code>
     * @return The encrypt.
     */
    @java.lang.Override
    public boolean getEncrypt() {
      return encrypt_;
    }

    public static final int ASK_ON_ENCRYPT_FIELD_NUMBER = 5;
    private boolean askOnEncrypt_ = false;
    /**
     * <pre>
     * should we ask on encrypt operation?
     * </pre>
     *
     * <code>optional bool ask_on_encrypt = 5;</code>
     * @return Whether the askOnEncrypt field is set.
     */
    @java.lang.Override
    public boolean hasAskOnEncrypt() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * should we ask on encrypt operation?
     * </pre>
     *
     * <code>optional bool ask_on_encrypt = 5;</code>
     * @return The askOnEncrypt.
     */
    @java.lang.Override
    public boolean getAskOnEncrypt() {
      return askOnEncrypt_;
    }

    public static final int ASK_ON_DECRYPT_FIELD_NUMBER = 6;
    private boolean askOnDecrypt_ = false;
    /**
     * <pre>
     * should we ask on decrypt operation?
     * </pre>
     *
     * <code>optional bool ask_on_decrypt = 6;</code>
     * @return Whether the askOnDecrypt field is set.
     */
    @java.lang.Override
    public boolean hasAskOnDecrypt() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * should we ask on decrypt operation?
     * </pre>
     *
     * <code>optional bool ask_on_decrypt = 6;</code>
     * @return The askOnDecrypt.
     */
    @java.lang.Override
    public boolean getAskOnDecrypt() {
      return askOnDecrypt_;
    }

    public static final int IV_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString iv_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * initialization vector (will be computed if not set)
     * </pre>
     *
     * <code>optional bytes iv = 7;</code>
     * @return Whether the iv field is set.
     */
    @java.lang.Override
    public boolean hasIv() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * initialization vector (will be computed if not set)
     * </pre>
     *
     * <code>optional bytes iv = 7;</code>
     * @return The iv.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getIv() {
      return iv_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < addressN_.size(); i++) {
        output.writeUInt32(1, addressN_.getInt(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, key_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(3, value_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(4, encrypt_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBool(5, askOnEncrypt_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBool(6, askOnDecrypt_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeBytes(7, iv_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < addressN_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(addressN_.getInt(i));
        }
        size += dataSize;
        size += 1 * getAddressNList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, key_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, value_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, encrypt_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, askOnEncrypt_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, askOnDecrypt_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, iv_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue)) {
        return super.equals(obj);
      }
      com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue other = (com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue) obj;

      if (!getAddressNList()
          .equals(other.getAddressNList())) return false;
      if (hasKey() != other.hasKey()) return false;
      if (hasKey()) {
        if (!getKey()
            .equals(other.getKey())) return false;
      }
      if (hasValue() != other.hasValue()) return false;
      if (hasValue()) {
        if (!getValue()
            .equals(other.getValue())) return false;
      }
      if (hasEncrypt() != other.hasEncrypt()) return false;
      if (hasEncrypt()) {
        if (getEncrypt()
            != other.getEncrypt()) return false;
      }
      if (hasAskOnEncrypt() != other.hasAskOnEncrypt()) return false;
      if (hasAskOnEncrypt()) {
        if (getAskOnEncrypt()
            != other.getAskOnEncrypt()) return false;
      }
      if (hasAskOnDecrypt() != other.hasAskOnDecrypt()) return false;
      if (hasAskOnDecrypt()) {
        if (getAskOnDecrypt()
            != other.getAskOnDecrypt()) return false;
      }
      if (hasIv() != other.hasIv()) return false;
      if (hasIv()) {
        if (!getIv()
            .equals(other.getIv())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getAddressNCount() > 0) {
        hash = (37 * hash) + ADDRESS_N_FIELD_NUMBER;
        hash = (53 * hash) + getAddressNList().hashCode();
      }
      if (hasKey()) {
        hash = (37 * hash) + KEY_FIELD_NUMBER;
        hash = (53 * hash) + getKey().hashCode();
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
      }
      if (hasEncrypt()) {
        hash = (37 * hash) + ENCRYPT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getEncrypt());
      }
      if (hasAskOnEncrypt()) {
        hash = (37 * hash) + ASK_ON_ENCRYPT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAskOnEncrypt());
      }
      if (hasAskOnDecrypt()) {
        hash = (37 * hash) + ASK_ON_DECRYPT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAskOnDecrypt());
      }
      if (hasIv()) {
        hash = (37 * hash) + IV_FIELD_NUMBER;
        hash = (53 * hash) + getIv().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * *
     * Request: Ask device to encrypt or decrypt value of given key
     * &#64;start
     * &#64;next CipheredKeyValue
     * &#64;next Failure
     * </pre>
     *
     * Protobuf type {@code hw.trezor.messages.crypto.CipherKeyValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hw.trezor.messages.crypto.CipherKeyValue)
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_CipherKeyValue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_CipherKeyValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue.class, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue.Builder.class);
      }

      // Construct using com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        addressN_ = emptyIntList();
        key_ = "";
        value_ = com.google.protobuf.ByteString.EMPTY;
        encrypt_ = false;
        askOnEncrypt_ = false;
        askOnDecrypt_ = false;
        iv_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_CipherKeyValue_descriptor;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue getDefaultInstanceForType() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue.getDefaultInstance();
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue build() {
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue buildPartial() {
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue result = new com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          addressN_.makeImmutable();
          result.addressN_ = addressN_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.key_ = key_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.value_ = value_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.encrypt_ = encrypt_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.askOnEncrypt_ = askOnEncrypt_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.askOnDecrypt_ = askOnDecrypt_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.iv_ = iv_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue) {
          return mergeFrom((com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue other) {
        if (other == com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue.getDefaultInstance()) return this;
        if (!other.addressN_.isEmpty()) {
          if (addressN_.isEmpty()) {
            addressN_ = other.addressN_;
            addressN_.makeImmutable();
            bitField0_ |= 0x00000001;
          } else {
            ensureAddressNIsMutable();
            addressN_.addAll(other.addressN_);
          }
          onChanged();
        }
        if (other.hasKey()) {
          key_ = other.key_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasEncrypt()) {
          setEncrypt(other.getEncrypt());
        }
        if (other.hasAskOnEncrypt()) {
          setAskOnEncrypt(other.getAskOnEncrypt());
        }
        if (other.hasAskOnDecrypt()) {
          setAskOnDecrypt(other.getAskOnDecrypt());
        }
        if (other.hasIv()) {
          setIv(other.getIv());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasKey()) {
          return false;
        }
        if (!hasValue()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int v = input.readUInt32();
                ensureAddressNIsMutable();
                addressN_.addInt(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureAddressNIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  addressN_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 18: {
                key_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                value_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                encrypt_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                askOnEncrypt_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                askOnDecrypt_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 58: {
                iv_ = input.readBytes();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList addressN_ = emptyIntList();
      private void ensureAddressNIsMutable() {
        if (!addressN_.isModifiable()) {
          addressN_ = makeMutableCopy(addressN_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       * @return A list containing the addressN.
       */
      public java.util.List<java.lang.Integer>
          getAddressNList() {
        addressN_.makeImmutable();
        return addressN_;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       * @return The count of addressN.
       */
      public int getAddressNCount() {
        return addressN_.size();
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       * @param index The index of the element to return.
       * @return The addressN at the given index.
       */
      public int getAddressN(int index) {
        return addressN_.getInt(index);
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       * @param index The index to set the value at.
       * @param value The addressN to set.
       * @return This builder for chaining.
       */
      public Builder setAddressN(
          int index, int value) {

        ensureAddressNIsMutable();
        addressN_.setInt(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       * @param value The addressN to add.
       * @return This builder for chaining.
       */
      public Builder addAddressN(int value) {

        ensureAddressNIsMutable();
        addressN_.addInt(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       * @param values The addressN to add.
       * @return This builder for chaining.
       */
      public Builder addAllAddressN(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAddressNIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, addressN_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAddressN() {
        addressN_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <pre>
       * key component of key:value
       * </pre>
       *
       * <code>required string key = 2;</code>
       * @return Whether the key field is set.
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * key component of key:value
       * </pre>
       *
       * <code>required string key = 2;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            key_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * key component of key:value
       * </pre>
       *
       * <code>required string key = 2;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * key component of key:value
       * </pre>
       *
       * <code>required string key = 2;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * key component of key:value
       * </pre>
       *
       * <code>required string key = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * key component of key:value
       * </pre>
       *
       * <code>required string key = 2;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * value component of key:value
       * </pre>
       *
       * <code>required bytes value = 3;</code>
       * @return Whether the value field is set.
       */
      @java.lang.Override
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * value component of key:value
       * </pre>
       *
       * <code>required bytes value = 3;</code>
       * @return The value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }
      /**
       * <pre>
       * value component of key:value
       * </pre>
       *
       * <code>required bytes value = 3;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        value_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * value component of key:value
       * </pre>
       *
       * <code>required bytes value = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }

      private boolean encrypt_ ;
      /**
       * <pre>
       * are we encrypting (True) or decrypting (False)?
       * </pre>
       *
       * <code>optional bool encrypt = 4;</code>
       * @return Whether the encrypt field is set.
       */
      @java.lang.Override
      public boolean hasEncrypt() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * are we encrypting (True) or decrypting (False)?
       * </pre>
       *
       * <code>optional bool encrypt = 4;</code>
       * @return The encrypt.
       */
      @java.lang.Override
      public boolean getEncrypt() {
        return encrypt_;
      }
      /**
       * <pre>
       * are we encrypting (True) or decrypting (False)?
       * </pre>
       *
       * <code>optional bool encrypt = 4;</code>
       * @param value The encrypt to set.
       * @return This builder for chaining.
       */
      public Builder setEncrypt(boolean value) {

        encrypt_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * are we encrypting (True) or decrypting (False)?
       * </pre>
       *
       * <code>optional bool encrypt = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncrypt() {
        bitField0_ = (bitField0_ & ~0x00000008);
        encrypt_ = false;
        onChanged();
        return this;
      }

      private boolean askOnEncrypt_ ;
      /**
       * <pre>
       * should we ask on encrypt operation?
       * </pre>
       *
       * <code>optional bool ask_on_encrypt = 5;</code>
       * @return Whether the askOnEncrypt field is set.
       */
      @java.lang.Override
      public boolean hasAskOnEncrypt() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * should we ask on encrypt operation?
       * </pre>
       *
       * <code>optional bool ask_on_encrypt = 5;</code>
       * @return The askOnEncrypt.
       */
      @java.lang.Override
      public boolean getAskOnEncrypt() {
        return askOnEncrypt_;
      }
      /**
       * <pre>
       * should we ask on encrypt operation?
       * </pre>
       *
       * <code>optional bool ask_on_encrypt = 5;</code>
       * @param value The askOnEncrypt to set.
       * @return This builder for chaining.
       */
      public Builder setAskOnEncrypt(boolean value) {

        askOnEncrypt_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * should we ask on encrypt operation?
       * </pre>
       *
       * <code>optional bool ask_on_encrypt = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAskOnEncrypt() {
        bitField0_ = (bitField0_ & ~0x00000010);
        askOnEncrypt_ = false;
        onChanged();
        return this;
      }

      private boolean askOnDecrypt_ ;
      /**
       * <pre>
       * should we ask on decrypt operation?
       * </pre>
       *
       * <code>optional bool ask_on_decrypt = 6;</code>
       * @return Whether the askOnDecrypt field is set.
       */
      @java.lang.Override
      public boolean hasAskOnDecrypt() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * should we ask on decrypt operation?
       * </pre>
       *
       * <code>optional bool ask_on_decrypt = 6;</code>
       * @return The askOnDecrypt.
       */
      @java.lang.Override
      public boolean getAskOnDecrypt() {
        return askOnDecrypt_;
      }
      /**
       * <pre>
       * should we ask on decrypt operation?
       * </pre>
       *
       * <code>optional bool ask_on_decrypt = 6;</code>
       * @param value The askOnDecrypt to set.
       * @return This builder for chaining.
       */
      public Builder setAskOnDecrypt(boolean value) {

        askOnDecrypt_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * should we ask on decrypt operation?
       * </pre>
       *
       * <code>optional bool ask_on_decrypt = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearAskOnDecrypt() {
        bitField0_ = (bitField0_ & ~0x00000020);
        askOnDecrypt_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString iv_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * initialization vector (will be computed if not set)
       * </pre>
       *
       * <code>optional bytes iv = 7;</code>
       * @return Whether the iv field is set.
       */
      @java.lang.Override
      public boolean hasIv() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * initialization vector (will be computed if not set)
       * </pre>
       *
       * <code>optional bytes iv = 7;</code>
       * @return The iv.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getIv() {
        return iv_;
      }
      /**
       * <pre>
       * initialization vector (will be computed if not set)
       * </pre>
       *
       * <code>optional bytes iv = 7;</code>
       * @param value The iv to set.
       * @return This builder for chaining.
       */
      public Builder setIv(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        iv_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * initialization vector (will be computed if not set)
       * </pre>
       *
       * <code>optional bytes iv = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearIv() {
        bitField0_ = (bitField0_ & ~0x00000040);
        iv_ = getDefaultInstance().getIv();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:hw.trezor.messages.crypto.CipherKeyValue)
    }

    // @@protoc_insertion_point(class_scope:hw.trezor.messages.crypto.CipherKeyValue)
    private static final com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue();
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CipherKeyValue>
        PARSER = new com.google.protobuf.AbstractParser<CipherKeyValue>() {
      @java.lang.Override
      public CipherKeyValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CipherKeyValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CipherKeyValue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipherKeyValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CipheredKeyValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hw.trezor.messages.crypto.CipheredKeyValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ciphered/deciphered value
     * </pre>
     *
     * <code>required bytes value = 1;</code>
     * @return Whether the value field is set.
     */
    boolean hasValue();
    /**
     * <pre>
     * ciphered/deciphered value
     * </pre>
     *
     * <code>required bytes value = 1;</code>
     * @return The value.
     */
    com.google.protobuf.ByteString getValue();
  }
  /**
   * <pre>
   * *
   * Response: Return ciphered/deciphered value
   * &#64;end
   * </pre>
   *
   * Protobuf type {@code hw.trezor.messages.crypto.CipheredKeyValue}
   */
  public static final class CipheredKeyValue extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:hw.trezor.messages.crypto.CipheredKeyValue)
      CipheredKeyValueOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        CipheredKeyValue.class.getName());
    }
    // Use CipheredKeyValue.newBuilder() to construct.
    private CipheredKeyValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CipheredKeyValue() {
      value_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_CipheredKeyValue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_CipheredKeyValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue.class, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue.Builder.class);
    }

    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * ciphered/deciphered value
     * </pre>
     *
     * <code>required bytes value = 1;</code>
     * @return Whether the value field is set.
     */
    @java.lang.Override
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * ciphered/deciphered value
     * </pre>
     *
     * <code>required bytes value = 1;</code>
     * @return The value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBytes(1, value_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue)) {
        return super.equals(obj);
      }
      com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue other = (com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue) obj;

      if (hasValue() != other.hasValue()) return false;
      if (hasValue()) {
        if (!getValue()
            .equals(other.getValue())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * *
     * Response: Return ciphered/deciphered value
     * &#64;end
     * </pre>
     *
     * Protobuf type {@code hw.trezor.messages.crypto.CipheredKeyValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hw.trezor.messages.crypto.CipheredKeyValue)
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_CipheredKeyValue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_CipheredKeyValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue.class, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue.Builder.class);
      }

      // Construct using com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        value_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_CipheredKeyValue_descriptor;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue getDefaultInstanceForType() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue.getDefaultInstance();
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue build() {
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue buildPartial() {
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue result = new com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.value_ = value_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue) {
          return mergeFrom((com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue other) {
        if (other == com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasValue()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                value_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * ciphered/deciphered value
       * </pre>
       *
       * <code>required bytes value = 1;</code>
       * @return Whether the value field is set.
       */
      @java.lang.Override
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * ciphered/deciphered value
       * </pre>
       *
       * <code>required bytes value = 1;</code>
       * @return The value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }
      /**
       * <pre>
       * ciphered/deciphered value
       * </pre>
       *
       * <code>required bytes value = 1;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        value_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ciphered/deciphered value
       * </pre>
       *
       * <code>required bytes value = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:hw.trezor.messages.crypto.CipheredKeyValue)
    }

    // @@protoc_insertion_point(class_scope:hw.trezor.messages.crypto.CipheredKeyValue)
    private static final com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue();
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CipheredKeyValue>
        PARSER = new com.google.protobuf.AbstractParser<CipheredKeyValue>() {
      @java.lang.Override
      public CipheredKeyValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CipheredKeyValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CipheredKeyValue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.CipheredKeyValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IdentityTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hw.trezor.messages.crypto.IdentityType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * proto part of URI
     * </pre>
     *
     * <code>optional string proto = 1;</code>
     * @return Whether the proto field is set.
     */
    boolean hasProto();
    /**
     * <pre>
     * proto part of URI
     * </pre>
     *
     * <code>optional string proto = 1;</code>
     * @return The proto.
     */
    java.lang.String getProto();
    /**
     * <pre>
     * proto part of URI
     * </pre>
     *
     * <code>optional string proto = 1;</code>
     * @return The bytes for proto.
     */
    com.google.protobuf.ByteString
        getProtoBytes();

    /**
     * <pre>
     * user part of URI
     * </pre>
     *
     * <code>optional string user = 2;</code>
     * @return Whether the user field is set.
     */
    boolean hasUser();
    /**
     * <pre>
     * user part of URI
     * </pre>
     *
     * <code>optional string user = 2;</code>
     * @return The user.
     */
    java.lang.String getUser();
    /**
     * <pre>
     * user part of URI
     * </pre>
     *
     * <code>optional string user = 2;</code>
     * @return The bytes for user.
     */
    com.google.protobuf.ByteString
        getUserBytes();

    /**
     * <pre>
     * host part of URI
     * </pre>
     *
     * <code>optional string host = 3;</code>
     * @return Whether the host field is set.
     */
    boolean hasHost();
    /**
     * <pre>
     * host part of URI
     * </pre>
     *
     * <code>optional string host = 3;</code>
     * @return The host.
     */
    java.lang.String getHost();
    /**
     * <pre>
     * host part of URI
     * </pre>
     *
     * <code>optional string host = 3;</code>
     * @return The bytes for host.
     */
    com.google.protobuf.ByteString
        getHostBytes();

    /**
     * <pre>
     * port part of URI
     * </pre>
     *
     * <code>optional string port = 4;</code>
     * @return Whether the port field is set.
     */
    boolean hasPort();
    /**
     * <pre>
     * port part of URI
     * </pre>
     *
     * <code>optional string port = 4;</code>
     * @return The port.
     */
    java.lang.String getPort();
    /**
     * <pre>
     * port part of URI
     * </pre>
     *
     * <code>optional string port = 4;</code>
     * @return The bytes for port.
     */
    com.google.protobuf.ByteString
        getPortBytes();

    /**
     * <pre>
     * path part of URI
     * </pre>
     *
     * <code>optional string path = 5;</code>
     * @return Whether the path field is set.
     */
    boolean hasPath();
    /**
     * <pre>
     * path part of URI
     * </pre>
     *
     * <code>optional string path = 5;</code>
     * @return The path.
     */
    java.lang.String getPath();
    /**
     * <pre>
     * path part of URI
     * </pre>
     *
     * <code>optional string path = 5;</code>
     * @return The bytes for path.
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <pre>
     * identity index
     * </pre>
     *
     * <code>optional uint32 index = 6 [default = 0];</code>
     * @return Whether the index field is set.
     */
    boolean hasIndex();
    /**
     * <pre>
     * identity index
     * </pre>
     *
     * <code>optional uint32 index = 6 [default = 0];</code>
     * @return The index.
     */
    int getIndex();
  }
  /**
   * <pre>
   * *
   * Structure representing identity data
   * &#64;embed
   * </pre>
   *
   * Protobuf type {@code hw.trezor.messages.crypto.IdentityType}
   */
  public static final class IdentityType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:hw.trezor.messages.crypto.IdentityType)
      IdentityTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        IdentityType.class.getName());
    }
    // Use IdentityType.newBuilder() to construct.
    private IdentityType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IdentityType() {
      proto_ = "";
      user_ = "";
      host_ = "";
      port_ = "";
      path_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_IdentityType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_IdentityType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.class, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.Builder.class);
    }

    private int bitField0_;
    public static final int PROTO_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object proto_ = "";
    /**
     * <pre>
     * proto part of URI
     * </pre>
     *
     * <code>optional string proto = 1;</code>
     * @return Whether the proto field is set.
     */
    @java.lang.Override
    public boolean hasProto() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * proto part of URI
     * </pre>
     *
     * <code>optional string proto = 1;</code>
     * @return The proto.
     */
    @java.lang.Override
    public java.lang.String getProto() {
      java.lang.Object ref = proto_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          proto_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * proto part of URI
     * </pre>
     *
     * <code>optional string proto = 1;</code>
     * @return The bytes for proto.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProtoBytes() {
      java.lang.Object ref = proto_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        proto_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USER_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object user_ = "";
    /**
     * <pre>
     * user part of URI
     * </pre>
     *
     * <code>optional string user = 2;</code>
     * @return Whether the user field is set.
     */
    @java.lang.Override
    public boolean hasUser() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * user part of URI
     * </pre>
     *
     * <code>optional string user = 2;</code>
     * @return The user.
     */
    @java.lang.Override
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          user_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * user part of URI
     * </pre>
     *
     * <code>optional string user = 2;</code>
     * @return The bytes for user.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HOST_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object host_ = "";
    /**
     * <pre>
     * host part of URI
     * </pre>
     *
     * <code>optional string host = 3;</code>
     * @return Whether the host field is set.
     */
    @java.lang.Override
    public boolean hasHost() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * host part of URI
     * </pre>
     *
     * <code>optional string host = 3;</code>
     * @return The host.
     */
    @java.lang.Override
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          host_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * host part of URI
     * </pre>
     *
     * <code>optional string host = 3;</code>
     * @return The bytes for host.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object port_ = "";
    /**
     * <pre>
     * port part of URI
     * </pre>
     *
     * <code>optional string port = 4;</code>
     * @return Whether the port field is set.
     */
    @java.lang.Override
    public boolean hasPort() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * port part of URI
     * </pre>
     *
     * <code>optional string port = 4;</code>
     * @return The port.
     */
    @java.lang.Override
    public java.lang.String getPort() {
      java.lang.Object ref = port_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          port_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * port part of URI
     * </pre>
     *
     * <code>optional string port = 4;</code>
     * @return The bytes for port.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPortBytes() {
      java.lang.Object ref = port_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        port_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PATH_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object path_ = "";
    /**
     * <pre>
     * path part of URI
     * </pre>
     *
     * <code>optional string path = 5;</code>
     * @return Whether the path field is set.
     */
    @java.lang.Override
    public boolean hasPath() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * path part of URI
     * </pre>
     *
     * <code>optional string path = 5;</code>
     * @return The path.
     */
    @java.lang.Override
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          path_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * path part of URI
     * </pre>
     *
     * <code>optional string path = 5;</code>
     * @return The bytes for path.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INDEX_FIELD_NUMBER = 6;
    private int index_ = 0;
    /**
     * <pre>
     * identity index
     * </pre>
     *
     * <code>optional uint32 index = 6 [default = 0];</code>
     * @return Whether the index field is set.
     */
    @java.lang.Override
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * identity index
     * </pre>
     *
     * <code>optional uint32 index = 6 [default = 0];</code>
     * @return The index.
     */
    @java.lang.Override
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, proto_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, user_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, host_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, port_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, path_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(6, index_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, proto_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, user_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, host_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, port_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(5, path_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, index_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType)) {
        return super.equals(obj);
      }
      com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType other = (com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType) obj;

      if (hasProto() != other.hasProto()) return false;
      if (hasProto()) {
        if (!getProto()
            .equals(other.getProto())) return false;
      }
      if (hasUser() != other.hasUser()) return false;
      if (hasUser()) {
        if (!getUser()
            .equals(other.getUser())) return false;
      }
      if (hasHost() != other.hasHost()) return false;
      if (hasHost()) {
        if (!getHost()
            .equals(other.getHost())) return false;
      }
      if (hasPort() != other.hasPort()) return false;
      if (hasPort()) {
        if (!getPort()
            .equals(other.getPort())) return false;
      }
      if (hasPath() != other.hasPath()) return false;
      if (hasPath()) {
        if (!getPath()
            .equals(other.getPath())) return false;
      }
      if (hasIndex() != other.hasIndex()) return false;
      if (hasIndex()) {
        if (getIndex()
            != other.getIndex()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasProto()) {
        hash = (37 * hash) + PROTO_FIELD_NUMBER;
        hash = (53 * hash) + getProto().hashCode();
      }
      if (hasUser()) {
        hash = (37 * hash) + USER_FIELD_NUMBER;
        hash = (53 * hash) + getUser().hashCode();
      }
      if (hasHost()) {
        hash = (37 * hash) + HOST_FIELD_NUMBER;
        hash = (53 * hash) + getHost().hashCode();
      }
      if (hasPort()) {
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort().hashCode();
      }
      if (hasPath()) {
        hash = (37 * hash) + PATH_FIELD_NUMBER;
        hash = (53 * hash) + getPath().hashCode();
      }
      if (hasIndex()) {
        hash = (37 * hash) + INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getIndex();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * *
     * Structure representing identity data
     * &#64;embed
     * </pre>
     *
     * Protobuf type {@code hw.trezor.messages.crypto.IdentityType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hw.trezor.messages.crypto.IdentityType)
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_IdentityType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_IdentityType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.class, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.Builder.class);
      }

      // Construct using com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        proto_ = "";
        user_ = "";
        host_ = "";
        port_ = "";
        path_ = "";
        index_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_IdentityType_descriptor;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType getDefaultInstanceForType() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.getDefaultInstance();
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType build() {
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType buildPartial() {
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType result = new com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.proto_ = proto_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.user_ = user_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.host_ = host_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.port_ = port_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.path_ = path_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.index_ = index_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType) {
          return mergeFrom((com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType other) {
        if (other == com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.getDefaultInstance()) return this;
        if (other.hasProto()) {
          proto_ = other.proto_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasUser()) {
          user_ = other.user_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasHost()) {
          host_ = other.host_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.hasPort()) {
          port_ = other.port_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (other.hasPath()) {
          path_ = other.path_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                proto_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                user_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                host_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                port_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                path_ = input.readBytes();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 48: {
                index_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object proto_ = "";
      /**
       * <pre>
       * proto part of URI
       * </pre>
       *
       * <code>optional string proto = 1;</code>
       * @return Whether the proto field is set.
       */
      public boolean hasProto() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * proto part of URI
       * </pre>
       *
       * <code>optional string proto = 1;</code>
       * @return The proto.
       */
      public java.lang.String getProto() {
        java.lang.Object ref = proto_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            proto_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * proto part of URI
       * </pre>
       *
       * <code>optional string proto = 1;</code>
       * @return The bytes for proto.
       */
      public com.google.protobuf.ByteString
          getProtoBytes() {
        java.lang.Object ref = proto_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          proto_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * proto part of URI
       * </pre>
       *
       * <code>optional string proto = 1;</code>
       * @param value The proto to set.
       * @return This builder for chaining.
       */
      public Builder setProto(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        proto_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proto part of URI
       * </pre>
       *
       * <code>optional string proto = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearProto() {
        proto_ = getDefaultInstance().getProto();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proto part of URI
       * </pre>
       *
       * <code>optional string proto = 1;</code>
       * @param value The bytes for proto to set.
       * @return This builder for chaining.
       */
      public Builder setProtoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        proto_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object user_ = "";
      /**
       * <pre>
       * user part of URI
       * </pre>
       *
       * <code>optional string user = 2;</code>
       * @return Whether the user field is set.
       */
      public boolean hasUser() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * user part of URI
       * </pre>
       *
       * <code>optional string user = 2;</code>
       * @return The user.
       */
      public java.lang.String getUser() {
        java.lang.Object ref = user_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            user_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * user part of URI
       * </pre>
       *
       * <code>optional string user = 2;</code>
       * @return The bytes for user.
       */
      public com.google.protobuf.ByteString
          getUserBytes() {
        java.lang.Object ref = user_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          user_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * user part of URI
       * </pre>
       *
       * <code>optional string user = 2;</code>
       * @param value The user to set.
       * @return This builder for chaining.
       */
      public Builder setUser(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        user_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user part of URI
       * </pre>
       *
       * <code>optional string user = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUser() {
        user_ = getDefaultInstance().getUser();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user part of URI
       * </pre>
       *
       * <code>optional string user = 2;</code>
       * @param value The bytes for user to set.
       * @return This builder for chaining.
       */
      public Builder setUserBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        user_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object host_ = "";
      /**
       * <pre>
       * host part of URI
       * </pre>
       *
       * <code>optional string host = 3;</code>
       * @return Whether the host field is set.
       */
      public boolean hasHost() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * host part of URI
       * </pre>
       *
       * <code>optional string host = 3;</code>
       * @return The host.
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            host_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * host part of URI
       * </pre>
       *
       * <code>optional string host = 3;</code>
       * @return The bytes for host.
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * host part of URI
       * </pre>
       *
       * <code>optional string host = 3;</code>
       * @param value The host to set.
       * @return This builder for chaining.
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        host_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * host part of URI
       * </pre>
       *
       * <code>optional string host = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHost() {
        host_ = getDefaultInstance().getHost();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * host part of URI
       * </pre>
       *
       * <code>optional string host = 3;</code>
       * @param value The bytes for host to set.
       * @return This builder for chaining.
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        host_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object port_ = "";
      /**
       * <pre>
       * port part of URI
       * </pre>
       *
       * <code>optional string port = 4;</code>
       * @return Whether the port field is set.
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * port part of URI
       * </pre>
       *
       * <code>optional string port = 4;</code>
       * @return The port.
       */
      public java.lang.String getPort() {
        java.lang.Object ref = port_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            port_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * port part of URI
       * </pre>
       *
       * <code>optional string port = 4;</code>
       * @return The bytes for port.
       */
      public com.google.protobuf.ByteString
          getPortBytes() {
        java.lang.Object ref = port_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          port_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * port part of URI
       * </pre>
       *
       * <code>optional string port = 4;</code>
       * @param value The port to set.
       * @return This builder for chaining.
       */
      public Builder setPort(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        port_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port part of URI
       * </pre>
       *
       * <code>optional string port = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPort() {
        port_ = getDefaultInstance().getPort();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port part of URI
       * </pre>
       *
       * <code>optional string port = 4;</code>
       * @param value The bytes for port to set.
       * @return This builder for chaining.
       */
      public Builder setPortBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        port_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object path_ = "";
      /**
       * <pre>
       * path part of URI
       * </pre>
       *
       * <code>optional string path = 5;</code>
       * @return Whether the path field is set.
       */
      public boolean hasPath() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * path part of URI
       * </pre>
       *
       * <code>optional string path = 5;</code>
       * @return The path.
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            path_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * path part of URI
       * </pre>
       *
       * <code>optional string path = 5;</code>
       * @return The bytes for path.
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * path part of URI
       * </pre>
       *
       * <code>optional string path = 5;</code>
       * @param value The path to set.
       * @return This builder for chaining.
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        path_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * path part of URI
       * </pre>
       *
       * <code>optional string path = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPath() {
        path_ = getDefaultInstance().getPath();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * path part of URI
       * </pre>
       *
       * <code>optional string path = 5;</code>
       * @param value The bytes for path to set.
       * @return This builder for chaining.
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        path_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       * identity index
       * </pre>
       *
       * <code>optional uint32 index = 6 [default = 0];</code>
       * @return Whether the index field is set.
       */
      @java.lang.Override
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * identity index
       * </pre>
       *
       * <code>optional uint32 index = 6 [default = 0];</code>
       * @return The index.
       */
      @java.lang.Override
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       * identity index
       * </pre>
       *
       * <code>optional uint32 index = 6 [default = 0];</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(int value) {

        index_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * identity index
       * </pre>
       *
       * <code>optional uint32 index = 6 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000020);
        index_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:hw.trezor.messages.crypto.IdentityType)
    }

    // @@protoc_insertion_point(class_scope:hw.trezor.messages.crypto.IdentityType)
    private static final com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType();
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IdentityType>
        PARSER = new com.google.protobuf.AbstractParser<IdentityType>() {
      @java.lang.Override
      public IdentityType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IdentityType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IdentityType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignIdentityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hw.trezor.messages.crypto.SignIdentity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * identity
     * </pre>
     *
     * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
     * @return Whether the identity field is set.
     */
    boolean hasIdentity();
    /**
     * <pre>
     * identity
     * </pre>
     *
     * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
     * @return The identity.
     */
    com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType getIdentity();
    /**
     * <pre>
     * identity
     * </pre>
     *
     * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
     */
    com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityTypeOrBuilder getIdentityOrBuilder();

    /**
     * <pre>
     * non-visible challenge
     * </pre>
     *
     * <code>optional bytes challenge_hidden = 2 [default = ""];</code>
     * @return Whether the challengeHidden field is set.
     */
    boolean hasChallengeHidden();
    /**
     * <pre>
     * non-visible challenge
     * </pre>
     *
     * <code>optional bytes challenge_hidden = 2 [default = ""];</code>
     * @return The challengeHidden.
     */
    com.google.protobuf.ByteString getChallengeHidden();

    /**
     * <pre>
     * challenge shown on display (e.g. date+time)
     * </pre>
     *
     * <code>optional string challenge_visual = 3 [default = ""];</code>
     * @return Whether the challengeVisual field is set.
     */
    boolean hasChallengeVisual();
    /**
     * <pre>
     * challenge shown on display (e.g. date+time)
     * </pre>
     *
     * <code>optional string challenge_visual = 3 [default = ""];</code>
     * @return The challengeVisual.
     */
    java.lang.String getChallengeVisual();
    /**
     * <pre>
     * challenge shown on display (e.g. date+time)
     * </pre>
     *
     * <code>optional string challenge_visual = 3 [default = ""];</code>
     * @return The bytes for challengeVisual.
     */
    com.google.protobuf.ByteString
        getChallengeVisualBytes();

    /**
     * <pre>
     * ECDSA curve name to use
     * </pre>
     *
     * <code>optional string ecdsa_curve_name = 4;</code>
     * @return Whether the ecdsaCurveName field is set.
     */
    boolean hasEcdsaCurveName();
    /**
     * <pre>
     * ECDSA curve name to use
     * </pre>
     *
     * <code>optional string ecdsa_curve_name = 4;</code>
     * @return The ecdsaCurveName.
     */
    java.lang.String getEcdsaCurveName();
    /**
     * <pre>
     * ECDSA curve name to use
     * </pre>
     *
     * <code>optional string ecdsa_curve_name = 4;</code>
     * @return The bytes for ecdsaCurveName.
     */
    com.google.protobuf.ByteString
        getEcdsaCurveNameBytes();
  }
  /**
   * <pre>
   * *
   * Request: Ask device to sign identity
   * &#64;start
   * &#64;next SignedIdentity
   * &#64;next Failure
   * </pre>
   *
   * Protobuf type {@code hw.trezor.messages.crypto.SignIdentity}
   */
  public static final class SignIdentity extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:hw.trezor.messages.crypto.SignIdentity)
      SignIdentityOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        SignIdentity.class.getName());
    }
    // Use SignIdentity.newBuilder() to construct.
    private SignIdentity(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SignIdentity() {
      challengeHidden_ = com.google.protobuf.Internal.bytesDefaultValue("");
      challengeVisual_ = "";
      ecdsaCurveName_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_SignIdentity_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_SignIdentity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity.class, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity.Builder.class);
    }

    private int bitField0_;
    public static final int IDENTITY_FIELD_NUMBER = 1;
    private com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType identity_;
    /**
     * <pre>
     * identity
     * </pre>
     *
     * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
     * @return Whether the identity field is set.
     */
    @java.lang.Override
    public boolean hasIdentity() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * identity
     * </pre>
     *
     * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
     * @return The identity.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType getIdentity() {
      return identity_ == null ? com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.getDefaultInstance() : identity_;
    }
    /**
     * <pre>
     * identity
     * </pre>
     *
     * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityTypeOrBuilder getIdentityOrBuilder() {
      return identity_ == null ? com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.getDefaultInstance() : identity_;
    }

    public static final int CHALLENGE_HIDDEN_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString challengeHidden_ = com.google.protobuf.Internal.bytesDefaultValue("");
    /**
     * <pre>
     * non-visible challenge
     * </pre>
     *
     * <code>optional bytes challenge_hidden = 2 [default = ""];</code>
     * @return Whether the challengeHidden field is set.
     */
    @java.lang.Override
    public boolean hasChallengeHidden() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * non-visible challenge
     * </pre>
     *
     * <code>optional bytes challenge_hidden = 2 [default = ""];</code>
     * @return The challengeHidden.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getChallengeHidden() {
      return challengeHidden_;
    }

    public static final int CHALLENGE_VISUAL_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object challengeVisual_ = "";
    /**
     * <pre>
     * challenge shown on display (e.g. date+time)
     * </pre>
     *
     * <code>optional string challenge_visual = 3 [default = ""];</code>
     * @return Whether the challengeVisual field is set.
     */
    @java.lang.Override
    public boolean hasChallengeVisual() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * challenge shown on display (e.g. date+time)
     * </pre>
     *
     * <code>optional string challenge_visual = 3 [default = ""];</code>
     * @return The challengeVisual.
     */
    @java.lang.Override
    public java.lang.String getChallengeVisual() {
      java.lang.Object ref = challengeVisual_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          challengeVisual_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * challenge shown on display (e.g. date+time)
     * </pre>
     *
     * <code>optional string challenge_visual = 3 [default = ""];</code>
     * @return The bytes for challengeVisual.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChallengeVisualBytes() {
      java.lang.Object ref = challengeVisual_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        challengeVisual_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ECDSA_CURVE_NAME_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object ecdsaCurveName_ = "";
    /**
     * <pre>
     * ECDSA curve name to use
     * </pre>
     *
     * <code>optional string ecdsa_curve_name = 4;</code>
     * @return Whether the ecdsaCurveName field is set.
     */
    @java.lang.Override
    public boolean hasEcdsaCurveName() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * ECDSA curve name to use
     * </pre>
     *
     * <code>optional string ecdsa_curve_name = 4;</code>
     * @return The ecdsaCurveName.
     */
    @java.lang.Override
    public java.lang.String getEcdsaCurveName() {
      java.lang.Object ref = ecdsaCurveName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ecdsaCurveName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * ECDSA curve name to use
     * </pre>
     *
     * <code>optional string ecdsa_curve_name = 4;</code>
     * @return The bytes for ecdsaCurveName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEcdsaCurveNameBytes() {
      java.lang.Object ref = ecdsaCurveName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ecdsaCurveName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIdentity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getIdentity());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(2, challengeHidden_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, challengeVisual_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, ecdsaCurveName_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIdentity());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, challengeHidden_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, challengeVisual_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, ecdsaCurveName_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity)) {
        return super.equals(obj);
      }
      com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity other = (com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity) obj;

      if (hasIdentity() != other.hasIdentity()) return false;
      if (hasIdentity()) {
        if (!getIdentity()
            .equals(other.getIdentity())) return false;
      }
      if (hasChallengeHidden() != other.hasChallengeHidden()) return false;
      if (hasChallengeHidden()) {
        if (!getChallengeHidden()
            .equals(other.getChallengeHidden())) return false;
      }
      if (hasChallengeVisual() != other.hasChallengeVisual()) return false;
      if (hasChallengeVisual()) {
        if (!getChallengeVisual()
            .equals(other.getChallengeVisual())) return false;
      }
      if (hasEcdsaCurveName() != other.hasEcdsaCurveName()) return false;
      if (hasEcdsaCurveName()) {
        if (!getEcdsaCurveName()
            .equals(other.getEcdsaCurveName())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIdentity()) {
        hash = (37 * hash) + IDENTITY_FIELD_NUMBER;
        hash = (53 * hash) + getIdentity().hashCode();
      }
      if (hasChallengeHidden()) {
        hash = (37 * hash) + CHALLENGE_HIDDEN_FIELD_NUMBER;
        hash = (53 * hash) + getChallengeHidden().hashCode();
      }
      if (hasChallengeVisual()) {
        hash = (37 * hash) + CHALLENGE_VISUAL_FIELD_NUMBER;
        hash = (53 * hash) + getChallengeVisual().hashCode();
      }
      if (hasEcdsaCurveName()) {
        hash = (37 * hash) + ECDSA_CURVE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getEcdsaCurveName().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * *
     * Request: Ask device to sign identity
     * &#64;start
     * &#64;next SignedIdentity
     * &#64;next Failure
     * </pre>
     *
     * Protobuf type {@code hw.trezor.messages.crypto.SignIdentity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hw.trezor.messages.crypto.SignIdentity)
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_SignIdentity_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_SignIdentity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity.class, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity.Builder.class);
      }

      // Construct using com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getIdentityFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        identity_ = null;
        if (identityBuilder_ != null) {
          identityBuilder_.dispose();
          identityBuilder_ = null;
        }
        challengeHidden_ = com.google.protobuf.Internal.bytesDefaultValue("");
        challengeVisual_ = "";
        ecdsaCurveName_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_SignIdentity_descriptor;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity getDefaultInstanceForType() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity.getDefaultInstance();
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity build() {
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity buildPartial() {
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity result = new com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.identity_ = identityBuilder_ == null
              ? identity_
              : identityBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.challengeHidden_ = challengeHidden_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.challengeVisual_ = challengeVisual_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.ecdsaCurveName_ = ecdsaCurveName_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity) {
          return mergeFrom((com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity other) {
        if (other == com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity.getDefaultInstance()) return this;
        if (other.hasIdentity()) {
          mergeIdentity(other.getIdentity());
        }
        if (other.hasChallengeHidden()) {
          setChallengeHidden(other.getChallengeHidden());
        }
        if (other.hasChallengeVisual()) {
          challengeVisual_ = other.challengeVisual_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.hasEcdsaCurveName()) {
          ecdsaCurveName_ = other.ecdsaCurveName_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasIdentity()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getIdentityFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                challengeHidden_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                challengeVisual_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                ecdsaCurveName_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType identity_;
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.Builder, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityTypeOrBuilder> identityBuilder_;
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       * @return Whether the identity field is set.
       */
      public boolean hasIdentity() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       * @return The identity.
       */
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType getIdentity() {
        if (identityBuilder_ == null) {
          return identity_ == null ? com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.getDefaultInstance() : identity_;
        } else {
          return identityBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       */
      public Builder setIdentity(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType value) {
        if (identityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          identity_ = value;
        } else {
          identityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       */
      public Builder setIdentity(
          com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.Builder builderForValue) {
        if (identityBuilder_ == null) {
          identity_ = builderForValue.build();
        } else {
          identityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       */
      public Builder mergeIdentity(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType value) {
        if (identityBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            identity_ != null &&
            identity_ != com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.getDefaultInstance()) {
            getIdentityBuilder().mergeFrom(value);
          } else {
            identity_ = value;
          }
        } else {
          identityBuilder_.mergeFrom(value);
        }
        if (identity_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       */
      public Builder clearIdentity() {
        bitField0_ = (bitField0_ & ~0x00000001);
        identity_ = null;
        if (identityBuilder_ != null) {
          identityBuilder_.dispose();
          identityBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       */
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.Builder getIdentityBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getIdentityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       */
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityTypeOrBuilder getIdentityOrBuilder() {
        if (identityBuilder_ != null) {
          return identityBuilder_.getMessageOrBuilder();
        } else {
          return identity_ == null ?
              com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.getDefaultInstance() : identity_;
        }
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.Builder, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityTypeOrBuilder> 
          getIdentityFieldBuilder() {
        if (identityBuilder_ == null) {
          identityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.Builder, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityTypeOrBuilder>(
                  getIdentity(),
                  getParentForChildren(),
                  isClean());
          identity_ = null;
        }
        return identityBuilder_;
      }

      private com.google.protobuf.ByteString challengeHidden_ = com.google.protobuf.Internal.bytesDefaultValue("");
      /**
       * <pre>
       * non-visible challenge
       * </pre>
       *
       * <code>optional bytes challenge_hidden = 2 [default = ""];</code>
       * @return Whether the challengeHidden field is set.
       */
      @java.lang.Override
      public boolean hasChallengeHidden() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * non-visible challenge
       * </pre>
       *
       * <code>optional bytes challenge_hidden = 2 [default = ""];</code>
       * @return The challengeHidden.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getChallengeHidden() {
        return challengeHidden_;
      }
      /**
       * <pre>
       * non-visible challenge
       * </pre>
       *
       * <code>optional bytes challenge_hidden = 2 [default = ""];</code>
       * @param value The challengeHidden to set.
       * @return This builder for chaining.
       */
      public Builder setChallengeHidden(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        challengeHidden_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * non-visible challenge
       * </pre>
       *
       * <code>optional bytes challenge_hidden = 2 [default = ""];</code>
       * @return This builder for chaining.
       */
      public Builder clearChallengeHidden() {
        bitField0_ = (bitField0_ & ~0x00000002);
        challengeHidden_ = getDefaultInstance().getChallengeHidden();
        onChanged();
        return this;
      }

      private java.lang.Object challengeVisual_ = "";
      /**
       * <pre>
       * challenge shown on display (e.g. date+time)
       * </pre>
       *
       * <code>optional string challenge_visual = 3 [default = ""];</code>
       * @return Whether the challengeVisual field is set.
       */
      public boolean hasChallengeVisual() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * challenge shown on display (e.g. date+time)
       * </pre>
       *
       * <code>optional string challenge_visual = 3 [default = ""];</code>
       * @return The challengeVisual.
       */
      public java.lang.String getChallengeVisual() {
        java.lang.Object ref = challengeVisual_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            challengeVisual_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * challenge shown on display (e.g. date+time)
       * </pre>
       *
       * <code>optional string challenge_visual = 3 [default = ""];</code>
       * @return The bytes for challengeVisual.
       */
      public com.google.protobuf.ByteString
          getChallengeVisualBytes() {
        java.lang.Object ref = challengeVisual_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          challengeVisual_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * challenge shown on display (e.g. date+time)
       * </pre>
       *
       * <code>optional string challenge_visual = 3 [default = ""];</code>
       * @param value The challengeVisual to set.
       * @return This builder for chaining.
       */
      public Builder setChallengeVisual(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        challengeVisual_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * challenge shown on display (e.g. date+time)
       * </pre>
       *
       * <code>optional string challenge_visual = 3 [default = ""];</code>
       * @return This builder for chaining.
       */
      public Builder clearChallengeVisual() {
        challengeVisual_ = getDefaultInstance().getChallengeVisual();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * challenge shown on display (e.g. date+time)
       * </pre>
       *
       * <code>optional string challenge_visual = 3 [default = ""];</code>
       * @param value The bytes for challengeVisual to set.
       * @return This builder for chaining.
       */
      public Builder setChallengeVisualBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        challengeVisual_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object ecdsaCurveName_ = "";
      /**
       * <pre>
       * ECDSA curve name to use
       * </pre>
       *
       * <code>optional string ecdsa_curve_name = 4;</code>
       * @return Whether the ecdsaCurveName field is set.
       */
      public boolean hasEcdsaCurveName() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * ECDSA curve name to use
       * </pre>
       *
       * <code>optional string ecdsa_curve_name = 4;</code>
       * @return The ecdsaCurveName.
       */
      public java.lang.String getEcdsaCurveName() {
        java.lang.Object ref = ecdsaCurveName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ecdsaCurveName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ECDSA curve name to use
       * </pre>
       *
       * <code>optional string ecdsa_curve_name = 4;</code>
       * @return The bytes for ecdsaCurveName.
       */
      public com.google.protobuf.ByteString
          getEcdsaCurveNameBytes() {
        java.lang.Object ref = ecdsaCurveName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ecdsaCurveName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ECDSA curve name to use
       * </pre>
       *
       * <code>optional string ecdsa_curve_name = 4;</code>
       * @param value The ecdsaCurveName to set.
       * @return This builder for chaining.
       */
      public Builder setEcdsaCurveName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ecdsaCurveName_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ECDSA curve name to use
       * </pre>
       *
       * <code>optional string ecdsa_curve_name = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEcdsaCurveName() {
        ecdsaCurveName_ = getDefaultInstance().getEcdsaCurveName();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ECDSA curve name to use
       * </pre>
       *
       * <code>optional string ecdsa_curve_name = 4;</code>
       * @param value The bytes for ecdsaCurveName to set.
       * @return This builder for chaining.
       */
      public Builder setEcdsaCurveNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ecdsaCurveName_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:hw.trezor.messages.crypto.SignIdentity)
    }

    // @@protoc_insertion_point(class_scope:hw.trezor.messages.crypto.SignIdentity)
    private static final com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity();
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignIdentity>
        PARSER = new com.google.protobuf.AbstractParser<SignIdentity>() {
      @java.lang.Override
      public SignIdentity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SignIdentity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignIdentity> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignIdentity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignedIdentityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hw.trezor.messages.crypto.SignedIdentity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * identity address
     * </pre>
     *
     * <code>optional string address = 1;</code>
     * @return Whether the address field is set.
     */
    boolean hasAddress();
    /**
     * <pre>
     * identity address
     * </pre>
     *
     * <code>optional string address = 1;</code>
     * @return The address.
     */
    java.lang.String getAddress();
    /**
     * <pre>
     * identity address
     * </pre>
     *
     * <code>optional string address = 1;</code>
     * @return The bytes for address.
     */
    com.google.protobuf.ByteString
        getAddressBytes();

    /**
     * <pre>
     * identity public key
     * </pre>
     *
     * <code>required bytes public_key = 2;</code>
     * @return Whether the publicKey field is set.
     */
    boolean hasPublicKey();
    /**
     * <pre>
     * identity public key
     * </pre>
     *
     * <code>required bytes public_key = 2;</code>
     * @return The publicKey.
     */
    com.google.protobuf.ByteString getPublicKey();

    /**
     * <pre>
     * signature of the identity data
     * </pre>
     *
     * <code>required bytes signature = 3;</code>
     * @return Whether the signature field is set.
     */
    boolean hasSignature();
    /**
     * <pre>
     * signature of the identity data
     * </pre>
     *
     * <code>required bytes signature = 3;</code>
     * @return The signature.
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * <pre>
   * *
   * Response: Device provides signed identity
   * &#64;end
   * </pre>
   *
   * Protobuf type {@code hw.trezor.messages.crypto.SignedIdentity}
   */
  public static final class SignedIdentity extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:hw.trezor.messages.crypto.SignedIdentity)
      SignedIdentityOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        SignedIdentity.class.getName());
    }
    // Use SignedIdentity.newBuilder() to construct.
    private SignedIdentity(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SignedIdentity() {
      address_ = "";
      publicKey_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_SignedIdentity_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_SignedIdentity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity.class, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity.Builder.class);
    }

    private int bitField0_;
    public static final int ADDRESS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object address_ = "";
    /**
     * <pre>
     * identity address
     * </pre>
     *
     * <code>optional string address = 1;</code>
     * @return Whether the address field is set.
     */
    @java.lang.Override
    public boolean hasAddress() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * identity address
     * </pre>
     *
     * <code>optional string address = 1;</code>
     * @return The address.
     */
    @java.lang.Override
    public java.lang.String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          address_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * identity address
     * </pre>
     *
     * <code>optional string address = 1;</code>
     * @return The bytes for address.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PUBLIC_KEY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * identity public key
     * </pre>
     *
     * <code>required bytes public_key = 2;</code>
     * @return Whether the publicKey field is set.
     */
    @java.lang.Override
    public boolean hasPublicKey() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * identity public key
     * </pre>
     *
     * <code>required bytes public_key = 2;</code>
     * @return The publicKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPublicKey() {
      return publicKey_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * signature of the identity data
     * </pre>
     *
     * <code>required bytes signature = 3;</code>
     * @return Whether the signature field is set.
     */
    @java.lang.Override
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * signature of the identity data
     * </pre>
     *
     * <code>required bytes signature = 3;</code>
     * @return The signature.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPublicKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSignature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, address_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(2, publicKey_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBytes(3, signature_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, address_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, publicKey_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, signature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity)) {
        return super.equals(obj);
      }
      com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity other = (com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity) obj;

      if (hasAddress() != other.hasAddress()) return false;
      if (hasAddress()) {
        if (!getAddress()
            .equals(other.getAddress())) return false;
      }
      if (hasPublicKey() != other.hasPublicKey()) return false;
      if (hasPublicKey()) {
        if (!getPublicKey()
            .equals(other.getPublicKey())) return false;
      }
      if (hasSignature() != other.hasSignature()) return false;
      if (hasSignature()) {
        if (!getSignature()
            .equals(other.getSignature())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAddress()) {
        hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getAddress().hashCode();
      }
      if (hasPublicKey()) {
        hash = (37 * hash) + PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPublicKey().hashCode();
      }
      if (hasSignature()) {
        hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getSignature().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * *
     * Response: Device provides signed identity
     * &#64;end
     * </pre>
     *
     * Protobuf type {@code hw.trezor.messages.crypto.SignedIdentity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hw.trezor.messages.crypto.SignedIdentity)
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_SignedIdentity_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_SignedIdentity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity.class, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity.Builder.class);
      }

      // Construct using com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        address_ = "";
        publicKey_ = com.google.protobuf.ByteString.EMPTY;
        signature_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_SignedIdentity_descriptor;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity getDefaultInstanceForType() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity.getDefaultInstance();
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity build() {
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity buildPartial() {
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity result = new com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.address_ = address_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.publicKey_ = publicKey_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.signature_ = signature_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity) {
          return mergeFrom((com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity other) {
        if (other == com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity.getDefaultInstance()) return this;
        if (other.hasAddress()) {
          address_ = other.address_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasPublicKey()) {
          setPublicKey(other.getPublicKey());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPublicKey()) {
          return false;
        }
        if (!hasSignature()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                address_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                publicKey_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                signature_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object address_ = "";
      /**
       * <pre>
       * identity address
       * </pre>
       *
       * <code>optional string address = 1;</code>
       * @return Whether the address field is set.
       */
      public boolean hasAddress() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * identity address
       * </pre>
       *
       * <code>optional string address = 1;</code>
       * @return The address.
       */
      public java.lang.String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            address_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * identity address
       * </pre>
       *
       * <code>optional string address = 1;</code>
       * @return The bytes for address.
       */
      public com.google.protobuf.ByteString
          getAddressBytes() {
        java.lang.Object ref = address_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          address_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * identity address
       * </pre>
       *
       * <code>optional string address = 1;</code>
       * @param value The address to set.
       * @return This builder for chaining.
       */
      public Builder setAddress(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        address_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * identity address
       * </pre>
       *
       * <code>optional string address = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAddress() {
        address_ = getDefaultInstance().getAddress();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * identity address
       * </pre>
       *
       * <code>optional string address = 1;</code>
       * @param value The bytes for address to set.
       * @return This builder for chaining.
       */
      public Builder setAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        address_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * identity public key
       * </pre>
       *
       * <code>required bytes public_key = 2;</code>
       * @return Whether the publicKey field is set.
       */
      @java.lang.Override
      public boolean hasPublicKey() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * identity public key
       * </pre>
       *
       * <code>required bytes public_key = 2;</code>
       * @return The publicKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPublicKey() {
        return publicKey_;
      }
      /**
       * <pre>
       * identity public key
       * </pre>
       *
       * <code>required bytes public_key = 2;</code>
       * @param value The publicKey to set.
       * @return This builder for chaining.
       */
      public Builder setPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        publicKey_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * identity public key
       * </pre>
       *
       * <code>required bytes public_key = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        publicKey_ = getDefaultInstance().getPublicKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * signature of the identity data
       * </pre>
       *
       * <code>required bytes signature = 3;</code>
       * @return Whether the signature field is set.
       */
      @java.lang.Override
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * signature of the identity data
       * </pre>
       *
       * <code>required bytes signature = 3;</code>
       * @return The signature.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <pre>
       * signature of the identity data
       * </pre>
       *
       * <code>required bytes signature = 3;</code>
       * @param value The signature to set.
       * @return This builder for chaining.
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        signature_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * signature of the identity data
       * </pre>
       *
       * <code>required bytes signature = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000004);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:hw.trezor.messages.crypto.SignedIdentity)
    }

    // @@protoc_insertion_point(class_scope:hw.trezor.messages.crypto.SignedIdentity)
    private static final com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity();
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignedIdentity>
        PARSER = new com.google.protobuf.AbstractParser<SignedIdentity>() {
      @java.lang.Override
      public SignedIdentity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SignedIdentity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignedIdentity> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.SignedIdentity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetECDHSessionKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hw.trezor.messages.crypto.GetECDHSessionKey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * identity
     * </pre>
     *
     * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
     * @return Whether the identity field is set.
     */
    boolean hasIdentity();
    /**
     * <pre>
     * identity
     * </pre>
     *
     * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
     * @return The identity.
     */
    com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType getIdentity();
    /**
     * <pre>
     * identity
     * </pre>
     *
     * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
     */
    com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityTypeOrBuilder getIdentityOrBuilder();

    /**
     * <pre>
     * peer's public key
     * </pre>
     *
     * <code>required bytes peer_public_key = 2;</code>
     * @return Whether the peerPublicKey field is set.
     */
    boolean hasPeerPublicKey();
    /**
     * <pre>
     * peer's public key
     * </pre>
     *
     * <code>required bytes peer_public_key = 2;</code>
     * @return The peerPublicKey.
     */
    com.google.protobuf.ByteString getPeerPublicKey();

    /**
     * <pre>
     * ECDSA curve name to use
     * </pre>
     *
     * <code>optional string ecdsa_curve_name = 3;</code>
     * @return Whether the ecdsaCurveName field is set.
     */
    boolean hasEcdsaCurveName();
    /**
     * <pre>
     * ECDSA curve name to use
     * </pre>
     *
     * <code>optional string ecdsa_curve_name = 3;</code>
     * @return The ecdsaCurveName.
     */
    java.lang.String getEcdsaCurveName();
    /**
     * <pre>
     * ECDSA curve name to use
     * </pre>
     *
     * <code>optional string ecdsa_curve_name = 3;</code>
     * @return The bytes for ecdsaCurveName.
     */
    com.google.protobuf.ByteString
        getEcdsaCurveNameBytes();
  }
  /**
   * <pre>
   * *
   * Request: Ask device to generate ECDH session key
   * &#64;start
   * &#64;next ECDHSessionKey
   * &#64;next Failure
   * </pre>
   *
   * Protobuf type {@code hw.trezor.messages.crypto.GetECDHSessionKey}
   */
  public static final class GetECDHSessionKey extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:hw.trezor.messages.crypto.GetECDHSessionKey)
      GetECDHSessionKeyOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        GetECDHSessionKey.class.getName());
    }
    // Use GetECDHSessionKey.newBuilder() to construct.
    private GetECDHSessionKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GetECDHSessionKey() {
      peerPublicKey_ = com.google.protobuf.ByteString.EMPTY;
      ecdsaCurveName_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_GetECDHSessionKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_GetECDHSessionKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey.class, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey.Builder.class);
    }

    private int bitField0_;
    public static final int IDENTITY_FIELD_NUMBER = 1;
    private com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType identity_;
    /**
     * <pre>
     * identity
     * </pre>
     *
     * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
     * @return Whether the identity field is set.
     */
    @java.lang.Override
    public boolean hasIdentity() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * identity
     * </pre>
     *
     * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
     * @return The identity.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType getIdentity() {
      return identity_ == null ? com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.getDefaultInstance() : identity_;
    }
    /**
     * <pre>
     * identity
     * </pre>
     *
     * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityTypeOrBuilder getIdentityOrBuilder() {
      return identity_ == null ? com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.getDefaultInstance() : identity_;
    }

    public static final int PEER_PUBLIC_KEY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString peerPublicKey_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * peer's public key
     * </pre>
     *
     * <code>required bytes peer_public_key = 2;</code>
     * @return Whether the peerPublicKey field is set.
     */
    @java.lang.Override
    public boolean hasPeerPublicKey() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * peer's public key
     * </pre>
     *
     * <code>required bytes peer_public_key = 2;</code>
     * @return The peerPublicKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPeerPublicKey() {
      return peerPublicKey_;
    }

    public static final int ECDSA_CURVE_NAME_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object ecdsaCurveName_ = "";
    /**
     * <pre>
     * ECDSA curve name to use
     * </pre>
     *
     * <code>optional string ecdsa_curve_name = 3;</code>
     * @return Whether the ecdsaCurveName field is set.
     */
    @java.lang.Override
    public boolean hasEcdsaCurveName() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * ECDSA curve name to use
     * </pre>
     *
     * <code>optional string ecdsa_curve_name = 3;</code>
     * @return The ecdsaCurveName.
     */
    @java.lang.Override
    public java.lang.String getEcdsaCurveName() {
      java.lang.Object ref = ecdsaCurveName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ecdsaCurveName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * ECDSA curve name to use
     * </pre>
     *
     * <code>optional string ecdsa_curve_name = 3;</code>
     * @return The bytes for ecdsaCurveName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEcdsaCurveNameBytes() {
      java.lang.Object ref = ecdsaCurveName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ecdsaCurveName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIdentity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPeerPublicKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getIdentity());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(2, peerPublicKey_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, ecdsaCurveName_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIdentity());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, peerPublicKey_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, ecdsaCurveName_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey)) {
        return super.equals(obj);
      }
      com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey other = (com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey) obj;

      if (hasIdentity() != other.hasIdentity()) return false;
      if (hasIdentity()) {
        if (!getIdentity()
            .equals(other.getIdentity())) return false;
      }
      if (hasPeerPublicKey() != other.hasPeerPublicKey()) return false;
      if (hasPeerPublicKey()) {
        if (!getPeerPublicKey()
            .equals(other.getPeerPublicKey())) return false;
      }
      if (hasEcdsaCurveName() != other.hasEcdsaCurveName()) return false;
      if (hasEcdsaCurveName()) {
        if (!getEcdsaCurveName()
            .equals(other.getEcdsaCurveName())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIdentity()) {
        hash = (37 * hash) + IDENTITY_FIELD_NUMBER;
        hash = (53 * hash) + getIdentity().hashCode();
      }
      if (hasPeerPublicKey()) {
        hash = (37 * hash) + PEER_PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPeerPublicKey().hashCode();
      }
      if (hasEcdsaCurveName()) {
        hash = (37 * hash) + ECDSA_CURVE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getEcdsaCurveName().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * *
     * Request: Ask device to generate ECDH session key
     * &#64;start
     * &#64;next ECDHSessionKey
     * &#64;next Failure
     * </pre>
     *
     * Protobuf type {@code hw.trezor.messages.crypto.GetECDHSessionKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hw.trezor.messages.crypto.GetECDHSessionKey)
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_GetECDHSessionKey_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_GetECDHSessionKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey.class, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey.Builder.class);
      }

      // Construct using com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getIdentityFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        identity_ = null;
        if (identityBuilder_ != null) {
          identityBuilder_.dispose();
          identityBuilder_ = null;
        }
        peerPublicKey_ = com.google.protobuf.ByteString.EMPTY;
        ecdsaCurveName_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_GetECDHSessionKey_descriptor;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey getDefaultInstanceForType() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey.getDefaultInstance();
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey build() {
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey buildPartial() {
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey result = new com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.identity_ = identityBuilder_ == null
              ? identity_
              : identityBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.peerPublicKey_ = peerPublicKey_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.ecdsaCurveName_ = ecdsaCurveName_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey) {
          return mergeFrom((com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey other) {
        if (other == com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey.getDefaultInstance()) return this;
        if (other.hasIdentity()) {
          mergeIdentity(other.getIdentity());
        }
        if (other.hasPeerPublicKey()) {
          setPeerPublicKey(other.getPeerPublicKey());
        }
        if (other.hasEcdsaCurveName()) {
          ecdsaCurveName_ = other.ecdsaCurveName_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasIdentity()) {
          return false;
        }
        if (!hasPeerPublicKey()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getIdentityFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                peerPublicKey_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                ecdsaCurveName_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType identity_;
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.Builder, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityTypeOrBuilder> identityBuilder_;
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       * @return Whether the identity field is set.
       */
      public boolean hasIdentity() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       * @return The identity.
       */
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType getIdentity() {
        if (identityBuilder_ == null) {
          return identity_ == null ? com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.getDefaultInstance() : identity_;
        } else {
          return identityBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       */
      public Builder setIdentity(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType value) {
        if (identityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          identity_ = value;
        } else {
          identityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       */
      public Builder setIdentity(
          com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.Builder builderForValue) {
        if (identityBuilder_ == null) {
          identity_ = builderForValue.build();
        } else {
          identityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       */
      public Builder mergeIdentity(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType value) {
        if (identityBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            identity_ != null &&
            identity_ != com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.getDefaultInstance()) {
            getIdentityBuilder().mergeFrom(value);
          } else {
            identity_ = value;
          }
        } else {
          identityBuilder_.mergeFrom(value);
        }
        if (identity_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       */
      public Builder clearIdentity() {
        bitField0_ = (bitField0_ & ~0x00000001);
        identity_ = null;
        if (identityBuilder_ != null) {
          identityBuilder_.dispose();
          identityBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       */
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.Builder getIdentityBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getIdentityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       */
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityTypeOrBuilder getIdentityOrBuilder() {
        if (identityBuilder_ != null) {
          return identityBuilder_.getMessageOrBuilder();
        } else {
          return identity_ == null ?
              com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.getDefaultInstance() : identity_;
        }
      }
      /**
       * <pre>
       * identity
       * </pre>
       *
       * <code>required .hw.trezor.messages.crypto.IdentityType identity = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.Builder, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityTypeOrBuilder> 
          getIdentityFieldBuilder() {
        if (identityBuilder_ == null) {
          identityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityType.Builder, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.IdentityTypeOrBuilder>(
                  getIdentity(),
                  getParentForChildren(),
                  isClean());
          identity_ = null;
        }
        return identityBuilder_;
      }

      private com.google.protobuf.ByteString peerPublicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * peer's public key
       * </pre>
       *
       * <code>required bytes peer_public_key = 2;</code>
       * @return Whether the peerPublicKey field is set.
       */
      @java.lang.Override
      public boolean hasPeerPublicKey() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * peer's public key
       * </pre>
       *
       * <code>required bytes peer_public_key = 2;</code>
       * @return The peerPublicKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPeerPublicKey() {
        return peerPublicKey_;
      }
      /**
       * <pre>
       * peer's public key
       * </pre>
       *
       * <code>required bytes peer_public_key = 2;</code>
       * @param value The peerPublicKey to set.
       * @return This builder for chaining.
       */
      public Builder setPeerPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        peerPublicKey_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * peer's public key
       * </pre>
       *
       * <code>required bytes peer_public_key = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPeerPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        peerPublicKey_ = getDefaultInstance().getPeerPublicKey();
        onChanged();
        return this;
      }

      private java.lang.Object ecdsaCurveName_ = "";
      /**
       * <pre>
       * ECDSA curve name to use
       * </pre>
       *
       * <code>optional string ecdsa_curve_name = 3;</code>
       * @return Whether the ecdsaCurveName field is set.
       */
      public boolean hasEcdsaCurveName() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * ECDSA curve name to use
       * </pre>
       *
       * <code>optional string ecdsa_curve_name = 3;</code>
       * @return The ecdsaCurveName.
       */
      public java.lang.String getEcdsaCurveName() {
        java.lang.Object ref = ecdsaCurveName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ecdsaCurveName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ECDSA curve name to use
       * </pre>
       *
       * <code>optional string ecdsa_curve_name = 3;</code>
       * @return The bytes for ecdsaCurveName.
       */
      public com.google.protobuf.ByteString
          getEcdsaCurveNameBytes() {
        java.lang.Object ref = ecdsaCurveName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ecdsaCurveName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ECDSA curve name to use
       * </pre>
       *
       * <code>optional string ecdsa_curve_name = 3;</code>
       * @param value The ecdsaCurveName to set.
       * @return This builder for chaining.
       */
      public Builder setEcdsaCurveName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ecdsaCurveName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ECDSA curve name to use
       * </pre>
       *
       * <code>optional string ecdsa_curve_name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEcdsaCurveName() {
        ecdsaCurveName_ = getDefaultInstance().getEcdsaCurveName();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ECDSA curve name to use
       * </pre>
       *
       * <code>optional string ecdsa_curve_name = 3;</code>
       * @param value The bytes for ecdsaCurveName to set.
       * @return This builder for chaining.
       */
      public Builder setEcdsaCurveNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ecdsaCurveName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:hw.trezor.messages.crypto.GetECDHSessionKey)
    }

    // @@protoc_insertion_point(class_scope:hw.trezor.messages.crypto.GetECDHSessionKey)
    private static final com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey();
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetECDHSessionKey>
        PARSER = new com.google.protobuf.AbstractParser<GetECDHSessionKey>() {
      @java.lang.Override
      public GetECDHSessionKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GetECDHSessionKey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetECDHSessionKey> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.GetECDHSessionKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ECDHSessionKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hw.trezor.messages.crypto.ECDHSessionKey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ECDH session key
     * </pre>
     *
     * <code>required bytes session_key = 1;</code>
     * @return Whether the sessionKey field is set.
     */
    boolean hasSessionKey();
    /**
     * <pre>
     * ECDH session key
     * </pre>
     *
     * <code>required bytes session_key = 1;</code>
     * @return The sessionKey.
     */
    com.google.protobuf.ByteString getSessionKey();

    /**
     * <pre>
     * identity public key
     * </pre>
     *
     * <code>optional bytes public_key = 2;</code>
     * @return Whether the publicKey field is set.
     */
    boolean hasPublicKey();
    /**
     * <pre>
     * identity public key
     * </pre>
     *
     * <code>optional bytes public_key = 2;</code>
     * @return The publicKey.
     */
    com.google.protobuf.ByteString getPublicKey();
  }
  /**
   * <pre>
   * *
   * Response: Device provides ECDH session key
   * &#64;end
   * </pre>
   *
   * Protobuf type {@code hw.trezor.messages.crypto.ECDHSessionKey}
   */
  public static final class ECDHSessionKey extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:hw.trezor.messages.crypto.ECDHSessionKey)
      ECDHSessionKeyOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        ECDHSessionKey.class.getName());
    }
    // Use ECDHSessionKey.newBuilder() to construct.
    private ECDHSessionKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ECDHSessionKey() {
      sessionKey_ = com.google.protobuf.ByteString.EMPTY;
      publicKey_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_ECDHSessionKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_ECDHSessionKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey.class, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey.Builder.class);
    }

    private int bitField0_;
    public static final int SESSION_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString sessionKey_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * ECDH session key
     * </pre>
     *
     * <code>required bytes session_key = 1;</code>
     * @return Whether the sessionKey field is set.
     */
    @java.lang.Override
    public boolean hasSessionKey() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * ECDH session key
     * </pre>
     *
     * <code>required bytes session_key = 1;</code>
     * @return The sessionKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSessionKey() {
      return sessionKey_;
    }

    public static final int PUBLIC_KEY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * identity public key
     * </pre>
     *
     * <code>optional bytes public_key = 2;</code>
     * @return Whether the publicKey field is set.
     */
    @java.lang.Override
    public boolean hasPublicKey() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * identity public key
     * </pre>
     *
     * <code>optional bytes public_key = 2;</code>
     * @return The publicKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPublicKey() {
      return publicKey_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSessionKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBytes(1, sessionKey_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(2, publicKey_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, sessionKey_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, publicKey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey)) {
        return super.equals(obj);
      }
      com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey other = (com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey) obj;

      if (hasSessionKey() != other.hasSessionKey()) return false;
      if (hasSessionKey()) {
        if (!getSessionKey()
            .equals(other.getSessionKey())) return false;
      }
      if (hasPublicKey() != other.hasPublicKey()) return false;
      if (hasPublicKey()) {
        if (!getPublicKey()
            .equals(other.getPublicKey())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSessionKey()) {
        hash = (37 * hash) + SESSION_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getSessionKey().hashCode();
      }
      if (hasPublicKey()) {
        hash = (37 * hash) + PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPublicKey().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * *
     * Response: Device provides ECDH session key
     * &#64;end
     * </pre>
     *
     * Protobuf type {@code hw.trezor.messages.crypto.ECDHSessionKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hw.trezor.messages.crypto.ECDHSessionKey)
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_ECDHSessionKey_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_ECDHSessionKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey.class, com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey.Builder.class);
      }

      // Construct using com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        sessionKey_ = com.google.protobuf.ByteString.EMPTY;
        publicKey_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.internal_static_hw_trezor_messages_crypto_ECDHSessionKey_descriptor;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey getDefaultInstanceForType() {
        return com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey.getDefaultInstance();
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey build() {
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey buildPartial() {
        com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey result = new com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.sessionKey_ = sessionKey_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.publicKey_ = publicKey_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey) {
          return mergeFrom((com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey other) {
        if (other == com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey.getDefaultInstance()) return this;
        if (other.hasSessionKey()) {
          setSessionKey(other.getSessionKey());
        }
        if (other.hasPublicKey()) {
          setPublicKey(other.getPublicKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasSessionKey()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                sessionKey_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                publicKey_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString sessionKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * ECDH session key
       * </pre>
       *
       * <code>required bytes session_key = 1;</code>
       * @return Whether the sessionKey field is set.
       */
      @java.lang.Override
      public boolean hasSessionKey() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * ECDH session key
       * </pre>
       *
       * <code>required bytes session_key = 1;</code>
       * @return The sessionKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSessionKey() {
        return sessionKey_;
      }
      /**
       * <pre>
       * ECDH session key
       * </pre>
       *
       * <code>required bytes session_key = 1;</code>
       * @param value The sessionKey to set.
       * @return This builder for chaining.
       */
      public Builder setSessionKey(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        sessionKey_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ECDH session key
       * </pre>
       *
       * <code>required bytes session_key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSessionKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sessionKey_ = getDefaultInstance().getSessionKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * identity public key
       * </pre>
       *
       * <code>optional bytes public_key = 2;</code>
       * @return Whether the publicKey field is set.
       */
      @java.lang.Override
      public boolean hasPublicKey() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * identity public key
       * </pre>
       *
       * <code>optional bytes public_key = 2;</code>
       * @return The publicKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPublicKey() {
        return publicKey_;
      }
      /**
       * <pre>
       * identity public key
       * </pre>
       *
       * <code>optional bytes public_key = 2;</code>
       * @param value The publicKey to set.
       * @return This builder for chaining.
       */
      public Builder setPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        publicKey_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * identity public key
       * </pre>
       *
       * <code>optional bytes public_key = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        publicKey_ = getDefaultInstance().getPublicKey();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:hw.trezor.messages.crypto.ECDHSessionKey)
    }

    // @@protoc_insertion_point(class_scope:hw.trezor.messages.crypto.ECDHSessionKey)
    private static final com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey();
    }

    public static com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ECDHSessionKey>
        PARSER = new com.google.protobuf.AbstractParser<ECDHSessionKey>() {
      @java.lang.Override
      public ECDHSessionKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ECDHSessionKey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ECDHSessionKey> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sparrowwallet.lark.trezor.generated.TrezorMessageCrypto.ECDHSessionKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hw_trezor_messages_crypto_CipherKeyValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hw_trezor_messages_crypto_CipherKeyValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hw_trezor_messages_crypto_CipheredKeyValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hw_trezor_messages_crypto_CipheredKeyValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hw_trezor_messages_crypto_IdentityType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hw_trezor_messages_crypto_IdentityType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hw_trezor_messages_crypto_SignIdentity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hw_trezor_messages_crypto_SignIdentity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hw_trezor_messages_crypto_SignedIdentity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hw_trezor_messages_crypto_SignedIdentity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hw_trezor_messages_crypto_GetECDHSessionKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hw_trezor_messages_crypto_GetECDHSessionKey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hw_trezor_messages_crypto_ECDHSessionKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hw_trezor_messages_crypto_ECDHSessionKey_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025messages-crypto.proto\022\031hw.trezor.messa" +
      "ges.crypto\032\roptions.proto\"\214\001\n\016CipherKeyV" +
      "alue\022\021\n\taddress_n\030\001 \003(\r\022\013\n\003key\030\002 \002(\t\022\r\n\005" +
      "value\030\003 \002(\014\022\017\n\007encrypt\030\004 \001(\010\022\026\n\016ask_on_e" +
      "ncrypt\030\005 \001(\010\022\026\n\016ask_on_decrypt\030\006 \001(\010\022\n\n\002" +
      "iv\030\007 \001(\014\"!\n\020CipheredKeyValue\022\r\n\005value\030\001 " +
      "\002(\014\"g\n\014IdentityType\022\r\n\005proto\030\001 \001(\t\022\014\n\004us" +
      "er\030\002 \001(\t\022\014\n\004host\030\003 \001(\t\022\014\n\004port\030\004 \001(\t\022\014\n\004" +
      "path\030\005 \001(\t\022\020\n\005index\030\006 \001(\r:\0010\"\233\001\n\014SignIde" +
      "ntity\0229\n\010identity\030\001 \002(\0132\'.hw.trezor.mess" +
      "ages.crypto.IdentityType\022\032\n\020challenge_hi" +
      "dden\030\002 \001(\014:\000\022\032\n\020challenge_visual\030\003 \001(\t:\000" +
      "\022\030\n\020ecdsa_curve_name\030\004 \001(\t\"H\n\016SignedIden" +
      "tity\022\017\n\007address\030\001 \001(\t\022\022\n\npublic_key\030\002 \002(" +
      "\014\022\021\n\tsignature\030\003 \002(\014\"\201\001\n\021GetECDHSessionK" +
      "ey\0229\n\010identity\030\001 \002(\0132\'.hw.trezor.message" +
      "s.crypto.IdentityType\022\027\n\017peer_public_key" +
      "\030\002 \002(\014\022\030\n\020ecdsa_curve_name\030\003 \001(\t\"9\n\016ECDH" +
      "SessionKey\022\023\n\013session_key\030\001 \002(\014\022\022\n\npubli" +
      "c_key\030\002 \001(\014BB\n\'com.sparrowwallet.lark.tr" +
      "ezor.generatedB\023TrezorMessageCrypto\200\246\035\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.sparrowwallet.lark.trezor.generated.TrezorOptions.getDescriptor(),
        });
    internal_static_hw_trezor_messages_crypto_CipherKeyValue_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_hw_trezor_messages_crypto_CipherKeyValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_hw_trezor_messages_crypto_CipherKeyValue_descriptor,
        new java.lang.String[] { "AddressN", "Key", "Value", "Encrypt", "AskOnEncrypt", "AskOnDecrypt", "Iv", });
    internal_static_hw_trezor_messages_crypto_CipheredKeyValue_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_hw_trezor_messages_crypto_CipheredKeyValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_hw_trezor_messages_crypto_CipheredKeyValue_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_hw_trezor_messages_crypto_IdentityType_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_hw_trezor_messages_crypto_IdentityType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_hw_trezor_messages_crypto_IdentityType_descriptor,
        new java.lang.String[] { "Proto", "User", "Host", "Port", "Path", "Index", });
    internal_static_hw_trezor_messages_crypto_SignIdentity_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_hw_trezor_messages_crypto_SignIdentity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_hw_trezor_messages_crypto_SignIdentity_descriptor,
        new java.lang.String[] { "Identity", "ChallengeHidden", "ChallengeVisual", "EcdsaCurveName", });
    internal_static_hw_trezor_messages_crypto_SignedIdentity_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_hw_trezor_messages_crypto_SignedIdentity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_hw_trezor_messages_crypto_SignedIdentity_descriptor,
        new java.lang.String[] { "Address", "PublicKey", "Signature", });
    internal_static_hw_trezor_messages_crypto_GetECDHSessionKey_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_hw_trezor_messages_crypto_GetECDHSessionKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_hw_trezor_messages_crypto_GetECDHSessionKey_descriptor,
        new java.lang.String[] { "Identity", "PeerPublicKey", "EcdsaCurveName", });
    internal_static_hw_trezor_messages_crypto_ECDHSessionKey_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_hw_trezor_messages_crypto_ECDHSessionKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_hw_trezor_messages_crypto_ECDHSessionKey_descriptor,
        new java.lang.String[] { "SessionKey", "PublicKey", });
    descriptor.resolveAllFeaturesImmutable();
    com.sparrowwallet.lark.trezor.generated.TrezorOptions.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.sparrowwallet.lark.trezor.generated.TrezorOptions.includeInBitcoinOnly);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
