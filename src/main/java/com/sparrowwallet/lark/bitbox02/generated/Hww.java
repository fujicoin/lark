// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: hww.proto
// Protobuf Java Version: 4.28.3

package com.sparrowwallet.lark.bitbox02.generated;

public final class Hww {
  private Hww() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 3,
      /* suffix= */ "",
      Hww.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ErrorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sparrowwallet.lark.bitbox02.generated.Error)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 code = 1;</code>
     * @return The code.
     */
    int getCode();

    /**
     * <code>string message = 2;</code>
     * @return The message.
     */
    java.lang.String getMessage();
    /**
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code com.sparrowwallet.lark.bitbox02.generated.Error}
   */
  public static final class Error extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.sparrowwallet.lark.bitbox02.generated.Error)
      ErrorOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        Error.class.getName());
    }
    // Use Error.newBuilder() to construct.
    private Error(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Error() {
      message_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Error_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Error_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sparrowwallet.lark.bitbox02.generated.Hww.Error.class, com.sparrowwallet.lark.bitbox02.generated.Hww.Error.Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_ = 0;
    /**
     * <code>int32 code = 1;</code>
     * @return The code.
     */
    @java.lang.Override
    public int getCode() {
      return code_;
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object message_ = "";
    /**
     * <code>string message = 2;</code>
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != 0) {
        output.writeInt32(1, code_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(message_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, message_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(message_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, message_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sparrowwallet.lark.bitbox02.generated.Hww.Error)) {
        return super.equals(obj);
      }
      com.sparrowwallet.lark.bitbox02.generated.Hww.Error other = (com.sparrowwallet.lark.bitbox02.generated.Hww.Error) obj;

      if (getCode()
          != other.getCode()) return false;
      if (!getMessage()
          .equals(other.getMessage())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Error parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Error parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Error parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Error parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Error parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Error parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Error parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Error parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Error parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Error parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Error parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Error parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sparrowwallet.lark.bitbox02.generated.Hww.Error prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sparrowwallet.lark.bitbox02.generated.Error}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sparrowwallet.lark.bitbox02.generated.Error)
        com.sparrowwallet.lark.bitbox02.generated.Hww.ErrorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Error_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Error_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sparrowwallet.lark.bitbox02.generated.Hww.Error.class, com.sparrowwallet.lark.bitbox02.generated.Hww.Error.Builder.class);
      }

      // Construct using com.sparrowwallet.lark.bitbox02.generated.Hww.Error.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        code_ = 0;
        message_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Error_descriptor;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Error getDefaultInstanceForType() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.Error.getDefaultInstance();
      }

      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Error build() {
        com.sparrowwallet.lark.bitbox02.generated.Hww.Error result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Error buildPartial() {
        com.sparrowwallet.lark.bitbox02.generated.Hww.Error result = new com.sparrowwallet.lark.bitbox02.generated.Hww.Error(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.sparrowwallet.lark.bitbox02.generated.Hww.Error result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.code_ = code_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.message_ = message_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sparrowwallet.lark.bitbox02.generated.Hww.Error) {
          return mergeFrom((com.sparrowwallet.lark.bitbox02.generated.Hww.Error)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sparrowwallet.lark.bitbox02.generated.Hww.Error other) {
        if (other == com.sparrowwallet.lark.bitbox02.generated.Hww.Error.getDefaultInstance()) return this;
        if (other.getCode() != 0) {
          setCode(other.getCode());
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                code_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                message_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int code_ ;
      /**
       * <code>int32 code = 1;</code>
       * @return The code.
       */
      @java.lang.Override
      public int getCode() {
        return code_;
      }
      /**
       * <code>int32 code = 1;</code>
       * @param value The code to set.
       * @return This builder for chaining.
       */
      public Builder setCode(int value) {

        code_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 code = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>string message = 2;</code>
       * @return The message.
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string message = 2;</code>
       * @return The bytes for message.
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message = 2;</code>
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        message_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string message = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessage() {
        message_ = getDefaultInstance().getMessage();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string message = 2;</code>
       * @param value The bytes for message to set.
       * @return This builder for chaining.
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        message_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sparrowwallet.lark.bitbox02.generated.Error)
    }

    // @@protoc_insertion_point(class_scope:com.sparrowwallet.lark.bitbox02.generated.Error)
    private static final com.sparrowwallet.lark.bitbox02.generated.Hww.Error DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sparrowwallet.lark.bitbox02.generated.Hww.Error();
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Error getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Error>
        PARSER = new com.google.protobuf.AbstractParser<Error>() {
      @java.lang.Override
      public Error parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Error> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Error> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Hww.Error getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SuccessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sparrowwallet.lark.bitbox02.generated.Success)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.sparrowwallet.lark.bitbox02.generated.Success}
   */
  public static final class Success extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.sparrowwallet.lark.bitbox02.generated.Success)
      SuccessOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        Success.class.getName());
    }
    // Use Success.newBuilder() to construct.
    private Success(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Success() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Success_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Success_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sparrowwallet.lark.bitbox02.generated.Hww.Success.class, com.sparrowwallet.lark.bitbox02.generated.Hww.Success.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sparrowwallet.lark.bitbox02.generated.Hww.Success)) {
        return super.equals(obj);
      }
      com.sparrowwallet.lark.bitbox02.generated.Hww.Success other = (com.sparrowwallet.lark.bitbox02.generated.Hww.Success) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Success parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Success parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Success parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Success parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Success parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Success parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Success parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Success parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Success parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Success parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Success parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Success parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sparrowwallet.lark.bitbox02.generated.Hww.Success prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sparrowwallet.lark.bitbox02.generated.Success}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sparrowwallet.lark.bitbox02.generated.Success)
        com.sparrowwallet.lark.bitbox02.generated.Hww.SuccessOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Success_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Success_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sparrowwallet.lark.bitbox02.generated.Hww.Success.class, com.sparrowwallet.lark.bitbox02.generated.Hww.Success.Builder.class);
      }

      // Construct using com.sparrowwallet.lark.bitbox02.generated.Hww.Success.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Success_descriptor;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Success getDefaultInstanceForType() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.Success.getDefaultInstance();
      }

      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Success build() {
        com.sparrowwallet.lark.bitbox02.generated.Hww.Success result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Success buildPartial() {
        com.sparrowwallet.lark.bitbox02.generated.Hww.Success result = new com.sparrowwallet.lark.bitbox02.generated.Hww.Success(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sparrowwallet.lark.bitbox02.generated.Hww.Success) {
          return mergeFrom((com.sparrowwallet.lark.bitbox02.generated.Hww.Success)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sparrowwallet.lark.bitbox02.generated.Hww.Success other) {
        if (other == com.sparrowwallet.lark.bitbox02.generated.Hww.Success.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sparrowwallet.lark.bitbox02.generated.Success)
    }

    // @@protoc_insertion_point(class_scope:com.sparrowwallet.lark.bitbox02.generated.Success)
    private static final com.sparrowwallet.lark.bitbox02.generated.Hww.Success DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sparrowwallet.lark.bitbox02.generated.Hww.Success();
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Success getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Success>
        PARSER = new com.google.protobuf.AbstractParser<Success>() {
      @java.lang.Override
      public Success parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Success> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Success> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Hww.Success getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sparrowwallet.lark.bitbox02.generated.Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * removed: RandomNumberRequest random_number = 1;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceNameRequest device_name = 2;</code>
     * @return Whether the deviceName field is set.
     */
    boolean hasDeviceName();
    /**
     * <pre>
     * removed: RandomNumberRequest random_number = 1;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceNameRequest device_name = 2;</code>
     * @return The deviceName.
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest getDeviceName();
    /**
     * <pre>
     * removed: RandomNumberRequest random_number = 1;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceNameRequest device_name = 2;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequestOrBuilder getDeviceNameOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceLanguageRequest device_language = 3;</code>
     * @return Whether the deviceLanguage field is set.
     */
    boolean hasDeviceLanguage();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceLanguageRequest device_language = 3;</code>
     * @return The deviceLanguage.
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest getDeviceLanguage();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceLanguageRequest device_language = 3;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequestOrBuilder getDeviceLanguageOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoRequest device_info = 4;</code>
     * @return Whether the deviceInfo field is set.
     */
    boolean hasDeviceInfo();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoRequest device_info = 4;</code>
     * @return The deviceInfo.
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest getDeviceInfo();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoRequest device_info = 4;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequestOrBuilder getDeviceInfoOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetPasswordRequest set_password = 5;</code>
     * @return Whether the setPassword field is set.
     */
    boolean hasSetPassword();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetPasswordRequest set_password = 5;</code>
     * @return The setPassword.
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest getSetPassword();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetPasswordRequest set_password = 5;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequestOrBuilder getSetPasswordOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CreateBackupRequest create_backup = 6;</code>
     * @return Whether the createBackup field is set.
     */
    boolean hasCreateBackup();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CreateBackupRequest create_backup = 6;</code>
     * @return The createBackup.
     */
    com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest getCreateBackup();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CreateBackupRequest create_backup = 6;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequestOrBuilder getCreateBackupOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ShowMnemonicRequest show_mnemonic = 7;</code>
     * @return Whether the showMnemonic field is set.
     */
    boolean hasShowMnemonic();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ShowMnemonicRequest show_mnemonic = 7;</code>
     * @return The showMnemonic.
     */
    com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest getShowMnemonic();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ShowMnemonicRequest show_mnemonic = 7;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequestOrBuilder getShowMnemonicOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCPubRequest btc_pub = 8;</code>
     * @return Whether the btcPub field is set.
     */
    boolean hasBtcPub();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCPubRequest btc_pub = 8;</code>
     * @return The btcPub.
     */
    com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest getBtcPub();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCPubRequest btc_pub = 8;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequestOrBuilder getBtcPubOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInitRequest btc_sign_init = 9;</code>
     * @return Whether the btcSignInit field is set.
     */
    boolean hasBtcSignInit();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInitRequest btc_sign_init = 9;</code>
     * @return The btcSignInit.
     */
    com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest getBtcSignInit();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInitRequest btc_sign_init = 9;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequestOrBuilder getBtcSignInitOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInputRequest btc_sign_input = 10;</code>
     * @return Whether the btcSignInput field is set.
     */
    boolean hasBtcSignInput();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInputRequest btc_sign_input = 10;</code>
     * @return The btcSignInput.
     */
    com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest getBtcSignInput();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInputRequest btc_sign_input = 10;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequestOrBuilder getBtcSignInputOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignOutputRequest btc_sign_output = 11;</code>
     * @return Whether the btcSignOutput field is set.
     */
    boolean hasBtcSignOutput();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignOutputRequest btc_sign_output = 11;</code>
     * @return The btcSignOutput.
     */
    com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest getBtcSignOutput();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignOutputRequest btc_sign_output = 11;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequestOrBuilder getBtcSignOutputOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.InsertRemoveSDCardRequest insert_remove_sdcard = 12;</code>
     * @return Whether the insertRemoveSdcard field is set.
     */
    boolean hasInsertRemoveSdcard();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.InsertRemoveSDCardRequest insert_remove_sdcard = 12;</code>
     * @return The insertRemoveSdcard.
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest getInsertRemoveSdcard();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.InsertRemoveSDCardRequest insert_remove_sdcard = 12;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequestOrBuilder getInsertRemoveSdcardOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardRequest check_sdcard = 13;</code>
     * @return Whether the checkSdcard field is set.
     */
    boolean hasCheckSdcard();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardRequest check_sdcard = 13;</code>
     * @return The checkSdcard.
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest getCheckSdcard();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardRequest check_sdcard = 13;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequestOrBuilder getCheckSdcardOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetMnemonicPassphraseEnabledRequest set_mnemonic_passphrase_enabled = 14;</code>
     * @return Whether the setMnemonicPassphraseEnabled field is set.
     */
    boolean hasSetMnemonicPassphraseEnabled();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetMnemonicPassphraseEnabledRequest set_mnemonic_passphrase_enabled = 14;</code>
     * @return The setMnemonicPassphraseEnabled.
     */
    com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest getSetMnemonicPassphraseEnabled();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetMnemonicPassphraseEnabledRequest set_mnemonic_passphrase_enabled = 14;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequestOrBuilder getSetMnemonicPassphraseEnabledOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsRequest list_backups = 15;</code>
     * @return Whether the listBackups field is set.
     */
    boolean hasListBackups();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsRequest list_backups = 15;</code>
     * @return The listBackups.
     */
    com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest getListBackups();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsRequest list_backups = 15;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequestOrBuilder getListBackupsOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreBackupRequest restore_backup = 16;</code>
     * @return Whether the restoreBackup field is set.
     */
    boolean hasRestoreBackup();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreBackupRequest restore_backup = 16;</code>
     * @return The restoreBackup.
     */
    com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest getRestoreBackup();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreBackupRequest restore_backup = 16;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequestOrBuilder getRestoreBackupOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationRequest perform_attestation = 17;</code>
     * @return Whether the performAttestation field is set.
     */
    boolean hasPerformAttestation();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationRequest perform_attestation = 17;</code>
     * @return The performAttestation.
     */
    com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest getPerformAttestation();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationRequest perform_attestation = 17;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequestOrBuilder getPerformAttestationOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RebootRequest reboot = 18;</code>
     * @return Whether the reboot field is set.
     */
    boolean hasReboot();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RebootRequest reboot = 18;</code>
     * @return The reboot.
     */
    com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest getReboot();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RebootRequest reboot = 18;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.System.RebootRequestOrBuilder getRebootOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupRequest check_backup = 19;</code>
     * @return Whether the checkBackup field is set.
     */
    boolean hasCheckBackup();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupRequest check_backup = 19;</code>
     * @return The checkBackup.
     */
    com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest getCheckBackup();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupRequest check_backup = 19;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequestOrBuilder getCheckBackupOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ResetRequest reset = 21;</code>
     * @return Whether the reset field is set.
     */
    boolean hasReset();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ResetRequest reset = 21;</code>
     * @return The reset.
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest getReset();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ResetRequest reset = 21;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequestOrBuilder getResetOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreFromMnemonicRequest restore_from_mnemonic = 22;</code>
     * @return Whether the restoreFromMnemonic field is set.
     */
    boolean hasRestoreFromMnemonic();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreFromMnemonicRequest restore_from_mnemonic = 22;</code>
     * @return The restoreFromMnemonic.
     */
    com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest getRestoreFromMnemonic();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreFromMnemonicRequest restore_from_mnemonic = 22;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequestOrBuilder getRestoreFromMnemonicOrBuilder();

    /**
     * <pre>
     * removed: BitBoxBaseRequest bitboxbase = 23;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintRequest fingerprint = 24;</code>
     * @return Whether the fingerprint field is set.
     */
    boolean hasFingerprint();
    /**
     * <pre>
     * removed: BitBoxBaseRequest bitboxbase = 23;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintRequest fingerprint = 24;</code>
     * @return The fingerprint.
     */
    com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest getFingerprint();
    /**
     * <pre>
     * removed: BitBoxBaseRequest bitboxbase = 23;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintRequest fingerprint = 24;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequestOrBuilder getFingerprintOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCRequest btc = 25;</code>
     * @return Whether the btc field is set.
     */
    boolean hasBtc();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCRequest btc = 25;</code>
     * @return The btc.
     */
    com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest getBtc();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCRequest btc = 25;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequestOrBuilder getBtcOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyRequest electrum_encryption_key = 26;</code>
     * @return Whether the electrumEncryptionKey field is set.
     */
    boolean hasElectrumEncryptionKey();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyRequest electrum_encryption_key = 26;</code>
     * @return The electrumEncryptionKey.
     */
    com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest getElectrumEncryptionKey();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyRequest electrum_encryption_key = 26;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequestOrBuilder getElectrumEncryptionKeyOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Request bip85 = 28;</code>
     * @return Whether the bip85 field is set.
     */
    boolean hasBip85();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Request bip85 = 28;</code>
     * @return The bip85.
     */
    com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request getBip85();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Request bip85 = 28;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85RequestOrBuilder getBip85OrBuilder();

    com.sparrowwallet.lark.bitbox02.generated.Hww.Request.RequestCase getRequestCase();
  }
  /**
   * Protobuf type {@code com.sparrowwallet.lark.bitbox02.generated.Request}
   */
  public static final class Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.sparrowwallet.lark.bitbox02.generated.Request)
      RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        Request.class.getName());
    }
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Request() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sparrowwallet.lark.bitbox02.generated.Hww.Request.class, com.sparrowwallet.lark.bitbox02.generated.Hww.Request.Builder.class);
    }

    private int requestCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object request_;
    public enum RequestCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      DEVICE_NAME(2),
      DEVICE_LANGUAGE(3),
      DEVICE_INFO(4),
      SET_PASSWORD(5),
      CREATE_BACKUP(6),
      SHOW_MNEMONIC(7),
      BTC_PUB(8),
      BTC_SIGN_INIT(9),
      BTC_SIGN_INPUT(10),
      BTC_SIGN_OUTPUT(11),
      INSERT_REMOVE_SDCARD(12),
      CHECK_SDCARD(13),
      SET_MNEMONIC_PASSPHRASE_ENABLED(14),
      LIST_BACKUPS(15),
      RESTORE_BACKUP(16),
      PERFORM_ATTESTATION(17),
      REBOOT(18),
      CHECK_BACKUP(19),
      RESET(21),
      RESTORE_FROM_MNEMONIC(22),
      FINGERPRINT(24),
      BTC(25),
      ELECTRUM_ENCRYPTION_KEY(26),
      BIP85(28),
      REQUEST_NOT_SET(0);
      private final int value;
      private RequestCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RequestCase valueOf(int value) {
        return forNumber(value);
      }

      public static RequestCase forNumber(int value) {
        switch (value) {
          case 2: return DEVICE_NAME;
          case 3: return DEVICE_LANGUAGE;
          case 4: return DEVICE_INFO;
          case 5: return SET_PASSWORD;
          case 6: return CREATE_BACKUP;
          case 7: return SHOW_MNEMONIC;
          case 8: return BTC_PUB;
          case 9: return BTC_SIGN_INIT;
          case 10: return BTC_SIGN_INPUT;
          case 11: return BTC_SIGN_OUTPUT;
          case 12: return INSERT_REMOVE_SDCARD;
          case 13: return CHECK_SDCARD;
          case 14: return SET_MNEMONIC_PASSPHRASE_ENABLED;
          case 15: return LIST_BACKUPS;
          case 16: return RESTORE_BACKUP;
          case 17: return PERFORM_ATTESTATION;
          case 18: return REBOOT;
          case 19: return CHECK_BACKUP;
          case 21: return RESET;
          case 22: return RESTORE_FROM_MNEMONIC;
          case 24: return FINGERPRINT;
          case 25: return BTC;
          case 26: return ELECTRUM_ENCRYPTION_KEY;
          case 28: return BIP85;
          case 0: return REQUEST_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public RequestCase
    getRequestCase() {
      return RequestCase.forNumber(
          requestCase_);
    }

    public static final int DEVICE_NAME_FIELD_NUMBER = 2;
    /**
     * <pre>
     * removed: RandomNumberRequest random_number = 1;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceNameRequest device_name = 2;</code>
     * @return Whether the deviceName field is set.
     */
    @java.lang.Override
    public boolean hasDeviceName() {
      return requestCase_ == 2;
    }
    /**
     * <pre>
     * removed: RandomNumberRequest random_number = 1;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceNameRequest device_name = 2;</code>
     * @return The deviceName.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest getDeviceName() {
      if (requestCase_ == 2) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest.getDefaultInstance();
    }
    /**
     * <pre>
     * removed: RandomNumberRequest random_number = 1;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceNameRequest device_name = 2;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequestOrBuilder getDeviceNameOrBuilder() {
      if (requestCase_ == 2) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest.getDefaultInstance();
    }

    public static final int DEVICE_LANGUAGE_FIELD_NUMBER = 3;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceLanguageRequest device_language = 3;</code>
     * @return Whether the deviceLanguage field is set.
     */
    @java.lang.Override
    public boolean hasDeviceLanguage() {
      return requestCase_ == 3;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceLanguageRequest device_language = 3;</code>
     * @return The deviceLanguage.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest getDeviceLanguage() {
      if (requestCase_ == 3) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceLanguageRequest device_language = 3;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequestOrBuilder getDeviceLanguageOrBuilder() {
      if (requestCase_ == 3) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest.getDefaultInstance();
    }

    public static final int DEVICE_INFO_FIELD_NUMBER = 4;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoRequest device_info = 4;</code>
     * @return Whether the deviceInfo field is set.
     */
    @java.lang.Override
    public boolean hasDeviceInfo() {
      return requestCase_ == 4;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoRequest device_info = 4;</code>
     * @return The deviceInfo.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest getDeviceInfo() {
      if (requestCase_ == 4) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoRequest device_info = 4;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequestOrBuilder getDeviceInfoOrBuilder() {
      if (requestCase_ == 4) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest.getDefaultInstance();
    }

    public static final int SET_PASSWORD_FIELD_NUMBER = 5;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetPasswordRequest set_password = 5;</code>
     * @return Whether the setPassword field is set.
     */
    @java.lang.Override
    public boolean hasSetPassword() {
      return requestCase_ == 5;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetPasswordRequest set_password = 5;</code>
     * @return The setPassword.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest getSetPassword() {
      if (requestCase_ == 5) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetPasswordRequest set_password = 5;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequestOrBuilder getSetPasswordOrBuilder() {
      if (requestCase_ == 5) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest.getDefaultInstance();
    }

    public static final int CREATE_BACKUP_FIELD_NUMBER = 6;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CreateBackupRequest create_backup = 6;</code>
     * @return Whether the createBackup field is set.
     */
    @java.lang.Override
    public boolean hasCreateBackup() {
      return requestCase_ == 6;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CreateBackupRequest create_backup = 6;</code>
     * @return The createBackup.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest getCreateBackup() {
      if (requestCase_ == 6) {
         return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CreateBackupRequest create_backup = 6;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequestOrBuilder getCreateBackupOrBuilder() {
      if (requestCase_ == 6) {
         return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest.getDefaultInstance();
    }

    public static final int SHOW_MNEMONIC_FIELD_NUMBER = 7;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ShowMnemonicRequest show_mnemonic = 7;</code>
     * @return Whether the showMnemonic field is set.
     */
    @java.lang.Override
    public boolean hasShowMnemonic() {
      return requestCase_ == 7;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ShowMnemonicRequest show_mnemonic = 7;</code>
     * @return The showMnemonic.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest getShowMnemonic() {
      if (requestCase_ == 7) {
         return (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ShowMnemonicRequest show_mnemonic = 7;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequestOrBuilder getShowMnemonicOrBuilder() {
      if (requestCase_ == 7) {
         return (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest.getDefaultInstance();
    }

    public static final int BTC_PUB_FIELD_NUMBER = 8;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCPubRequest btc_pub = 8;</code>
     * @return Whether the btcPub field is set.
     */
    @java.lang.Override
    public boolean hasBtcPub() {
      return requestCase_ == 8;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCPubRequest btc_pub = 8;</code>
     * @return The btcPub.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest getBtcPub() {
      if (requestCase_ == 8) {
         return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCPubRequest btc_pub = 8;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequestOrBuilder getBtcPubOrBuilder() {
      if (requestCase_ == 8) {
         return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest.getDefaultInstance();
    }

    public static final int BTC_SIGN_INIT_FIELD_NUMBER = 9;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInitRequest btc_sign_init = 9;</code>
     * @return Whether the btcSignInit field is set.
     */
    @java.lang.Override
    public boolean hasBtcSignInit() {
      return requestCase_ == 9;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInitRequest btc_sign_init = 9;</code>
     * @return The btcSignInit.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest getBtcSignInit() {
      if (requestCase_ == 9) {
         return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInitRequest btc_sign_init = 9;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequestOrBuilder getBtcSignInitOrBuilder() {
      if (requestCase_ == 9) {
         return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest.getDefaultInstance();
    }

    public static final int BTC_SIGN_INPUT_FIELD_NUMBER = 10;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInputRequest btc_sign_input = 10;</code>
     * @return Whether the btcSignInput field is set.
     */
    @java.lang.Override
    public boolean hasBtcSignInput() {
      return requestCase_ == 10;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInputRequest btc_sign_input = 10;</code>
     * @return The btcSignInput.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest getBtcSignInput() {
      if (requestCase_ == 10) {
         return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInputRequest btc_sign_input = 10;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequestOrBuilder getBtcSignInputOrBuilder() {
      if (requestCase_ == 10) {
         return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest.getDefaultInstance();
    }

    public static final int BTC_SIGN_OUTPUT_FIELD_NUMBER = 11;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignOutputRequest btc_sign_output = 11;</code>
     * @return Whether the btcSignOutput field is set.
     */
    @java.lang.Override
    public boolean hasBtcSignOutput() {
      return requestCase_ == 11;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignOutputRequest btc_sign_output = 11;</code>
     * @return The btcSignOutput.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest getBtcSignOutput() {
      if (requestCase_ == 11) {
         return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignOutputRequest btc_sign_output = 11;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequestOrBuilder getBtcSignOutputOrBuilder() {
      if (requestCase_ == 11) {
         return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest.getDefaultInstance();
    }

    public static final int INSERT_REMOVE_SDCARD_FIELD_NUMBER = 12;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.InsertRemoveSDCardRequest insert_remove_sdcard = 12;</code>
     * @return Whether the insertRemoveSdcard field is set.
     */
    @java.lang.Override
    public boolean hasInsertRemoveSdcard() {
      return requestCase_ == 12;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.InsertRemoveSDCardRequest insert_remove_sdcard = 12;</code>
     * @return The insertRemoveSdcard.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest getInsertRemoveSdcard() {
      if (requestCase_ == 12) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.InsertRemoveSDCardRequest insert_remove_sdcard = 12;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequestOrBuilder getInsertRemoveSdcardOrBuilder() {
      if (requestCase_ == 12) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest.getDefaultInstance();
    }

    public static final int CHECK_SDCARD_FIELD_NUMBER = 13;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardRequest check_sdcard = 13;</code>
     * @return Whether the checkSdcard field is set.
     */
    @java.lang.Override
    public boolean hasCheckSdcard() {
      return requestCase_ == 13;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardRequest check_sdcard = 13;</code>
     * @return The checkSdcard.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest getCheckSdcard() {
      if (requestCase_ == 13) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardRequest check_sdcard = 13;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequestOrBuilder getCheckSdcardOrBuilder() {
      if (requestCase_ == 13) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest.getDefaultInstance();
    }

    public static final int SET_MNEMONIC_PASSPHRASE_ENABLED_FIELD_NUMBER = 14;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetMnemonicPassphraseEnabledRequest set_mnemonic_passphrase_enabled = 14;</code>
     * @return Whether the setMnemonicPassphraseEnabled field is set.
     */
    @java.lang.Override
    public boolean hasSetMnemonicPassphraseEnabled() {
      return requestCase_ == 14;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetMnemonicPassphraseEnabledRequest set_mnemonic_passphrase_enabled = 14;</code>
     * @return The setMnemonicPassphraseEnabled.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest getSetMnemonicPassphraseEnabled() {
      if (requestCase_ == 14) {
         return (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.SetMnemonicPassphraseEnabledRequest set_mnemonic_passphrase_enabled = 14;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequestOrBuilder getSetMnemonicPassphraseEnabledOrBuilder() {
      if (requestCase_ == 14) {
         return (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest.getDefaultInstance();
    }

    public static final int LIST_BACKUPS_FIELD_NUMBER = 15;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsRequest list_backups = 15;</code>
     * @return Whether the listBackups field is set.
     */
    @java.lang.Override
    public boolean hasListBackups() {
      return requestCase_ == 15;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsRequest list_backups = 15;</code>
     * @return The listBackups.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest getListBackups() {
      if (requestCase_ == 15) {
         return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsRequest list_backups = 15;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequestOrBuilder getListBackupsOrBuilder() {
      if (requestCase_ == 15) {
         return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest.getDefaultInstance();
    }

    public static final int RESTORE_BACKUP_FIELD_NUMBER = 16;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreBackupRequest restore_backup = 16;</code>
     * @return Whether the restoreBackup field is set.
     */
    @java.lang.Override
    public boolean hasRestoreBackup() {
      return requestCase_ == 16;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreBackupRequest restore_backup = 16;</code>
     * @return The restoreBackup.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest getRestoreBackup() {
      if (requestCase_ == 16) {
         return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreBackupRequest restore_backup = 16;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequestOrBuilder getRestoreBackupOrBuilder() {
      if (requestCase_ == 16) {
         return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest.getDefaultInstance();
    }

    public static final int PERFORM_ATTESTATION_FIELD_NUMBER = 17;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationRequest perform_attestation = 17;</code>
     * @return Whether the performAttestation field is set.
     */
    @java.lang.Override
    public boolean hasPerformAttestation() {
      return requestCase_ == 17;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationRequest perform_attestation = 17;</code>
     * @return The performAttestation.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest getPerformAttestation() {
      if (requestCase_ == 17) {
         return (com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationRequest perform_attestation = 17;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequestOrBuilder getPerformAttestationOrBuilder() {
      if (requestCase_ == 17) {
         return (com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest.getDefaultInstance();
    }

    public static final int REBOOT_FIELD_NUMBER = 18;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RebootRequest reboot = 18;</code>
     * @return Whether the reboot field is set.
     */
    @java.lang.Override
    public boolean hasReboot() {
      return requestCase_ == 18;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RebootRequest reboot = 18;</code>
     * @return The reboot.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest getReboot() {
      if (requestCase_ == 18) {
         return (com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RebootRequest reboot = 18;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.System.RebootRequestOrBuilder getRebootOrBuilder() {
      if (requestCase_ == 18) {
         return (com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest.getDefaultInstance();
    }

    public static final int CHECK_BACKUP_FIELD_NUMBER = 19;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupRequest check_backup = 19;</code>
     * @return Whether the checkBackup field is set.
     */
    @java.lang.Override
    public boolean hasCheckBackup() {
      return requestCase_ == 19;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupRequest check_backup = 19;</code>
     * @return The checkBackup.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest getCheckBackup() {
      if (requestCase_ == 19) {
         return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupRequest check_backup = 19;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequestOrBuilder getCheckBackupOrBuilder() {
      if (requestCase_ == 19) {
         return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest.getDefaultInstance();
    }

    public static final int RESET_FIELD_NUMBER = 21;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ResetRequest reset = 21;</code>
     * @return Whether the reset field is set.
     */
    @java.lang.Override
    public boolean hasReset() {
      return requestCase_ == 21;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ResetRequest reset = 21;</code>
     * @return The reset.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest getReset() {
      if (requestCase_ == 21) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ResetRequest reset = 21;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequestOrBuilder getResetOrBuilder() {
      if (requestCase_ == 21) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest.getDefaultInstance();
    }

    public static final int RESTORE_FROM_MNEMONIC_FIELD_NUMBER = 22;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreFromMnemonicRequest restore_from_mnemonic = 22;</code>
     * @return Whether the restoreFromMnemonic field is set.
     */
    @java.lang.Override
    public boolean hasRestoreFromMnemonic() {
      return requestCase_ == 22;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreFromMnemonicRequest restore_from_mnemonic = 22;</code>
     * @return The restoreFromMnemonic.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest getRestoreFromMnemonic() {
      if (requestCase_ == 22) {
         return (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreFromMnemonicRequest restore_from_mnemonic = 22;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequestOrBuilder getRestoreFromMnemonicOrBuilder() {
      if (requestCase_ == 22) {
         return (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest.getDefaultInstance();
    }

    public static final int FINGERPRINT_FIELD_NUMBER = 24;
    /**
     * <pre>
     * removed: BitBoxBaseRequest bitboxbase = 23;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintRequest fingerprint = 24;</code>
     * @return Whether the fingerprint field is set.
     */
    @java.lang.Override
    public boolean hasFingerprint() {
      return requestCase_ == 24;
    }
    /**
     * <pre>
     * removed: BitBoxBaseRequest bitboxbase = 23;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintRequest fingerprint = 24;</code>
     * @return The fingerprint.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest getFingerprint() {
      if (requestCase_ == 24) {
         return (com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest.getDefaultInstance();
    }
    /**
     * <pre>
     * removed: BitBoxBaseRequest bitboxbase = 23;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintRequest fingerprint = 24;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequestOrBuilder getFingerprintOrBuilder() {
      if (requestCase_ == 24) {
         return (com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest.getDefaultInstance();
    }

    public static final int BTC_FIELD_NUMBER = 25;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCRequest btc = 25;</code>
     * @return Whether the btc field is set.
     */
    @java.lang.Override
    public boolean hasBtc() {
      return requestCase_ == 25;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCRequest btc = 25;</code>
     * @return The btc.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest getBtc() {
      if (requestCase_ == 25) {
         return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCRequest btc = 25;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequestOrBuilder getBtcOrBuilder() {
      if (requestCase_ == 25) {
         return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest.getDefaultInstance();
    }

    public static final int ELECTRUM_ENCRYPTION_KEY_FIELD_NUMBER = 26;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyRequest electrum_encryption_key = 26;</code>
     * @return Whether the electrumEncryptionKey field is set.
     */
    @java.lang.Override
    public boolean hasElectrumEncryptionKey() {
      return requestCase_ == 26;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyRequest electrum_encryption_key = 26;</code>
     * @return The electrumEncryptionKey.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest getElectrumEncryptionKey() {
      if (requestCase_ == 26) {
         return (com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyRequest electrum_encryption_key = 26;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequestOrBuilder getElectrumEncryptionKeyOrBuilder() {
      if (requestCase_ == 26) {
         return (com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest.getDefaultInstance();
    }

    public static final int BIP85_FIELD_NUMBER = 28;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Request bip85 = 28;</code>
     * @return Whether the bip85 field is set.
     */
    @java.lang.Override
    public boolean hasBip85() {
      return requestCase_ == 28;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Request bip85 = 28;</code>
     * @return The bip85.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request getBip85() {
      if (requestCase_ == 28) {
         return (com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Request bip85 = 28;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85RequestOrBuilder getBip85OrBuilder() {
      if (requestCase_ == 28) {
         return (com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request) request_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (requestCase_ == 2) {
        output.writeMessage(2, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest) request_);
      }
      if (requestCase_ == 3) {
        output.writeMessage(3, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest) request_);
      }
      if (requestCase_ == 4) {
        output.writeMessage(4, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest) request_);
      }
      if (requestCase_ == 5) {
        output.writeMessage(5, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest) request_);
      }
      if (requestCase_ == 6) {
        output.writeMessage(6, (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest) request_);
      }
      if (requestCase_ == 7) {
        output.writeMessage(7, (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest) request_);
      }
      if (requestCase_ == 8) {
        output.writeMessage(8, (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest) request_);
      }
      if (requestCase_ == 9) {
        output.writeMessage(9, (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest) request_);
      }
      if (requestCase_ == 10) {
        output.writeMessage(10, (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest) request_);
      }
      if (requestCase_ == 11) {
        output.writeMessage(11, (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest) request_);
      }
      if (requestCase_ == 12) {
        output.writeMessage(12, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest) request_);
      }
      if (requestCase_ == 13) {
        output.writeMessage(13, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest) request_);
      }
      if (requestCase_ == 14) {
        output.writeMessage(14, (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest) request_);
      }
      if (requestCase_ == 15) {
        output.writeMessage(15, (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest) request_);
      }
      if (requestCase_ == 16) {
        output.writeMessage(16, (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest) request_);
      }
      if (requestCase_ == 17) {
        output.writeMessage(17, (com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest) request_);
      }
      if (requestCase_ == 18) {
        output.writeMessage(18, (com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest) request_);
      }
      if (requestCase_ == 19) {
        output.writeMessage(19, (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest) request_);
      }
      if (requestCase_ == 21) {
        output.writeMessage(21, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest) request_);
      }
      if (requestCase_ == 22) {
        output.writeMessage(22, (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest) request_);
      }
      if (requestCase_ == 24) {
        output.writeMessage(24, (com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest) request_);
      }
      if (requestCase_ == 25) {
        output.writeMessage(25, (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest) request_);
      }
      if (requestCase_ == 26) {
        output.writeMessage(26, (com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest) request_);
      }
      if (requestCase_ == 28) {
        output.writeMessage(28, (com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request) request_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (requestCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest) request_);
      }
      if (requestCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest) request_);
      }
      if (requestCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest) request_);
      }
      if (requestCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest) request_);
      }
      if (requestCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest) request_);
      }
      if (requestCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest) request_);
      }
      if (requestCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest) request_);
      }
      if (requestCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest) request_);
      }
      if (requestCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest) request_);
      }
      if (requestCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest) request_);
      }
      if (requestCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest) request_);
      }
      if (requestCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest) request_);
      }
      if (requestCase_ == 14) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest) request_);
      }
      if (requestCase_ == 15) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest) request_);
      }
      if (requestCase_ == 16) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest) request_);
      }
      if (requestCase_ == 17) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, (com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest) request_);
      }
      if (requestCase_ == 18) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, (com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest) request_);
      }
      if (requestCase_ == 19) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest) request_);
      }
      if (requestCase_ == 21) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest) request_);
      }
      if (requestCase_ == 22) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest) request_);
      }
      if (requestCase_ == 24) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, (com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest) request_);
      }
      if (requestCase_ == 25) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest) request_);
      }
      if (requestCase_ == 26) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, (com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest) request_);
      }
      if (requestCase_ == 28) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, (com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request) request_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sparrowwallet.lark.bitbox02.generated.Hww.Request)) {
        return super.equals(obj);
      }
      com.sparrowwallet.lark.bitbox02.generated.Hww.Request other = (com.sparrowwallet.lark.bitbox02.generated.Hww.Request) obj;

      if (!getRequestCase().equals(other.getRequestCase())) return false;
      switch (requestCase_) {
        case 2:
          if (!getDeviceName()
              .equals(other.getDeviceName())) return false;
          break;
        case 3:
          if (!getDeviceLanguage()
              .equals(other.getDeviceLanguage())) return false;
          break;
        case 4:
          if (!getDeviceInfo()
              .equals(other.getDeviceInfo())) return false;
          break;
        case 5:
          if (!getSetPassword()
              .equals(other.getSetPassword())) return false;
          break;
        case 6:
          if (!getCreateBackup()
              .equals(other.getCreateBackup())) return false;
          break;
        case 7:
          if (!getShowMnemonic()
              .equals(other.getShowMnemonic())) return false;
          break;
        case 8:
          if (!getBtcPub()
              .equals(other.getBtcPub())) return false;
          break;
        case 9:
          if (!getBtcSignInit()
              .equals(other.getBtcSignInit())) return false;
          break;
        case 10:
          if (!getBtcSignInput()
              .equals(other.getBtcSignInput())) return false;
          break;
        case 11:
          if (!getBtcSignOutput()
              .equals(other.getBtcSignOutput())) return false;
          break;
        case 12:
          if (!getInsertRemoveSdcard()
              .equals(other.getInsertRemoveSdcard())) return false;
          break;
        case 13:
          if (!getCheckSdcard()
              .equals(other.getCheckSdcard())) return false;
          break;
        case 14:
          if (!getSetMnemonicPassphraseEnabled()
              .equals(other.getSetMnemonicPassphraseEnabled())) return false;
          break;
        case 15:
          if (!getListBackups()
              .equals(other.getListBackups())) return false;
          break;
        case 16:
          if (!getRestoreBackup()
              .equals(other.getRestoreBackup())) return false;
          break;
        case 17:
          if (!getPerformAttestation()
              .equals(other.getPerformAttestation())) return false;
          break;
        case 18:
          if (!getReboot()
              .equals(other.getReboot())) return false;
          break;
        case 19:
          if (!getCheckBackup()
              .equals(other.getCheckBackup())) return false;
          break;
        case 21:
          if (!getReset()
              .equals(other.getReset())) return false;
          break;
        case 22:
          if (!getRestoreFromMnemonic()
              .equals(other.getRestoreFromMnemonic())) return false;
          break;
        case 24:
          if (!getFingerprint()
              .equals(other.getFingerprint())) return false;
          break;
        case 25:
          if (!getBtc()
              .equals(other.getBtc())) return false;
          break;
        case 26:
          if (!getElectrumEncryptionKey()
              .equals(other.getElectrumEncryptionKey())) return false;
          break;
        case 28:
          if (!getBip85()
              .equals(other.getBip85())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (requestCase_) {
        case 2:
          hash = (37 * hash) + DEVICE_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceName().hashCode();
          break;
        case 3:
          hash = (37 * hash) + DEVICE_LANGUAGE_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceLanguage().hashCode();
          break;
        case 4:
          hash = (37 * hash) + DEVICE_INFO_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceInfo().hashCode();
          break;
        case 5:
          hash = (37 * hash) + SET_PASSWORD_FIELD_NUMBER;
          hash = (53 * hash) + getSetPassword().hashCode();
          break;
        case 6:
          hash = (37 * hash) + CREATE_BACKUP_FIELD_NUMBER;
          hash = (53 * hash) + getCreateBackup().hashCode();
          break;
        case 7:
          hash = (37 * hash) + SHOW_MNEMONIC_FIELD_NUMBER;
          hash = (53 * hash) + getShowMnemonic().hashCode();
          break;
        case 8:
          hash = (37 * hash) + BTC_PUB_FIELD_NUMBER;
          hash = (53 * hash) + getBtcPub().hashCode();
          break;
        case 9:
          hash = (37 * hash) + BTC_SIGN_INIT_FIELD_NUMBER;
          hash = (53 * hash) + getBtcSignInit().hashCode();
          break;
        case 10:
          hash = (37 * hash) + BTC_SIGN_INPUT_FIELD_NUMBER;
          hash = (53 * hash) + getBtcSignInput().hashCode();
          break;
        case 11:
          hash = (37 * hash) + BTC_SIGN_OUTPUT_FIELD_NUMBER;
          hash = (53 * hash) + getBtcSignOutput().hashCode();
          break;
        case 12:
          hash = (37 * hash) + INSERT_REMOVE_SDCARD_FIELD_NUMBER;
          hash = (53 * hash) + getInsertRemoveSdcard().hashCode();
          break;
        case 13:
          hash = (37 * hash) + CHECK_SDCARD_FIELD_NUMBER;
          hash = (53 * hash) + getCheckSdcard().hashCode();
          break;
        case 14:
          hash = (37 * hash) + SET_MNEMONIC_PASSPHRASE_ENABLED_FIELD_NUMBER;
          hash = (53 * hash) + getSetMnemonicPassphraseEnabled().hashCode();
          break;
        case 15:
          hash = (37 * hash) + LIST_BACKUPS_FIELD_NUMBER;
          hash = (53 * hash) + getListBackups().hashCode();
          break;
        case 16:
          hash = (37 * hash) + RESTORE_BACKUP_FIELD_NUMBER;
          hash = (53 * hash) + getRestoreBackup().hashCode();
          break;
        case 17:
          hash = (37 * hash) + PERFORM_ATTESTATION_FIELD_NUMBER;
          hash = (53 * hash) + getPerformAttestation().hashCode();
          break;
        case 18:
          hash = (37 * hash) + REBOOT_FIELD_NUMBER;
          hash = (53 * hash) + getReboot().hashCode();
          break;
        case 19:
          hash = (37 * hash) + CHECK_BACKUP_FIELD_NUMBER;
          hash = (53 * hash) + getCheckBackup().hashCode();
          break;
        case 21:
          hash = (37 * hash) + RESET_FIELD_NUMBER;
          hash = (53 * hash) + getReset().hashCode();
          break;
        case 22:
          hash = (37 * hash) + RESTORE_FROM_MNEMONIC_FIELD_NUMBER;
          hash = (53 * hash) + getRestoreFromMnemonic().hashCode();
          break;
        case 24:
          hash = (37 * hash) + FINGERPRINT_FIELD_NUMBER;
          hash = (53 * hash) + getFingerprint().hashCode();
          break;
        case 25:
          hash = (37 * hash) + BTC_FIELD_NUMBER;
          hash = (53 * hash) + getBtc().hashCode();
          break;
        case 26:
          hash = (37 * hash) + ELECTRUM_ENCRYPTION_KEY_FIELD_NUMBER;
          hash = (53 * hash) + getElectrumEncryptionKey().hashCode();
          break;
        case 28:
          hash = (37 * hash) + BIP85_FIELD_NUMBER;
          hash = (53 * hash) + getBip85().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sparrowwallet.lark.bitbox02.generated.Hww.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sparrowwallet.lark.bitbox02.generated.Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sparrowwallet.lark.bitbox02.generated.Request)
        com.sparrowwallet.lark.bitbox02.generated.Hww.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sparrowwallet.lark.bitbox02.generated.Hww.Request.class, com.sparrowwallet.lark.bitbox02.generated.Hww.Request.Builder.class);
      }

      // Construct using com.sparrowwallet.lark.bitbox02.generated.Hww.Request.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (deviceNameBuilder_ != null) {
          deviceNameBuilder_.clear();
        }
        if (deviceLanguageBuilder_ != null) {
          deviceLanguageBuilder_.clear();
        }
        if (deviceInfoBuilder_ != null) {
          deviceInfoBuilder_.clear();
        }
        if (setPasswordBuilder_ != null) {
          setPasswordBuilder_.clear();
        }
        if (createBackupBuilder_ != null) {
          createBackupBuilder_.clear();
        }
        if (showMnemonicBuilder_ != null) {
          showMnemonicBuilder_.clear();
        }
        if (btcPubBuilder_ != null) {
          btcPubBuilder_.clear();
        }
        if (btcSignInitBuilder_ != null) {
          btcSignInitBuilder_.clear();
        }
        if (btcSignInputBuilder_ != null) {
          btcSignInputBuilder_.clear();
        }
        if (btcSignOutputBuilder_ != null) {
          btcSignOutputBuilder_.clear();
        }
        if (insertRemoveSdcardBuilder_ != null) {
          insertRemoveSdcardBuilder_.clear();
        }
        if (checkSdcardBuilder_ != null) {
          checkSdcardBuilder_.clear();
        }
        if (setMnemonicPassphraseEnabledBuilder_ != null) {
          setMnemonicPassphraseEnabledBuilder_.clear();
        }
        if (listBackupsBuilder_ != null) {
          listBackupsBuilder_.clear();
        }
        if (restoreBackupBuilder_ != null) {
          restoreBackupBuilder_.clear();
        }
        if (performAttestationBuilder_ != null) {
          performAttestationBuilder_.clear();
        }
        if (rebootBuilder_ != null) {
          rebootBuilder_.clear();
        }
        if (checkBackupBuilder_ != null) {
          checkBackupBuilder_.clear();
        }
        if (resetBuilder_ != null) {
          resetBuilder_.clear();
        }
        if (restoreFromMnemonicBuilder_ != null) {
          restoreFromMnemonicBuilder_.clear();
        }
        if (fingerprintBuilder_ != null) {
          fingerprintBuilder_.clear();
        }
        if (btcBuilder_ != null) {
          btcBuilder_.clear();
        }
        if (electrumEncryptionKeyBuilder_ != null) {
          electrumEncryptionKeyBuilder_.clear();
        }
        if (bip85Builder_ != null) {
          bip85Builder_.clear();
        }
        requestCase_ = 0;
        request_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Request_descriptor;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Request getDefaultInstanceForType() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.Request.getDefaultInstance();
      }

      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Request build() {
        com.sparrowwallet.lark.bitbox02.generated.Hww.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Request buildPartial() {
        com.sparrowwallet.lark.bitbox02.generated.Hww.Request result = new com.sparrowwallet.lark.bitbox02.generated.Hww.Request(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.sparrowwallet.lark.bitbox02.generated.Hww.Request result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(com.sparrowwallet.lark.bitbox02.generated.Hww.Request result) {
        result.requestCase_ = requestCase_;
        result.request_ = this.request_;
        if (requestCase_ == 2 &&
            deviceNameBuilder_ != null) {
          result.request_ = deviceNameBuilder_.build();
        }
        if (requestCase_ == 3 &&
            deviceLanguageBuilder_ != null) {
          result.request_ = deviceLanguageBuilder_.build();
        }
        if (requestCase_ == 4 &&
            deviceInfoBuilder_ != null) {
          result.request_ = deviceInfoBuilder_.build();
        }
        if (requestCase_ == 5 &&
            setPasswordBuilder_ != null) {
          result.request_ = setPasswordBuilder_.build();
        }
        if (requestCase_ == 6 &&
            createBackupBuilder_ != null) {
          result.request_ = createBackupBuilder_.build();
        }
        if (requestCase_ == 7 &&
            showMnemonicBuilder_ != null) {
          result.request_ = showMnemonicBuilder_.build();
        }
        if (requestCase_ == 8 &&
            btcPubBuilder_ != null) {
          result.request_ = btcPubBuilder_.build();
        }
        if (requestCase_ == 9 &&
            btcSignInitBuilder_ != null) {
          result.request_ = btcSignInitBuilder_.build();
        }
        if (requestCase_ == 10 &&
            btcSignInputBuilder_ != null) {
          result.request_ = btcSignInputBuilder_.build();
        }
        if (requestCase_ == 11 &&
            btcSignOutputBuilder_ != null) {
          result.request_ = btcSignOutputBuilder_.build();
        }
        if (requestCase_ == 12 &&
            insertRemoveSdcardBuilder_ != null) {
          result.request_ = insertRemoveSdcardBuilder_.build();
        }
        if (requestCase_ == 13 &&
            checkSdcardBuilder_ != null) {
          result.request_ = checkSdcardBuilder_.build();
        }
        if (requestCase_ == 14 &&
            setMnemonicPassphraseEnabledBuilder_ != null) {
          result.request_ = setMnemonicPassphraseEnabledBuilder_.build();
        }
        if (requestCase_ == 15 &&
            listBackupsBuilder_ != null) {
          result.request_ = listBackupsBuilder_.build();
        }
        if (requestCase_ == 16 &&
            restoreBackupBuilder_ != null) {
          result.request_ = restoreBackupBuilder_.build();
        }
        if (requestCase_ == 17 &&
            performAttestationBuilder_ != null) {
          result.request_ = performAttestationBuilder_.build();
        }
        if (requestCase_ == 18 &&
            rebootBuilder_ != null) {
          result.request_ = rebootBuilder_.build();
        }
        if (requestCase_ == 19 &&
            checkBackupBuilder_ != null) {
          result.request_ = checkBackupBuilder_.build();
        }
        if (requestCase_ == 21 &&
            resetBuilder_ != null) {
          result.request_ = resetBuilder_.build();
        }
        if (requestCase_ == 22 &&
            restoreFromMnemonicBuilder_ != null) {
          result.request_ = restoreFromMnemonicBuilder_.build();
        }
        if (requestCase_ == 24 &&
            fingerprintBuilder_ != null) {
          result.request_ = fingerprintBuilder_.build();
        }
        if (requestCase_ == 25 &&
            btcBuilder_ != null) {
          result.request_ = btcBuilder_.build();
        }
        if (requestCase_ == 26 &&
            electrumEncryptionKeyBuilder_ != null) {
          result.request_ = electrumEncryptionKeyBuilder_.build();
        }
        if (requestCase_ == 28 &&
            bip85Builder_ != null) {
          result.request_ = bip85Builder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sparrowwallet.lark.bitbox02.generated.Hww.Request) {
          return mergeFrom((com.sparrowwallet.lark.bitbox02.generated.Hww.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sparrowwallet.lark.bitbox02.generated.Hww.Request other) {
        if (other == com.sparrowwallet.lark.bitbox02.generated.Hww.Request.getDefaultInstance()) return this;
        switch (other.getRequestCase()) {
          case DEVICE_NAME: {
            mergeDeviceName(other.getDeviceName());
            break;
          }
          case DEVICE_LANGUAGE: {
            mergeDeviceLanguage(other.getDeviceLanguage());
            break;
          }
          case DEVICE_INFO: {
            mergeDeviceInfo(other.getDeviceInfo());
            break;
          }
          case SET_PASSWORD: {
            mergeSetPassword(other.getSetPassword());
            break;
          }
          case CREATE_BACKUP: {
            mergeCreateBackup(other.getCreateBackup());
            break;
          }
          case SHOW_MNEMONIC: {
            mergeShowMnemonic(other.getShowMnemonic());
            break;
          }
          case BTC_PUB: {
            mergeBtcPub(other.getBtcPub());
            break;
          }
          case BTC_SIGN_INIT: {
            mergeBtcSignInit(other.getBtcSignInit());
            break;
          }
          case BTC_SIGN_INPUT: {
            mergeBtcSignInput(other.getBtcSignInput());
            break;
          }
          case BTC_SIGN_OUTPUT: {
            mergeBtcSignOutput(other.getBtcSignOutput());
            break;
          }
          case INSERT_REMOVE_SDCARD: {
            mergeInsertRemoveSdcard(other.getInsertRemoveSdcard());
            break;
          }
          case CHECK_SDCARD: {
            mergeCheckSdcard(other.getCheckSdcard());
            break;
          }
          case SET_MNEMONIC_PASSPHRASE_ENABLED: {
            mergeSetMnemonicPassphraseEnabled(other.getSetMnemonicPassphraseEnabled());
            break;
          }
          case LIST_BACKUPS: {
            mergeListBackups(other.getListBackups());
            break;
          }
          case RESTORE_BACKUP: {
            mergeRestoreBackup(other.getRestoreBackup());
            break;
          }
          case PERFORM_ATTESTATION: {
            mergePerformAttestation(other.getPerformAttestation());
            break;
          }
          case REBOOT: {
            mergeReboot(other.getReboot());
            break;
          }
          case CHECK_BACKUP: {
            mergeCheckBackup(other.getCheckBackup());
            break;
          }
          case RESET: {
            mergeReset(other.getReset());
            break;
          }
          case RESTORE_FROM_MNEMONIC: {
            mergeRestoreFromMnemonic(other.getRestoreFromMnemonic());
            break;
          }
          case FINGERPRINT: {
            mergeFingerprint(other.getFingerprint());
            break;
          }
          case BTC: {
            mergeBtc(other.getBtc());
            break;
          }
          case ELECTRUM_ENCRYPTION_KEY: {
            mergeElectrumEncryptionKey(other.getElectrumEncryptionKey());
            break;
          }
          case BIP85: {
            mergeBip85(other.getBip85());
            break;
          }
          case REQUEST_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 18: {
                input.readMessage(
                    getDeviceNameFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 2;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getDeviceLanguageFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 3;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getDeviceInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 4;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getSetPasswordFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 5;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getCreateBackupFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 6;
                break;
              } // case 50
              case 58: {
                input.readMessage(
                    getShowMnemonicFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 7;
                break;
              } // case 58
              case 66: {
                input.readMessage(
                    getBtcPubFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 8;
                break;
              } // case 66
              case 74: {
                input.readMessage(
                    getBtcSignInitFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 9;
                break;
              } // case 74
              case 82: {
                input.readMessage(
                    getBtcSignInputFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 10;
                break;
              } // case 82
              case 90: {
                input.readMessage(
                    getBtcSignOutputFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 11;
                break;
              } // case 90
              case 98: {
                input.readMessage(
                    getInsertRemoveSdcardFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 12;
                break;
              } // case 98
              case 106: {
                input.readMessage(
                    getCheckSdcardFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 13;
                break;
              } // case 106
              case 114: {
                input.readMessage(
                    getSetMnemonicPassphraseEnabledFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 14;
                break;
              } // case 114
              case 122: {
                input.readMessage(
                    getListBackupsFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 15;
                break;
              } // case 122
              case 130: {
                input.readMessage(
                    getRestoreBackupFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 16;
                break;
              } // case 130
              case 138: {
                input.readMessage(
                    getPerformAttestationFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 17;
                break;
              } // case 138
              case 146: {
                input.readMessage(
                    getRebootFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 18;
                break;
              } // case 146
              case 154: {
                input.readMessage(
                    getCheckBackupFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 19;
                break;
              } // case 154
              case 170: {
                input.readMessage(
                    getResetFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 21;
                break;
              } // case 170
              case 178: {
                input.readMessage(
                    getRestoreFromMnemonicFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 22;
                break;
              } // case 178
              case 194: {
                input.readMessage(
                    getFingerprintFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 24;
                break;
              } // case 194
              case 202: {
                input.readMessage(
                    getBtcFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 25;
                break;
              } // case 202
              case 210: {
                input.readMessage(
                    getElectrumEncryptionKeyFieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 26;
                break;
              } // case 210
              case 226: {
                input.readMessage(
                    getBip85FieldBuilder().getBuilder(),
                    extensionRegistry);
                requestCase_ = 28;
                break;
              } // case 226
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int requestCase_ = 0;
      private java.lang.Object request_;
      public RequestCase
          getRequestCase() {
        return RequestCase.forNumber(
            requestCase_);
      }

      public Builder clearRequest() {
        requestCase_ = 0;
        request_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequestOrBuilder> deviceNameBuilder_;
      /**
       * <pre>
       * removed: RandomNumberRequest random_number = 1;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceNameRequest device_name = 2;</code>
       * @return Whether the deviceName field is set.
       */
      @java.lang.Override
      public boolean hasDeviceName() {
        return requestCase_ == 2;
      }
      /**
       * <pre>
       * removed: RandomNumberRequest random_number = 1;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceNameRequest device_name = 2;</code>
       * @return The deviceName.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest getDeviceName() {
        if (deviceNameBuilder_ == null) {
          if (requestCase_ == 2) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 2) {
            return deviceNameBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * removed: RandomNumberRequest random_number = 1;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceNameRequest device_name = 2;</code>
       */
      public Builder setDeviceName(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest value) {
        if (deviceNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          deviceNameBuilder_.setMessage(value);
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * removed: RandomNumberRequest random_number = 1;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceNameRequest device_name = 2;</code>
       */
      public Builder setDeviceName(
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest.Builder builderForValue) {
        if (deviceNameBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          deviceNameBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * removed: RandomNumberRequest random_number = 1;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceNameRequest device_name = 2;</code>
       */
      public Builder mergeDeviceName(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest value) {
        if (deviceNameBuilder_ == null) {
          if (requestCase_ == 2 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 2) {
            deviceNameBuilder_.mergeFrom(value);
          } else {
            deviceNameBuilder_.setMessage(value);
          }
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * removed: RandomNumberRequest random_number = 1;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceNameRequest device_name = 2;</code>
       */
      public Builder clearDeviceName() {
        if (deviceNameBuilder_ == null) {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
          }
          deviceNameBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * removed: RandomNumberRequest random_number = 1;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceNameRequest device_name = 2;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest.Builder getDeviceNameBuilder() {
        return getDeviceNameFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * removed: RandomNumberRequest random_number = 1;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceNameRequest device_name = 2;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequestOrBuilder getDeviceNameOrBuilder() {
        if ((requestCase_ == 2) && (deviceNameBuilder_ != null)) {
          return deviceNameBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 2) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * removed: RandomNumberRequest random_number = 1;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceNameRequest device_name = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequestOrBuilder> 
          getDeviceNameFieldBuilder() {
        if (deviceNameBuilder_ == null) {
          if (!(requestCase_ == 2)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest.getDefaultInstance();
          }
          deviceNameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceNameRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 2;
        onChanged();
        return deviceNameBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequestOrBuilder> deviceLanguageBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceLanguageRequest device_language = 3;</code>
       * @return Whether the deviceLanguage field is set.
       */
      @java.lang.Override
      public boolean hasDeviceLanguage() {
        return requestCase_ == 3;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceLanguageRequest device_language = 3;</code>
       * @return The deviceLanguage.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest getDeviceLanguage() {
        if (deviceLanguageBuilder_ == null) {
          if (requestCase_ == 3) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 3) {
            return deviceLanguageBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceLanguageRequest device_language = 3;</code>
       */
      public Builder setDeviceLanguage(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest value) {
        if (deviceLanguageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          deviceLanguageBuilder_.setMessage(value);
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceLanguageRequest device_language = 3;</code>
       */
      public Builder setDeviceLanguage(
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest.Builder builderForValue) {
        if (deviceLanguageBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          deviceLanguageBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceLanguageRequest device_language = 3;</code>
       */
      public Builder mergeDeviceLanguage(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest value) {
        if (deviceLanguageBuilder_ == null) {
          if (requestCase_ == 3 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 3) {
            deviceLanguageBuilder_.mergeFrom(value);
          } else {
            deviceLanguageBuilder_.setMessage(value);
          }
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceLanguageRequest device_language = 3;</code>
       */
      public Builder clearDeviceLanguage() {
        if (deviceLanguageBuilder_ == null) {
          if (requestCase_ == 3) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 3) {
            requestCase_ = 0;
            request_ = null;
          }
          deviceLanguageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceLanguageRequest device_language = 3;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest.Builder getDeviceLanguageBuilder() {
        return getDeviceLanguageFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceLanguageRequest device_language = 3;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequestOrBuilder getDeviceLanguageOrBuilder() {
        if ((requestCase_ == 3) && (deviceLanguageBuilder_ != null)) {
          return deviceLanguageBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 3) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetDeviceLanguageRequest device_language = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequestOrBuilder> 
          getDeviceLanguageFieldBuilder() {
        if (deviceLanguageBuilder_ == null) {
          if (!(requestCase_ == 3)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest.getDefaultInstance();
          }
          deviceLanguageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetDeviceLanguageRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 3;
        onChanged();
        return deviceLanguageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequestOrBuilder> deviceInfoBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoRequest device_info = 4;</code>
       * @return Whether the deviceInfo field is set.
       */
      @java.lang.Override
      public boolean hasDeviceInfo() {
        return requestCase_ == 4;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoRequest device_info = 4;</code>
       * @return The deviceInfo.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest getDeviceInfo() {
        if (deviceInfoBuilder_ == null) {
          if (requestCase_ == 4) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 4) {
            return deviceInfoBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoRequest device_info = 4;</code>
       */
      public Builder setDeviceInfo(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest value) {
        if (deviceInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          deviceInfoBuilder_.setMessage(value);
        }
        requestCase_ = 4;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoRequest device_info = 4;</code>
       */
      public Builder setDeviceInfo(
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest.Builder builderForValue) {
        if (deviceInfoBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          deviceInfoBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 4;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoRequest device_info = 4;</code>
       */
      public Builder mergeDeviceInfo(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest value) {
        if (deviceInfoBuilder_ == null) {
          if (requestCase_ == 4 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 4) {
            deviceInfoBuilder_.mergeFrom(value);
          } else {
            deviceInfoBuilder_.setMessage(value);
          }
        }
        requestCase_ = 4;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoRequest device_info = 4;</code>
       */
      public Builder clearDeviceInfo() {
        if (deviceInfoBuilder_ == null) {
          if (requestCase_ == 4) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 4) {
            requestCase_ = 0;
            request_ = null;
          }
          deviceInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoRequest device_info = 4;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest.Builder getDeviceInfoBuilder() {
        return getDeviceInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoRequest device_info = 4;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequestOrBuilder getDeviceInfoOrBuilder() {
        if ((requestCase_ == 4) && (deviceInfoBuilder_ != null)) {
          return deviceInfoBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 4) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoRequest device_info = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequestOrBuilder> 
          getDeviceInfoFieldBuilder() {
        if (deviceInfoBuilder_ == null) {
          if (!(requestCase_ == 4)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest.getDefaultInstance();
          }
          deviceInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 4;
        onChanged();
        return deviceInfoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequestOrBuilder> setPasswordBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetPasswordRequest set_password = 5;</code>
       * @return Whether the setPassword field is set.
       */
      @java.lang.Override
      public boolean hasSetPassword() {
        return requestCase_ == 5;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetPasswordRequest set_password = 5;</code>
       * @return The setPassword.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest getSetPassword() {
        if (setPasswordBuilder_ == null) {
          if (requestCase_ == 5) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 5) {
            return setPasswordBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetPasswordRequest set_password = 5;</code>
       */
      public Builder setSetPassword(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest value) {
        if (setPasswordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          setPasswordBuilder_.setMessage(value);
        }
        requestCase_ = 5;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetPasswordRequest set_password = 5;</code>
       */
      public Builder setSetPassword(
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest.Builder builderForValue) {
        if (setPasswordBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          setPasswordBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 5;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetPasswordRequest set_password = 5;</code>
       */
      public Builder mergeSetPassword(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest value) {
        if (setPasswordBuilder_ == null) {
          if (requestCase_ == 5 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 5) {
            setPasswordBuilder_.mergeFrom(value);
          } else {
            setPasswordBuilder_.setMessage(value);
          }
        }
        requestCase_ = 5;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetPasswordRequest set_password = 5;</code>
       */
      public Builder clearSetPassword() {
        if (setPasswordBuilder_ == null) {
          if (requestCase_ == 5) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 5) {
            requestCase_ = 0;
            request_ = null;
          }
          setPasswordBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetPasswordRequest set_password = 5;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest.Builder getSetPasswordBuilder() {
        return getSetPasswordFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetPasswordRequest set_password = 5;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequestOrBuilder getSetPasswordOrBuilder() {
        if ((requestCase_ == 5) && (setPasswordBuilder_ != null)) {
          return setPasswordBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 5) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetPasswordRequest set_password = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequestOrBuilder> 
          getSetPasswordFieldBuilder() {
        if (setPasswordBuilder_ == null) {
          if (!(requestCase_ == 5)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest.getDefaultInstance();
          }
          setPasswordBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.SetPasswordRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 5;
        onChanged();
        return setPasswordBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequestOrBuilder> createBackupBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CreateBackupRequest create_backup = 6;</code>
       * @return Whether the createBackup field is set.
       */
      @java.lang.Override
      public boolean hasCreateBackup() {
        return requestCase_ == 6;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CreateBackupRequest create_backup = 6;</code>
       * @return The createBackup.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest getCreateBackup() {
        if (createBackupBuilder_ == null) {
          if (requestCase_ == 6) {
            return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 6) {
            return createBackupBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CreateBackupRequest create_backup = 6;</code>
       */
      public Builder setCreateBackup(com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest value) {
        if (createBackupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          createBackupBuilder_.setMessage(value);
        }
        requestCase_ = 6;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CreateBackupRequest create_backup = 6;</code>
       */
      public Builder setCreateBackup(
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest.Builder builderForValue) {
        if (createBackupBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          createBackupBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 6;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CreateBackupRequest create_backup = 6;</code>
       */
      public Builder mergeCreateBackup(com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest value) {
        if (createBackupBuilder_ == null) {
          if (requestCase_ == 6 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 6) {
            createBackupBuilder_.mergeFrom(value);
          } else {
            createBackupBuilder_.setMessage(value);
          }
        }
        requestCase_ = 6;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CreateBackupRequest create_backup = 6;</code>
       */
      public Builder clearCreateBackup() {
        if (createBackupBuilder_ == null) {
          if (requestCase_ == 6) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 6) {
            requestCase_ = 0;
            request_ = null;
          }
          createBackupBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CreateBackupRequest create_backup = 6;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest.Builder getCreateBackupBuilder() {
        return getCreateBackupFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CreateBackupRequest create_backup = 6;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequestOrBuilder getCreateBackupOrBuilder() {
        if ((requestCase_ == 6) && (createBackupBuilder_ != null)) {
          return createBackupBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 6) {
            return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CreateBackupRequest create_backup = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequestOrBuilder> 
          getCreateBackupFieldBuilder() {
        if (createBackupBuilder_ == null) {
          if (!(requestCase_ == 6)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest.getDefaultInstance();
          }
          createBackupBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CreateBackupRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 6;
        onChanged();
        return createBackupBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequestOrBuilder> showMnemonicBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ShowMnemonicRequest show_mnemonic = 7;</code>
       * @return Whether the showMnemonic field is set.
       */
      @java.lang.Override
      public boolean hasShowMnemonic() {
        return requestCase_ == 7;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ShowMnemonicRequest show_mnemonic = 7;</code>
       * @return The showMnemonic.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest getShowMnemonic() {
        if (showMnemonicBuilder_ == null) {
          if (requestCase_ == 7) {
            return (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 7) {
            return showMnemonicBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ShowMnemonicRequest show_mnemonic = 7;</code>
       */
      public Builder setShowMnemonic(com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest value) {
        if (showMnemonicBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          showMnemonicBuilder_.setMessage(value);
        }
        requestCase_ = 7;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ShowMnemonicRequest show_mnemonic = 7;</code>
       */
      public Builder setShowMnemonic(
          com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest.Builder builderForValue) {
        if (showMnemonicBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          showMnemonicBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 7;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ShowMnemonicRequest show_mnemonic = 7;</code>
       */
      public Builder mergeShowMnemonic(com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest value) {
        if (showMnemonicBuilder_ == null) {
          if (requestCase_ == 7 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 7) {
            showMnemonicBuilder_.mergeFrom(value);
          } else {
            showMnemonicBuilder_.setMessage(value);
          }
        }
        requestCase_ = 7;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ShowMnemonicRequest show_mnemonic = 7;</code>
       */
      public Builder clearShowMnemonic() {
        if (showMnemonicBuilder_ == null) {
          if (requestCase_ == 7) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 7) {
            requestCase_ = 0;
            request_ = null;
          }
          showMnemonicBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ShowMnemonicRequest show_mnemonic = 7;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest.Builder getShowMnemonicBuilder() {
        return getShowMnemonicFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ShowMnemonicRequest show_mnemonic = 7;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequestOrBuilder getShowMnemonicOrBuilder() {
        if ((requestCase_ == 7) && (showMnemonicBuilder_ != null)) {
          return showMnemonicBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 7) {
            return (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ShowMnemonicRequest show_mnemonic = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequestOrBuilder> 
          getShowMnemonicFieldBuilder() {
        if (showMnemonicBuilder_ == null) {
          if (!(requestCase_ == 7)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest.getDefaultInstance();
          }
          showMnemonicBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.ShowMnemonicRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 7;
        onChanged();
        return showMnemonicBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequestOrBuilder> btcPubBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCPubRequest btc_pub = 8;</code>
       * @return Whether the btcPub field is set.
       */
      @java.lang.Override
      public boolean hasBtcPub() {
        return requestCase_ == 8;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCPubRequest btc_pub = 8;</code>
       * @return The btcPub.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest getBtcPub() {
        if (btcPubBuilder_ == null) {
          if (requestCase_ == 8) {
            return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 8) {
            return btcPubBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCPubRequest btc_pub = 8;</code>
       */
      public Builder setBtcPub(com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest value) {
        if (btcPubBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          btcPubBuilder_.setMessage(value);
        }
        requestCase_ = 8;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCPubRequest btc_pub = 8;</code>
       */
      public Builder setBtcPub(
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest.Builder builderForValue) {
        if (btcPubBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          btcPubBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 8;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCPubRequest btc_pub = 8;</code>
       */
      public Builder mergeBtcPub(com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest value) {
        if (btcPubBuilder_ == null) {
          if (requestCase_ == 8 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 8) {
            btcPubBuilder_.mergeFrom(value);
          } else {
            btcPubBuilder_.setMessage(value);
          }
        }
        requestCase_ = 8;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCPubRequest btc_pub = 8;</code>
       */
      public Builder clearBtcPub() {
        if (btcPubBuilder_ == null) {
          if (requestCase_ == 8) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 8) {
            requestCase_ = 0;
            request_ = null;
          }
          btcPubBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCPubRequest btc_pub = 8;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest.Builder getBtcPubBuilder() {
        return getBtcPubFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCPubRequest btc_pub = 8;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequestOrBuilder getBtcPubOrBuilder() {
        if ((requestCase_ == 8) && (btcPubBuilder_ != null)) {
          return btcPubBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 8) {
            return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCPubRequest btc_pub = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequestOrBuilder> 
          getBtcPubFieldBuilder() {
        if (btcPubBuilder_ == null) {
          if (!(requestCase_ == 8)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest.getDefaultInstance();
          }
          btcPubBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCPubRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 8;
        onChanged();
        return btcPubBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequestOrBuilder> btcSignInitBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInitRequest btc_sign_init = 9;</code>
       * @return Whether the btcSignInit field is set.
       */
      @java.lang.Override
      public boolean hasBtcSignInit() {
        return requestCase_ == 9;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInitRequest btc_sign_init = 9;</code>
       * @return The btcSignInit.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest getBtcSignInit() {
        if (btcSignInitBuilder_ == null) {
          if (requestCase_ == 9) {
            return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 9) {
            return btcSignInitBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInitRequest btc_sign_init = 9;</code>
       */
      public Builder setBtcSignInit(com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest value) {
        if (btcSignInitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          btcSignInitBuilder_.setMessage(value);
        }
        requestCase_ = 9;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInitRequest btc_sign_init = 9;</code>
       */
      public Builder setBtcSignInit(
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest.Builder builderForValue) {
        if (btcSignInitBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          btcSignInitBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 9;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInitRequest btc_sign_init = 9;</code>
       */
      public Builder mergeBtcSignInit(com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest value) {
        if (btcSignInitBuilder_ == null) {
          if (requestCase_ == 9 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 9) {
            btcSignInitBuilder_.mergeFrom(value);
          } else {
            btcSignInitBuilder_.setMessage(value);
          }
        }
        requestCase_ = 9;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInitRequest btc_sign_init = 9;</code>
       */
      public Builder clearBtcSignInit() {
        if (btcSignInitBuilder_ == null) {
          if (requestCase_ == 9) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 9) {
            requestCase_ = 0;
            request_ = null;
          }
          btcSignInitBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInitRequest btc_sign_init = 9;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest.Builder getBtcSignInitBuilder() {
        return getBtcSignInitFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInitRequest btc_sign_init = 9;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequestOrBuilder getBtcSignInitOrBuilder() {
        if ((requestCase_ == 9) && (btcSignInitBuilder_ != null)) {
          return btcSignInitBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 9) {
            return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInitRequest btc_sign_init = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequestOrBuilder> 
          getBtcSignInitFieldBuilder() {
        if (btcSignInitBuilder_ == null) {
          if (!(requestCase_ == 9)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest.getDefaultInstance();
          }
          btcSignInitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInitRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 9;
        onChanged();
        return btcSignInitBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequestOrBuilder> btcSignInputBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInputRequest btc_sign_input = 10;</code>
       * @return Whether the btcSignInput field is set.
       */
      @java.lang.Override
      public boolean hasBtcSignInput() {
        return requestCase_ == 10;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInputRequest btc_sign_input = 10;</code>
       * @return The btcSignInput.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest getBtcSignInput() {
        if (btcSignInputBuilder_ == null) {
          if (requestCase_ == 10) {
            return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 10) {
            return btcSignInputBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInputRequest btc_sign_input = 10;</code>
       */
      public Builder setBtcSignInput(com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest value) {
        if (btcSignInputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          btcSignInputBuilder_.setMessage(value);
        }
        requestCase_ = 10;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInputRequest btc_sign_input = 10;</code>
       */
      public Builder setBtcSignInput(
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest.Builder builderForValue) {
        if (btcSignInputBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          btcSignInputBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 10;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInputRequest btc_sign_input = 10;</code>
       */
      public Builder mergeBtcSignInput(com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest value) {
        if (btcSignInputBuilder_ == null) {
          if (requestCase_ == 10 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 10) {
            btcSignInputBuilder_.mergeFrom(value);
          } else {
            btcSignInputBuilder_.setMessage(value);
          }
        }
        requestCase_ = 10;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInputRequest btc_sign_input = 10;</code>
       */
      public Builder clearBtcSignInput() {
        if (btcSignInputBuilder_ == null) {
          if (requestCase_ == 10) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 10) {
            requestCase_ = 0;
            request_ = null;
          }
          btcSignInputBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInputRequest btc_sign_input = 10;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest.Builder getBtcSignInputBuilder() {
        return getBtcSignInputFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInputRequest btc_sign_input = 10;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequestOrBuilder getBtcSignInputOrBuilder() {
        if ((requestCase_ == 10) && (btcSignInputBuilder_ != null)) {
          return btcSignInputBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 10) {
            return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignInputRequest btc_sign_input = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequestOrBuilder> 
          getBtcSignInputFieldBuilder() {
        if (btcSignInputBuilder_ == null) {
          if (!(requestCase_ == 10)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest.getDefaultInstance();
          }
          btcSignInputBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignInputRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 10;
        onChanged();
        return btcSignInputBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequestOrBuilder> btcSignOutputBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignOutputRequest btc_sign_output = 11;</code>
       * @return Whether the btcSignOutput field is set.
       */
      @java.lang.Override
      public boolean hasBtcSignOutput() {
        return requestCase_ == 11;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignOutputRequest btc_sign_output = 11;</code>
       * @return The btcSignOutput.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest getBtcSignOutput() {
        if (btcSignOutputBuilder_ == null) {
          if (requestCase_ == 11) {
            return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 11) {
            return btcSignOutputBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignOutputRequest btc_sign_output = 11;</code>
       */
      public Builder setBtcSignOutput(com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest value) {
        if (btcSignOutputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          btcSignOutputBuilder_.setMessage(value);
        }
        requestCase_ = 11;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignOutputRequest btc_sign_output = 11;</code>
       */
      public Builder setBtcSignOutput(
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest.Builder builderForValue) {
        if (btcSignOutputBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          btcSignOutputBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 11;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignOutputRequest btc_sign_output = 11;</code>
       */
      public Builder mergeBtcSignOutput(com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest value) {
        if (btcSignOutputBuilder_ == null) {
          if (requestCase_ == 11 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 11) {
            btcSignOutputBuilder_.mergeFrom(value);
          } else {
            btcSignOutputBuilder_.setMessage(value);
          }
        }
        requestCase_ = 11;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignOutputRequest btc_sign_output = 11;</code>
       */
      public Builder clearBtcSignOutput() {
        if (btcSignOutputBuilder_ == null) {
          if (requestCase_ == 11) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 11) {
            requestCase_ = 0;
            request_ = null;
          }
          btcSignOutputBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignOutputRequest btc_sign_output = 11;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest.Builder getBtcSignOutputBuilder() {
        return getBtcSignOutputFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignOutputRequest btc_sign_output = 11;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequestOrBuilder getBtcSignOutputOrBuilder() {
        if ((requestCase_ == 11) && (btcSignOutputBuilder_ != null)) {
          return btcSignOutputBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 11) {
            return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignOutputRequest btc_sign_output = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequestOrBuilder> 
          getBtcSignOutputFieldBuilder() {
        if (btcSignOutputBuilder_ == null) {
          if (!(requestCase_ == 11)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest.getDefaultInstance();
          }
          btcSignOutputBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignOutputRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 11;
        onChanged();
        return btcSignOutputBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequestOrBuilder> insertRemoveSdcardBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.InsertRemoveSDCardRequest insert_remove_sdcard = 12;</code>
       * @return Whether the insertRemoveSdcard field is set.
       */
      @java.lang.Override
      public boolean hasInsertRemoveSdcard() {
        return requestCase_ == 12;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.InsertRemoveSDCardRequest insert_remove_sdcard = 12;</code>
       * @return The insertRemoveSdcard.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest getInsertRemoveSdcard() {
        if (insertRemoveSdcardBuilder_ == null) {
          if (requestCase_ == 12) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 12) {
            return insertRemoveSdcardBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.InsertRemoveSDCardRequest insert_remove_sdcard = 12;</code>
       */
      public Builder setInsertRemoveSdcard(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest value) {
        if (insertRemoveSdcardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          insertRemoveSdcardBuilder_.setMessage(value);
        }
        requestCase_ = 12;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.InsertRemoveSDCardRequest insert_remove_sdcard = 12;</code>
       */
      public Builder setInsertRemoveSdcard(
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest.Builder builderForValue) {
        if (insertRemoveSdcardBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          insertRemoveSdcardBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 12;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.InsertRemoveSDCardRequest insert_remove_sdcard = 12;</code>
       */
      public Builder mergeInsertRemoveSdcard(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest value) {
        if (insertRemoveSdcardBuilder_ == null) {
          if (requestCase_ == 12 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 12) {
            insertRemoveSdcardBuilder_.mergeFrom(value);
          } else {
            insertRemoveSdcardBuilder_.setMessage(value);
          }
        }
        requestCase_ = 12;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.InsertRemoveSDCardRequest insert_remove_sdcard = 12;</code>
       */
      public Builder clearInsertRemoveSdcard() {
        if (insertRemoveSdcardBuilder_ == null) {
          if (requestCase_ == 12) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 12) {
            requestCase_ = 0;
            request_ = null;
          }
          insertRemoveSdcardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.InsertRemoveSDCardRequest insert_remove_sdcard = 12;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest.Builder getInsertRemoveSdcardBuilder() {
        return getInsertRemoveSdcardFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.InsertRemoveSDCardRequest insert_remove_sdcard = 12;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequestOrBuilder getInsertRemoveSdcardOrBuilder() {
        if ((requestCase_ == 12) && (insertRemoveSdcardBuilder_ != null)) {
          return insertRemoveSdcardBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 12) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.InsertRemoveSDCardRequest insert_remove_sdcard = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequestOrBuilder> 
          getInsertRemoveSdcardFieldBuilder() {
        if (insertRemoveSdcardBuilder_ == null) {
          if (!(requestCase_ == 12)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest.getDefaultInstance();
          }
          insertRemoveSdcardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.InsertRemoveSDCardRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 12;
        onChanged();
        return insertRemoveSdcardBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequestOrBuilder> checkSdcardBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardRequest check_sdcard = 13;</code>
       * @return Whether the checkSdcard field is set.
       */
      @java.lang.Override
      public boolean hasCheckSdcard() {
        return requestCase_ == 13;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardRequest check_sdcard = 13;</code>
       * @return The checkSdcard.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest getCheckSdcard() {
        if (checkSdcardBuilder_ == null) {
          if (requestCase_ == 13) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 13) {
            return checkSdcardBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardRequest check_sdcard = 13;</code>
       */
      public Builder setCheckSdcard(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest value) {
        if (checkSdcardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          checkSdcardBuilder_.setMessage(value);
        }
        requestCase_ = 13;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardRequest check_sdcard = 13;</code>
       */
      public Builder setCheckSdcard(
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest.Builder builderForValue) {
        if (checkSdcardBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          checkSdcardBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 13;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardRequest check_sdcard = 13;</code>
       */
      public Builder mergeCheckSdcard(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest value) {
        if (checkSdcardBuilder_ == null) {
          if (requestCase_ == 13 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 13) {
            checkSdcardBuilder_.mergeFrom(value);
          } else {
            checkSdcardBuilder_.setMessage(value);
          }
        }
        requestCase_ = 13;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardRequest check_sdcard = 13;</code>
       */
      public Builder clearCheckSdcard() {
        if (checkSdcardBuilder_ == null) {
          if (requestCase_ == 13) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 13) {
            requestCase_ = 0;
            request_ = null;
          }
          checkSdcardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardRequest check_sdcard = 13;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest.Builder getCheckSdcardBuilder() {
        return getCheckSdcardFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardRequest check_sdcard = 13;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequestOrBuilder getCheckSdcardOrBuilder() {
        if ((requestCase_ == 13) && (checkSdcardBuilder_ != null)) {
          return checkSdcardBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 13) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardRequest check_sdcard = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequestOrBuilder> 
          getCheckSdcardFieldBuilder() {
        if (checkSdcardBuilder_ == null) {
          if (!(requestCase_ == 13)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest.getDefaultInstance();
          }
          checkSdcardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 13;
        onChanged();
        return checkSdcardBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequestOrBuilder> setMnemonicPassphraseEnabledBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetMnemonicPassphraseEnabledRequest set_mnemonic_passphrase_enabled = 14;</code>
       * @return Whether the setMnemonicPassphraseEnabled field is set.
       */
      @java.lang.Override
      public boolean hasSetMnemonicPassphraseEnabled() {
        return requestCase_ == 14;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetMnemonicPassphraseEnabledRequest set_mnemonic_passphrase_enabled = 14;</code>
       * @return The setMnemonicPassphraseEnabled.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest getSetMnemonicPassphraseEnabled() {
        if (setMnemonicPassphraseEnabledBuilder_ == null) {
          if (requestCase_ == 14) {
            return (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 14) {
            return setMnemonicPassphraseEnabledBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetMnemonicPassphraseEnabledRequest set_mnemonic_passphrase_enabled = 14;</code>
       */
      public Builder setSetMnemonicPassphraseEnabled(com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest value) {
        if (setMnemonicPassphraseEnabledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          setMnemonicPassphraseEnabledBuilder_.setMessage(value);
        }
        requestCase_ = 14;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetMnemonicPassphraseEnabledRequest set_mnemonic_passphrase_enabled = 14;</code>
       */
      public Builder setSetMnemonicPassphraseEnabled(
          com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest.Builder builderForValue) {
        if (setMnemonicPassphraseEnabledBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          setMnemonicPassphraseEnabledBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 14;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetMnemonicPassphraseEnabledRequest set_mnemonic_passphrase_enabled = 14;</code>
       */
      public Builder mergeSetMnemonicPassphraseEnabled(com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest value) {
        if (setMnemonicPassphraseEnabledBuilder_ == null) {
          if (requestCase_ == 14 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 14) {
            setMnemonicPassphraseEnabledBuilder_.mergeFrom(value);
          } else {
            setMnemonicPassphraseEnabledBuilder_.setMessage(value);
          }
        }
        requestCase_ = 14;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetMnemonicPassphraseEnabledRequest set_mnemonic_passphrase_enabled = 14;</code>
       */
      public Builder clearSetMnemonicPassphraseEnabled() {
        if (setMnemonicPassphraseEnabledBuilder_ == null) {
          if (requestCase_ == 14) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 14) {
            requestCase_ = 0;
            request_ = null;
          }
          setMnemonicPassphraseEnabledBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetMnemonicPassphraseEnabledRequest set_mnemonic_passphrase_enabled = 14;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest.Builder getSetMnemonicPassphraseEnabledBuilder() {
        return getSetMnemonicPassphraseEnabledFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetMnemonicPassphraseEnabledRequest set_mnemonic_passphrase_enabled = 14;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequestOrBuilder getSetMnemonicPassphraseEnabledOrBuilder() {
        if ((requestCase_ == 14) && (setMnemonicPassphraseEnabledBuilder_ != null)) {
          return setMnemonicPassphraseEnabledBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 14) {
            return (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.SetMnemonicPassphraseEnabledRequest set_mnemonic_passphrase_enabled = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequestOrBuilder> 
          getSetMnemonicPassphraseEnabledFieldBuilder() {
        if (setMnemonicPassphraseEnabledBuilder_ == null) {
          if (!(requestCase_ == 14)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest.getDefaultInstance();
          }
          setMnemonicPassphraseEnabledBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.SetMnemonicPassphraseEnabledRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 14;
        onChanged();
        return setMnemonicPassphraseEnabledBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequestOrBuilder> listBackupsBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsRequest list_backups = 15;</code>
       * @return Whether the listBackups field is set.
       */
      @java.lang.Override
      public boolean hasListBackups() {
        return requestCase_ == 15;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsRequest list_backups = 15;</code>
       * @return The listBackups.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest getListBackups() {
        if (listBackupsBuilder_ == null) {
          if (requestCase_ == 15) {
            return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 15) {
            return listBackupsBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsRequest list_backups = 15;</code>
       */
      public Builder setListBackups(com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest value) {
        if (listBackupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          listBackupsBuilder_.setMessage(value);
        }
        requestCase_ = 15;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsRequest list_backups = 15;</code>
       */
      public Builder setListBackups(
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest.Builder builderForValue) {
        if (listBackupsBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          listBackupsBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 15;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsRequest list_backups = 15;</code>
       */
      public Builder mergeListBackups(com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest value) {
        if (listBackupsBuilder_ == null) {
          if (requestCase_ == 15 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 15) {
            listBackupsBuilder_.mergeFrom(value);
          } else {
            listBackupsBuilder_.setMessage(value);
          }
        }
        requestCase_ = 15;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsRequest list_backups = 15;</code>
       */
      public Builder clearListBackups() {
        if (listBackupsBuilder_ == null) {
          if (requestCase_ == 15) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 15) {
            requestCase_ = 0;
            request_ = null;
          }
          listBackupsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsRequest list_backups = 15;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest.Builder getListBackupsBuilder() {
        return getListBackupsFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsRequest list_backups = 15;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequestOrBuilder getListBackupsOrBuilder() {
        if ((requestCase_ == 15) && (listBackupsBuilder_ != null)) {
          return listBackupsBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 15) {
            return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsRequest list_backups = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequestOrBuilder> 
          getListBackupsFieldBuilder() {
        if (listBackupsBuilder_ == null) {
          if (!(requestCase_ == 15)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest.getDefaultInstance();
          }
          listBackupsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 15;
        onChanged();
        return listBackupsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequestOrBuilder> restoreBackupBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreBackupRequest restore_backup = 16;</code>
       * @return Whether the restoreBackup field is set.
       */
      @java.lang.Override
      public boolean hasRestoreBackup() {
        return requestCase_ == 16;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreBackupRequest restore_backup = 16;</code>
       * @return The restoreBackup.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest getRestoreBackup() {
        if (restoreBackupBuilder_ == null) {
          if (requestCase_ == 16) {
            return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 16) {
            return restoreBackupBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreBackupRequest restore_backup = 16;</code>
       */
      public Builder setRestoreBackup(com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest value) {
        if (restoreBackupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          restoreBackupBuilder_.setMessage(value);
        }
        requestCase_ = 16;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreBackupRequest restore_backup = 16;</code>
       */
      public Builder setRestoreBackup(
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest.Builder builderForValue) {
        if (restoreBackupBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          restoreBackupBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 16;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreBackupRequest restore_backup = 16;</code>
       */
      public Builder mergeRestoreBackup(com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest value) {
        if (restoreBackupBuilder_ == null) {
          if (requestCase_ == 16 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 16) {
            restoreBackupBuilder_.mergeFrom(value);
          } else {
            restoreBackupBuilder_.setMessage(value);
          }
        }
        requestCase_ = 16;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreBackupRequest restore_backup = 16;</code>
       */
      public Builder clearRestoreBackup() {
        if (restoreBackupBuilder_ == null) {
          if (requestCase_ == 16) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 16) {
            requestCase_ = 0;
            request_ = null;
          }
          restoreBackupBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreBackupRequest restore_backup = 16;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest.Builder getRestoreBackupBuilder() {
        return getRestoreBackupFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreBackupRequest restore_backup = 16;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequestOrBuilder getRestoreBackupOrBuilder() {
        if ((requestCase_ == 16) && (restoreBackupBuilder_ != null)) {
          return restoreBackupBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 16) {
            return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreBackupRequest restore_backup = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequestOrBuilder> 
          getRestoreBackupFieldBuilder() {
        if (restoreBackupBuilder_ == null) {
          if (!(requestCase_ == 16)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest.getDefaultInstance();
          }
          restoreBackupBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.RestoreBackupRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 16;
        onChanged();
        return restoreBackupBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest, com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequestOrBuilder> performAttestationBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationRequest perform_attestation = 17;</code>
       * @return Whether the performAttestation field is set.
       */
      @java.lang.Override
      public boolean hasPerformAttestation() {
        return requestCase_ == 17;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationRequest perform_attestation = 17;</code>
       * @return The performAttestation.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest getPerformAttestation() {
        if (performAttestationBuilder_ == null) {
          if (requestCase_ == 17) {
            return (com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 17) {
            return performAttestationBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationRequest perform_attestation = 17;</code>
       */
      public Builder setPerformAttestation(com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest value) {
        if (performAttestationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          performAttestationBuilder_.setMessage(value);
        }
        requestCase_ = 17;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationRequest perform_attestation = 17;</code>
       */
      public Builder setPerformAttestation(
          com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest.Builder builderForValue) {
        if (performAttestationBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          performAttestationBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 17;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationRequest perform_attestation = 17;</code>
       */
      public Builder mergePerformAttestation(com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest value) {
        if (performAttestationBuilder_ == null) {
          if (requestCase_ == 17 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 17) {
            performAttestationBuilder_.mergeFrom(value);
          } else {
            performAttestationBuilder_.setMessage(value);
          }
        }
        requestCase_ = 17;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationRequest perform_attestation = 17;</code>
       */
      public Builder clearPerformAttestation() {
        if (performAttestationBuilder_ == null) {
          if (requestCase_ == 17) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 17) {
            requestCase_ = 0;
            request_ = null;
          }
          performAttestationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationRequest perform_attestation = 17;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest.Builder getPerformAttestationBuilder() {
        return getPerformAttestationFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationRequest perform_attestation = 17;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequestOrBuilder getPerformAttestationOrBuilder() {
        if ((requestCase_ == 17) && (performAttestationBuilder_ != null)) {
          return performAttestationBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 17) {
            return (com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationRequest perform_attestation = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest, com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequestOrBuilder> 
          getPerformAttestationFieldBuilder() {
        if (performAttestationBuilder_ == null) {
          if (!(requestCase_ == 17)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest.getDefaultInstance();
          }
          performAttestationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest, com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 17;
        onChanged();
        return performAttestationBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest, com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.System.RebootRequestOrBuilder> rebootBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RebootRequest reboot = 18;</code>
       * @return Whether the reboot field is set.
       */
      @java.lang.Override
      public boolean hasReboot() {
        return requestCase_ == 18;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RebootRequest reboot = 18;</code>
       * @return The reboot.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest getReboot() {
        if (rebootBuilder_ == null) {
          if (requestCase_ == 18) {
            return (com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 18) {
            return rebootBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RebootRequest reboot = 18;</code>
       */
      public Builder setReboot(com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest value) {
        if (rebootBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          rebootBuilder_.setMessage(value);
        }
        requestCase_ = 18;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RebootRequest reboot = 18;</code>
       */
      public Builder setReboot(
          com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest.Builder builderForValue) {
        if (rebootBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          rebootBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 18;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RebootRequest reboot = 18;</code>
       */
      public Builder mergeReboot(com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest value) {
        if (rebootBuilder_ == null) {
          if (requestCase_ == 18 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 18) {
            rebootBuilder_.mergeFrom(value);
          } else {
            rebootBuilder_.setMessage(value);
          }
        }
        requestCase_ = 18;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RebootRequest reboot = 18;</code>
       */
      public Builder clearReboot() {
        if (rebootBuilder_ == null) {
          if (requestCase_ == 18) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 18) {
            requestCase_ = 0;
            request_ = null;
          }
          rebootBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RebootRequest reboot = 18;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest.Builder getRebootBuilder() {
        return getRebootFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RebootRequest reboot = 18;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.System.RebootRequestOrBuilder getRebootOrBuilder() {
        if ((requestCase_ == 18) && (rebootBuilder_ != null)) {
          return rebootBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 18) {
            return (com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RebootRequest reboot = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest, com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.System.RebootRequestOrBuilder> 
          getRebootFieldBuilder() {
        if (rebootBuilder_ == null) {
          if (!(requestCase_ == 18)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest.getDefaultInstance();
          }
          rebootBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest, com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.System.RebootRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.System.RebootRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 18;
        onChanged();
        return rebootBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequestOrBuilder> checkBackupBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupRequest check_backup = 19;</code>
       * @return Whether the checkBackup field is set.
       */
      @java.lang.Override
      public boolean hasCheckBackup() {
        return requestCase_ == 19;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupRequest check_backup = 19;</code>
       * @return The checkBackup.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest getCheckBackup() {
        if (checkBackupBuilder_ == null) {
          if (requestCase_ == 19) {
            return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 19) {
            return checkBackupBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupRequest check_backup = 19;</code>
       */
      public Builder setCheckBackup(com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest value) {
        if (checkBackupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          checkBackupBuilder_.setMessage(value);
        }
        requestCase_ = 19;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupRequest check_backup = 19;</code>
       */
      public Builder setCheckBackup(
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest.Builder builderForValue) {
        if (checkBackupBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          checkBackupBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 19;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupRequest check_backup = 19;</code>
       */
      public Builder mergeCheckBackup(com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest value) {
        if (checkBackupBuilder_ == null) {
          if (requestCase_ == 19 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 19) {
            checkBackupBuilder_.mergeFrom(value);
          } else {
            checkBackupBuilder_.setMessage(value);
          }
        }
        requestCase_ = 19;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupRequest check_backup = 19;</code>
       */
      public Builder clearCheckBackup() {
        if (checkBackupBuilder_ == null) {
          if (requestCase_ == 19) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 19) {
            requestCase_ = 0;
            request_ = null;
          }
          checkBackupBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupRequest check_backup = 19;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest.Builder getCheckBackupBuilder() {
        return getCheckBackupFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupRequest check_backup = 19;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequestOrBuilder getCheckBackupOrBuilder() {
        if ((requestCase_ == 19) && (checkBackupBuilder_ != null)) {
          return checkBackupBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 19) {
            return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupRequest check_backup = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequestOrBuilder> 
          getCheckBackupFieldBuilder() {
        if (checkBackupBuilder_ == null) {
          if (!(requestCase_ == 19)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest.getDefaultInstance();
          }
          checkBackupBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 19;
        onChanged();
        return checkBackupBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequestOrBuilder> resetBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ResetRequest reset = 21;</code>
       * @return Whether the reset field is set.
       */
      @java.lang.Override
      public boolean hasReset() {
        return requestCase_ == 21;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ResetRequest reset = 21;</code>
       * @return The reset.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest getReset() {
        if (resetBuilder_ == null) {
          if (requestCase_ == 21) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 21) {
            return resetBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ResetRequest reset = 21;</code>
       */
      public Builder setReset(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest value) {
        if (resetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          resetBuilder_.setMessage(value);
        }
        requestCase_ = 21;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ResetRequest reset = 21;</code>
       */
      public Builder setReset(
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest.Builder builderForValue) {
        if (resetBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          resetBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 21;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ResetRequest reset = 21;</code>
       */
      public Builder mergeReset(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest value) {
        if (resetBuilder_ == null) {
          if (requestCase_ == 21 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 21) {
            resetBuilder_.mergeFrom(value);
          } else {
            resetBuilder_.setMessage(value);
          }
        }
        requestCase_ = 21;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ResetRequest reset = 21;</code>
       */
      public Builder clearReset() {
        if (resetBuilder_ == null) {
          if (requestCase_ == 21) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 21) {
            requestCase_ = 0;
            request_ = null;
          }
          resetBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ResetRequest reset = 21;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest.Builder getResetBuilder() {
        return getResetFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ResetRequest reset = 21;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequestOrBuilder getResetOrBuilder() {
        if ((requestCase_ == 21) && (resetBuilder_ != null)) {
          return resetBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 21) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ResetRequest reset = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequestOrBuilder> 
          getResetFieldBuilder() {
        if (resetBuilder_ == null) {
          if (!(requestCase_ == 21)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest.getDefaultInstance();
          }
          resetBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.ResetRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 21;
        onChanged();
        return resetBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequestOrBuilder> restoreFromMnemonicBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreFromMnemonicRequest restore_from_mnemonic = 22;</code>
       * @return Whether the restoreFromMnemonic field is set.
       */
      @java.lang.Override
      public boolean hasRestoreFromMnemonic() {
        return requestCase_ == 22;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreFromMnemonicRequest restore_from_mnemonic = 22;</code>
       * @return The restoreFromMnemonic.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest getRestoreFromMnemonic() {
        if (restoreFromMnemonicBuilder_ == null) {
          if (requestCase_ == 22) {
            return (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 22) {
            return restoreFromMnemonicBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreFromMnemonicRequest restore_from_mnemonic = 22;</code>
       */
      public Builder setRestoreFromMnemonic(com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest value) {
        if (restoreFromMnemonicBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          restoreFromMnemonicBuilder_.setMessage(value);
        }
        requestCase_ = 22;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreFromMnemonicRequest restore_from_mnemonic = 22;</code>
       */
      public Builder setRestoreFromMnemonic(
          com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest.Builder builderForValue) {
        if (restoreFromMnemonicBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          restoreFromMnemonicBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 22;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreFromMnemonicRequest restore_from_mnemonic = 22;</code>
       */
      public Builder mergeRestoreFromMnemonic(com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest value) {
        if (restoreFromMnemonicBuilder_ == null) {
          if (requestCase_ == 22 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 22) {
            restoreFromMnemonicBuilder_.mergeFrom(value);
          } else {
            restoreFromMnemonicBuilder_.setMessage(value);
          }
        }
        requestCase_ = 22;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreFromMnemonicRequest restore_from_mnemonic = 22;</code>
       */
      public Builder clearRestoreFromMnemonic() {
        if (restoreFromMnemonicBuilder_ == null) {
          if (requestCase_ == 22) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 22) {
            requestCase_ = 0;
            request_ = null;
          }
          restoreFromMnemonicBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreFromMnemonicRequest restore_from_mnemonic = 22;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest.Builder getRestoreFromMnemonicBuilder() {
        return getRestoreFromMnemonicFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreFromMnemonicRequest restore_from_mnemonic = 22;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequestOrBuilder getRestoreFromMnemonicOrBuilder() {
        if ((requestCase_ == 22) && (restoreFromMnemonicBuilder_ != null)) {
          return restoreFromMnemonicBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 22) {
            return (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RestoreFromMnemonicRequest restore_from_mnemonic = 22;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequestOrBuilder> 
          getRestoreFromMnemonicFieldBuilder() {
        if (restoreFromMnemonicBuilder_ == null) {
          if (!(requestCase_ == 22)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest.getDefaultInstance();
          }
          restoreFromMnemonicBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Mnemonic.RestoreFromMnemonicRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 22;
        onChanged();
        return restoreFromMnemonicBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest, com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequestOrBuilder> fingerprintBuilder_;
      /**
       * <pre>
       * removed: BitBoxBaseRequest bitboxbase = 23;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintRequest fingerprint = 24;</code>
       * @return Whether the fingerprint field is set.
       */
      @java.lang.Override
      public boolean hasFingerprint() {
        return requestCase_ == 24;
      }
      /**
       * <pre>
       * removed: BitBoxBaseRequest bitboxbase = 23;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintRequest fingerprint = 24;</code>
       * @return The fingerprint.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest getFingerprint() {
        if (fingerprintBuilder_ == null) {
          if (requestCase_ == 24) {
            return (com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 24) {
            return fingerprintBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * removed: BitBoxBaseRequest bitboxbase = 23;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintRequest fingerprint = 24;</code>
       */
      public Builder setFingerprint(com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest value) {
        if (fingerprintBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          fingerprintBuilder_.setMessage(value);
        }
        requestCase_ = 24;
        return this;
      }
      /**
       * <pre>
       * removed: BitBoxBaseRequest bitboxbase = 23;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintRequest fingerprint = 24;</code>
       */
      public Builder setFingerprint(
          com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest.Builder builderForValue) {
        if (fingerprintBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          fingerprintBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 24;
        return this;
      }
      /**
       * <pre>
       * removed: BitBoxBaseRequest bitboxbase = 23;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintRequest fingerprint = 24;</code>
       */
      public Builder mergeFingerprint(com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest value) {
        if (fingerprintBuilder_ == null) {
          if (requestCase_ == 24 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 24) {
            fingerprintBuilder_.mergeFrom(value);
          } else {
            fingerprintBuilder_.setMessage(value);
          }
        }
        requestCase_ = 24;
        return this;
      }
      /**
       * <pre>
       * removed: BitBoxBaseRequest bitboxbase = 23;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintRequest fingerprint = 24;</code>
       */
      public Builder clearFingerprint() {
        if (fingerprintBuilder_ == null) {
          if (requestCase_ == 24) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 24) {
            requestCase_ = 0;
            request_ = null;
          }
          fingerprintBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * removed: BitBoxBaseRequest bitboxbase = 23;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintRequest fingerprint = 24;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest.Builder getFingerprintBuilder() {
        return getFingerprintFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * removed: BitBoxBaseRequest bitboxbase = 23;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintRequest fingerprint = 24;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequestOrBuilder getFingerprintOrBuilder() {
        if ((requestCase_ == 24) && (fingerprintBuilder_ != null)) {
          return fingerprintBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 24) {
            return (com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * removed: BitBoxBaseRequest bitboxbase = 23;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintRequest fingerprint = 24;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest, com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequestOrBuilder> 
          getFingerprintFieldBuilder() {
        if (fingerprintBuilder_ == null) {
          if (!(requestCase_ == 24)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest.getDefaultInstance();
          }
          fingerprintBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest, com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 24;
        onChanged();
        return fingerprintBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequestOrBuilder> btcBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCRequest btc = 25;</code>
       * @return Whether the btc field is set.
       */
      @java.lang.Override
      public boolean hasBtc() {
        return requestCase_ == 25;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCRequest btc = 25;</code>
       * @return The btc.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest getBtc() {
        if (btcBuilder_ == null) {
          if (requestCase_ == 25) {
            return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 25) {
            return btcBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCRequest btc = 25;</code>
       */
      public Builder setBtc(com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest value) {
        if (btcBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          btcBuilder_.setMessage(value);
        }
        requestCase_ = 25;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCRequest btc = 25;</code>
       */
      public Builder setBtc(
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest.Builder builderForValue) {
        if (btcBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          btcBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 25;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCRequest btc = 25;</code>
       */
      public Builder mergeBtc(com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest value) {
        if (btcBuilder_ == null) {
          if (requestCase_ == 25 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 25) {
            btcBuilder_.mergeFrom(value);
          } else {
            btcBuilder_.setMessage(value);
          }
        }
        requestCase_ = 25;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCRequest btc = 25;</code>
       */
      public Builder clearBtc() {
        if (btcBuilder_ == null) {
          if (requestCase_ == 25) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 25) {
            requestCase_ = 0;
            request_ = null;
          }
          btcBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCRequest btc = 25;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest.Builder getBtcBuilder() {
        return getBtcFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCRequest btc = 25;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequestOrBuilder getBtcOrBuilder() {
        if ((requestCase_ == 25) && (btcBuilder_ != null)) {
          return btcBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 25) {
            return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCRequest btc = 25;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequestOrBuilder> 
          getBtcFieldBuilder() {
        if (btcBuilder_ == null) {
          if (!(requestCase_ == 25)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest.getDefaultInstance();
          }
          btcBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 25;
        onChanged();
        return btcBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest, com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequestOrBuilder> electrumEncryptionKeyBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyRequest electrum_encryption_key = 26;</code>
       * @return Whether the electrumEncryptionKey field is set.
       */
      @java.lang.Override
      public boolean hasElectrumEncryptionKey() {
        return requestCase_ == 26;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyRequest electrum_encryption_key = 26;</code>
       * @return The electrumEncryptionKey.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest getElectrumEncryptionKey() {
        if (electrumEncryptionKeyBuilder_ == null) {
          if (requestCase_ == 26) {
            return (com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 26) {
            return electrumEncryptionKeyBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyRequest electrum_encryption_key = 26;</code>
       */
      public Builder setElectrumEncryptionKey(com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest value) {
        if (electrumEncryptionKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          electrumEncryptionKeyBuilder_.setMessage(value);
        }
        requestCase_ = 26;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyRequest electrum_encryption_key = 26;</code>
       */
      public Builder setElectrumEncryptionKey(
          com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest.Builder builderForValue) {
        if (electrumEncryptionKeyBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          electrumEncryptionKeyBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 26;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyRequest electrum_encryption_key = 26;</code>
       */
      public Builder mergeElectrumEncryptionKey(com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest value) {
        if (electrumEncryptionKeyBuilder_ == null) {
          if (requestCase_ == 26 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 26) {
            electrumEncryptionKeyBuilder_.mergeFrom(value);
          } else {
            electrumEncryptionKeyBuilder_.setMessage(value);
          }
        }
        requestCase_ = 26;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyRequest electrum_encryption_key = 26;</code>
       */
      public Builder clearElectrumEncryptionKey() {
        if (electrumEncryptionKeyBuilder_ == null) {
          if (requestCase_ == 26) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 26) {
            requestCase_ = 0;
            request_ = null;
          }
          electrumEncryptionKeyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyRequest electrum_encryption_key = 26;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest.Builder getElectrumEncryptionKeyBuilder() {
        return getElectrumEncryptionKeyFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyRequest electrum_encryption_key = 26;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequestOrBuilder getElectrumEncryptionKeyOrBuilder() {
        if ((requestCase_ == 26) && (electrumEncryptionKeyBuilder_ != null)) {
          return electrumEncryptionKeyBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 26) {
            return (com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyRequest electrum_encryption_key = 26;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest, com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequestOrBuilder> 
          getElectrumEncryptionKeyFieldBuilder() {
        if (electrumEncryptionKeyBuilder_ == null) {
          if (!(requestCase_ == 26)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest.getDefaultInstance();
          }
          electrumEncryptionKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest, com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest.Builder, com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 26;
        onChanged();
        return electrumEncryptionKeyBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request, com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request.Builder, com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85RequestOrBuilder> bip85Builder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Request bip85 = 28;</code>
       * @return Whether the bip85 field is set.
       */
      @java.lang.Override
      public boolean hasBip85() {
        return requestCase_ == 28;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Request bip85 = 28;</code>
       * @return The bip85.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request getBip85() {
        if (bip85Builder_ == null) {
          if (requestCase_ == 28) {
            return (com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request.getDefaultInstance();
        } else {
          if (requestCase_ == 28) {
            return bip85Builder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Request bip85 = 28;</code>
       */
      public Builder setBip85(com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request value) {
        if (bip85Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          bip85Builder_.setMessage(value);
        }
        requestCase_ = 28;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Request bip85 = 28;</code>
       */
      public Builder setBip85(
          com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request.Builder builderForValue) {
        if (bip85Builder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          bip85Builder_.setMessage(builderForValue.build());
        }
        requestCase_ = 28;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Request bip85 = 28;</code>
       */
      public Builder mergeBip85(com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request value) {
        if (bip85Builder_ == null) {
          if (requestCase_ == 28 &&
              request_ != com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request.getDefaultInstance()) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 28) {
            bip85Builder_.mergeFrom(value);
          } else {
            bip85Builder_.setMessage(value);
          }
        }
        requestCase_ = 28;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Request bip85 = 28;</code>
       */
      public Builder clearBip85() {
        if (bip85Builder_ == null) {
          if (requestCase_ == 28) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 28) {
            requestCase_ = 0;
            request_ = null;
          }
          bip85Builder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Request bip85 = 28;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request.Builder getBip85Builder() {
        return getBip85FieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Request bip85 = 28;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85RequestOrBuilder getBip85OrBuilder() {
        if ((requestCase_ == 28) && (bip85Builder_ != null)) {
          return bip85Builder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 28) {
            return (com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request) request_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Request bip85 = 28;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request, com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request.Builder, com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85RequestOrBuilder> 
          getBip85FieldBuilder() {
        if (bip85Builder_ == null) {
          if (!(requestCase_ == 28)) {
            request_ = com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request.getDefaultInstance();
          }
          bip85Builder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request, com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request.Builder, com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85RequestOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Request) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 28;
        onChanged();
        return bip85Builder_;
      }

      // @@protoc_insertion_point(builder_scope:com.sparrowwallet.lark.bitbox02.generated.Request)
    }

    // @@protoc_insertion_point(class_scope:com.sparrowwallet.lark.bitbox02.generated.Request)
    private static final com.sparrowwallet.lark.bitbox02.generated.Hww.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sparrowwallet.lark.bitbox02.generated.Hww.Request();
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Request>
        PARSER = new com.google.protobuf.AbstractParser<Request>() {
      @java.lang.Override
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Hww.Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sparrowwallet.lark.bitbox02.generated.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.Success success = 1;</code>
     * @return Whether the success field is set.
     */
    boolean hasSuccess();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.Success success = 1;</code>
     * @return The success.
     */
    com.sparrowwallet.lark.bitbox02.generated.Hww.Success getSuccess();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.Success success = 1;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Hww.SuccessOrBuilder getSuccessOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.Error error = 2;</code>
     * @return Whether the error field is set.
     */
    boolean hasError();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.Error error = 2;</code>
     * @return The error.
     */
    com.sparrowwallet.lark.bitbox02.generated.Hww.Error getError();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.Error error = 2;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Hww.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <pre>
     * removed: RandomNumberResponse random_number = 3;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoResponse device_info = 4;</code>
     * @return Whether the deviceInfo field is set.
     */
    boolean hasDeviceInfo();
    /**
     * <pre>
     * removed: RandomNumberResponse random_number = 3;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoResponse device_info = 4;</code>
     * @return The deviceInfo.
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse getDeviceInfo();
    /**
     * <pre>
     * removed: RandomNumberResponse random_number = 3;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoResponse device_info = 4;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponseOrBuilder getDeviceInfoOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PubResponse pub = 5;</code>
     * @return Whether the pub field is set.
     */
    boolean hasPub();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PubResponse pub = 5;</code>
     * @return The pub.
     */
    com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse getPub();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PubResponse pub = 5;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Common.PubResponseOrBuilder getPubOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignNextResponse btc_sign_next = 6;</code>
     * @return Whether the btcSignNext field is set.
     */
    boolean hasBtcSignNext();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignNextResponse btc_sign_next = 6;</code>
     * @return The btcSignNext.
     */
    com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse getBtcSignNext();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignNextResponse btc_sign_next = 6;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponseOrBuilder getBtcSignNextOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsResponse list_backups = 7;</code>
     * @return Whether the listBackups field is set.
     */
    boolean hasListBackups();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsResponse list_backups = 7;</code>
     * @return The listBackups.
     */
    com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse getListBackups();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsResponse list_backups = 7;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponseOrBuilder getListBackupsOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupResponse check_backup = 8;</code>
     * @return Whether the checkBackup field is set.
     */
    boolean hasCheckBackup();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupResponse check_backup = 8;</code>
     * @return The checkBackup.
     */
    com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse getCheckBackup();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupResponse check_backup = 8;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponseOrBuilder getCheckBackupOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationResponse perform_attestation = 9;</code>
     * @return Whether the performAttestation field is set.
     */
    boolean hasPerformAttestation();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationResponse perform_attestation = 9;</code>
     * @return The performAttestation.
     */
    com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse getPerformAttestation();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationResponse perform_attestation = 9;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponseOrBuilder getPerformAttestationOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardResponse check_sdcard = 10;</code>
     * @return Whether the checkSdcard field is set.
     */
    boolean hasCheckSdcard();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardResponse check_sdcard = 10;</code>
     * @return The checkSdcard.
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse getCheckSdcard();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardResponse check_sdcard = 10;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponseOrBuilder getCheckSdcardOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintResponse fingerprint = 12;</code>
     * @return Whether the fingerprint field is set.
     */
    boolean hasFingerprint();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintResponse fingerprint = 12;</code>
     * @return The fingerprint.
     */
    com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse getFingerprint();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintResponse fingerprint = 12;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponseOrBuilder getFingerprintOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCResponse btc = 13;</code>
     * @return Whether the btc field is set.
     */
    boolean hasBtc();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCResponse btc = 13;</code>
     * @return The btc.
     */
    com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse getBtc();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCResponse btc = 13;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponseOrBuilder getBtcOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyResponse electrum_encryption_key = 14;</code>
     * @return Whether the electrumEncryptionKey field is set.
     */
    boolean hasElectrumEncryptionKey();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyResponse electrum_encryption_key = 14;</code>
     * @return The electrumEncryptionKey.
     */
    com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse getElectrumEncryptionKey();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyResponse electrum_encryption_key = 14;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponseOrBuilder getElectrumEncryptionKeyOrBuilder();

    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Response bip85 = 16;</code>
     * @return Whether the bip85 field is set.
     */
    boolean hasBip85();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Response bip85 = 16;</code>
     * @return The bip85.
     */
    com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response getBip85();
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Response bip85 = 16;</code>
     */
    com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85ResponseOrBuilder getBip85OrBuilder();

    com.sparrowwallet.lark.bitbox02.generated.Hww.Response.ResponseCase getResponseCase();
  }
  /**
   * Protobuf type {@code com.sparrowwallet.lark.bitbox02.generated.Response}
   */
  public static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.sparrowwallet.lark.bitbox02.generated.Response)
      ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        Response.class.getName());
    }
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sparrowwallet.lark.bitbox02.generated.Hww.Response.class, com.sparrowwallet.lark.bitbox02.generated.Hww.Response.Builder.class);
    }

    private int responseCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object response_;
    public enum ResponseCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SUCCESS(1),
      ERROR(2),
      DEVICE_INFO(4),
      PUB(5),
      BTC_SIGN_NEXT(6),
      LIST_BACKUPS(7),
      CHECK_BACKUP(8),
      PERFORM_ATTESTATION(9),
      CHECK_SDCARD(10),
      FINGERPRINT(12),
      BTC(13),
      ELECTRUM_ENCRYPTION_KEY(14),
      BIP85(16),
      RESPONSE_NOT_SET(0);
      private final int value;
      private ResponseCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ResponseCase valueOf(int value) {
        return forNumber(value);
      }

      public static ResponseCase forNumber(int value) {
        switch (value) {
          case 1: return SUCCESS;
          case 2: return ERROR;
          case 4: return DEVICE_INFO;
          case 5: return PUB;
          case 6: return BTC_SIGN_NEXT;
          case 7: return LIST_BACKUPS;
          case 8: return CHECK_BACKUP;
          case 9: return PERFORM_ATTESTATION;
          case 10: return CHECK_SDCARD;
          case 12: return FINGERPRINT;
          case 13: return BTC;
          case 14: return ELECTRUM_ENCRYPTION_KEY;
          case 16: return BIP85;
          case 0: return RESPONSE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ResponseCase
    getResponseCase() {
      return ResponseCase.forNumber(
          responseCase_);
    }

    public static final int SUCCESS_FIELD_NUMBER = 1;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.Success success = 1;</code>
     * @return Whether the success field is set.
     */
    @java.lang.Override
    public boolean hasSuccess() {
      return responseCase_ == 1;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.Success success = 1;</code>
     * @return The success.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Hww.Success getSuccess() {
      if (responseCase_ == 1) {
         return (com.sparrowwallet.lark.bitbox02.generated.Hww.Success) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Hww.Success.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.Success success = 1;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Hww.SuccessOrBuilder getSuccessOrBuilder() {
      if (responseCase_ == 1) {
         return (com.sparrowwallet.lark.bitbox02.generated.Hww.Success) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Hww.Success.getDefaultInstance();
    }

    public static final int ERROR_FIELD_NUMBER = 2;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.Error error = 2;</code>
     * @return Whether the error field is set.
     */
    @java.lang.Override
    public boolean hasError() {
      return responseCase_ == 2;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.Error error = 2;</code>
     * @return The error.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Hww.Error getError() {
      if (responseCase_ == 2) {
         return (com.sparrowwallet.lark.bitbox02.generated.Hww.Error) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Hww.Error.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.Error error = 2;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Hww.ErrorOrBuilder getErrorOrBuilder() {
      if (responseCase_ == 2) {
         return (com.sparrowwallet.lark.bitbox02.generated.Hww.Error) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Hww.Error.getDefaultInstance();
    }

    public static final int DEVICE_INFO_FIELD_NUMBER = 4;
    /**
     * <pre>
     * removed: RandomNumberResponse random_number = 3;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoResponse device_info = 4;</code>
     * @return Whether the deviceInfo field is set.
     */
    @java.lang.Override
    public boolean hasDeviceInfo() {
      return responseCase_ == 4;
    }
    /**
     * <pre>
     * removed: RandomNumberResponse random_number = 3;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoResponse device_info = 4;</code>
     * @return The deviceInfo.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse getDeviceInfo() {
      if (responseCase_ == 4) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse.getDefaultInstance();
    }
    /**
     * <pre>
     * removed: RandomNumberResponse random_number = 3;
     * </pre>
     *
     * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoResponse device_info = 4;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponseOrBuilder getDeviceInfoOrBuilder() {
      if (responseCase_ == 4) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse.getDefaultInstance();
    }

    public static final int PUB_FIELD_NUMBER = 5;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PubResponse pub = 5;</code>
     * @return Whether the pub field is set.
     */
    @java.lang.Override
    public boolean hasPub() {
      return responseCase_ == 5;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PubResponse pub = 5;</code>
     * @return The pub.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse getPub() {
      if (responseCase_ == 5) {
         return (com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PubResponse pub = 5;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Common.PubResponseOrBuilder getPubOrBuilder() {
      if (responseCase_ == 5) {
         return (com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse.getDefaultInstance();
    }

    public static final int BTC_SIGN_NEXT_FIELD_NUMBER = 6;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignNextResponse btc_sign_next = 6;</code>
     * @return Whether the btcSignNext field is set.
     */
    @java.lang.Override
    public boolean hasBtcSignNext() {
      return responseCase_ == 6;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignNextResponse btc_sign_next = 6;</code>
     * @return The btcSignNext.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse getBtcSignNext() {
      if (responseCase_ == 6) {
         return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignNextResponse btc_sign_next = 6;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponseOrBuilder getBtcSignNextOrBuilder() {
      if (responseCase_ == 6) {
         return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse.getDefaultInstance();
    }

    public static final int LIST_BACKUPS_FIELD_NUMBER = 7;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsResponse list_backups = 7;</code>
     * @return Whether the listBackups field is set.
     */
    @java.lang.Override
    public boolean hasListBackups() {
      return responseCase_ == 7;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsResponse list_backups = 7;</code>
     * @return The listBackups.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse getListBackups() {
      if (responseCase_ == 7) {
         return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsResponse list_backups = 7;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponseOrBuilder getListBackupsOrBuilder() {
      if (responseCase_ == 7) {
         return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse.getDefaultInstance();
    }

    public static final int CHECK_BACKUP_FIELD_NUMBER = 8;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupResponse check_backup = 8;</code>
     * @return Whether the checkBackup field is set.
     */
    @java.lang.Override
    public boolean hasCheckBackup() {
      return responseCase_ == 8;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupResponse check_backup = 8;</code>
     * @return The checkBackup.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse getCheckBackup() {
      if (responseCase_ == 8) {
         return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupResponse check_backup = 8;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponseOrBuilder getCheckBackupOrBuilder() {
      if (responseCase_ == 8) {
         return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse.getDefaultInstance();
    }

    public static final int PERFORM_ATTESTATION_FIELD_NUMBER = 9;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationResponse perform_attestation = 9;</code>
     * @return Whether the performAttestation field is set.
     */
    @java.lang.Override
    public boolean hasPerformAttestation() {
      return responseCase_ == 9;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationResponse perform_attestation = 9;</code>
     * @return The performAttestation.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse getPerformAttestation() {
      if (responseCase_ == 9) {
         return (com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationResponse perform_attestation = 9;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponseOrBuilder getPerformAttestationOrBuilder() {
      if (responseCase_ == 9) {
         return (com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse.getDefaultInstance();
    }

    public static final int CHECK_SDCARD_FIELD_NUMBER = 10;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardResponse check_sdcard = 10;</code>
     * @return Whether the checkSdcard field is set.
     */
    @java.lang.Override
    public boolean hasCheckSdcard() {
      return responseCase_ == 10;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardResponse check_sdcard = 10;</code>
     * @return The checkSdcard.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse getCheckSdcard() {
      if (responseCase_ == 10) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardResponse check_sdcard = 10;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponseOrBuilder getCheckSdcardOrBuilder() {
      if (responseCase_ == 10) {
         return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse.getDefaultInstance();
    }

    public static final int FINGERPRINT_FIELD_NUMBER = 12;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintResponse fingerprint = 12;</code>
     * @return Whether the fingerprint field is set.
     */
    @java.lang.Override
    public boolean hasFingerprint() {
      return responseCase_ == 12;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintResponse fingerprint = 12;</code>
     * @return The fingerprint.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse getFingerprint() {
      if (responseCase_ == 12) {
         return (com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintResponse fingerprint = 12;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponseOrBuilder getFingerprintOrBuilder() {
      if (responseCase_ == 12) {
         return (com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse.getDefaultInstance();
    }

    public static final int BTC_FIELD_NUMBER = 13;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCResponse btc = 13;</code>
     * @return Whether the btc field is set.
     */
    @java.lang.Override
    public boolean hasBtc() {
      return responseCase_ == 13;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCResponse btc = 13;</code>
     * @return The btc.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse getBtc() {
      if (responseCase_ == 13) {
         return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCResponse btc = 13;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponseOrBuilder getBtcOrBuilder() {
      if (responseCase_ == 13) {
         return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse.getDefaultInstance();
    }

    public static final int ELECTRUM_ENCRYPTION_KEY_FIELD_NUMBER = 14;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyResponse electrum_encryption_key = 14;</code>
     * @return Whether the electrumEncryptionKey field is set.
     */
    @java.lang.Override
    public boolean hasElectrumEncryptionKey() {
      return responseCase_ == 14;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyResponse electrum_encryption_key = 14;</code>
     * @return The electrumEncryptionKey.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse getElectrumEncryptionKey() {
      if (responseCase_ == 14) {
         return (com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyResponse electrum_encryption_key = 14;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponseOrBuilder getElectrumEncryptionKeyOrBuilder() {
      if (responseCase_ == 14) {
         return (com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse.getDefaultInstance();
    }

    public static final int BIP85_FIELD_NUMBER = 16;
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Response bip85 = 16;</code>
     * @return Whether the bip85 field is set.
     */
    @java.lang.Override
    public boolean hasBip85() {
      return responseCase_ == 16;
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Response bip85 = 16;</code>
     * @return The bip85.
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response getBip85() {
      if (responseCase_ == 16) {
         return (com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response.getDefaultInstance();
    }
    /**
     * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Response bip85 = 16;</code>
     */
    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85ResponseOrBuilder getBip85OrBuilder() {
      if (responseCase_ == 16) {
         return (com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response) response_;
      }
      return com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (responseCase_ == 1) {
        output.writeMessage(1, (com.sparrowwallet.lark.bitbox02.generated.Hww.Success) response_);
      }
      if (responseCase_ == 2) {
        output.writeMessage(2, (com.sparrowwallet.lark.bitbox02.generated.Hww.Error) response_);
      }
      if (responseCase_ == 4) {
        output.writeMessage(4, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse) response_);
      }
      if (responseCase_ == 5) {
        output.writeMessage(5, (com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse) response_);
      }
      if (responseCase_ == 6) {
        output.writeMessage(6, (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse) response_);
      }
      if (responseCase_ == 7) {
        output.writeMessage(7, (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse) response_);
      }
      if (responseCase_ == 8) {
        output.writeMessage(8, (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse) response_);
      }
      if (responseCase_ == 9) {
        output.writeMessage(9, (com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse) response_);
      }
      if (responseCase_ == 10) {
        output.writeMessage(10, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse) response_);
      }
      if (responseCase_ == 12) {
        output.writeMessage(12, (com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse) response_);
      }
      if (responseCase_ == 13) {
        output.writeMessage(13, (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse) response_);
      }
      if (responseCase_ == 14) {
        output.writeMessage(14, (com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse) response_);
      }
      if (responseCase_ == 16) {
        output.writeMessage(16, (com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response) response_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (responseCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.sparrowwallet.lark.bitbox02.generated.Hww.Success) response_);
      }
      if (responseCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.sparrowwallet.lark.bitbox02.generated.Hww.Error) response_);
      }
      if (responseCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse) response_);
      }
      if (responseCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse) response_);
      }
      if (responseCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse) response_);
      }
      if (responseCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse) response_);
      }
      if (responseCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse) response_);
      }
      if (responseCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse) response_);
      }
      if (responseCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse) response_);
      }
      if (responseCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse) response_);
      }
      if (responseCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse) response_);
      }
      if (responseCase_ == 14) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, (com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse) response_);
      }
      if (responseCase_ == 16) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, (com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response) response_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sparrowwallet.lark.bitbox02.generated.Hww.Response)) {
        return super.equals(obj);
      }
      com.sparrowwallet.lark.bitbox02.generated.Hww.Response other = (com.sparrowwallet.lark.bitbox02.generated.Hww.Response) obj;

      if (!getResponseCase().equals(other.getResponseCase())) return false;
      switch (responseCase_) {
        case 1:
          if (!getSuccess()
              .equals(other.getSuccess())) return false;
          break;
        case 2:
          if (!getError()
              .equals(other.getError())) return false;
          break;
        case 4:
          if (!getDeviceInfo()
              .equals(other.getDeviceInfo())) return false;
          break;
        case 5:
          if (!getPub()
              .equals(other.getPub())) return false;
          break;
        case 6:
          if (!getBtcSignNext()
              .equals(other.getBtcSignNext())) return false;
          break;
        case 7:
          if (!getListBackups()
              .equals(other.getListBackups())) return false;
          break;
        case 8:
          if (!getCheckBackup()
              .equals(other.getCheckBackup())) return false;
          break;
        case 9:
          if (!getPerformAttestation()
              .equals(other.getPerformAttestation())) return false;
          break;
        case 10:
          if (!getCheckSdcard()
              .equals(other.getCheckSdcard())) return false;
          break;
        case 12:
          if (!getFingerprint()
              .equals(other.getFingerprint())) return false;
          break;
        case 13:
          if (!getBtc()
              .equals(other.getBtc())) return false;
          break;
        case 14:
          if (!getElectrumEncryptionKey()
              .equals(other.getElectrumEncryptionKey())) return false;
          break;
        case 16:
          if (!getBip85()
              .equals(other.getBip85())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (responseCase_) {
        case 1:
          hash = (37 * hash) + SUCCESS_FIELD_NUMBER;
          hash = (53 * hash) + getSuccess().hashCode();
          break;
        case 2:
          hash = (37 * hash) + ERROR_FIELD_NUMBER;
          hash = (53 * hash) + getError().hashCode();
          break;
        case 4:
          hash = (37 * hash) + DEVICE_INFO_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceInfo().hashCode();
          break;
        case 5:
          hash = (37 * hash) + PUB_FIELD_NUMBER;
          hash = (53 * hash) + getPub().hashCode();
          break;
        case 6:
          hash = (37 * hash) + BTC_SIGN_NEXT_FIELD_NUMBER;
          hash = (53 * hash) + getBtcSignNext().hashCode();
          break;
        case 7:
          hash = (37 * hash) + LIST_BACKUPS_FIELD_NUMBER;
          hash = (53 * hash) + getListBackups().hashCode();
          break;
        case 8:
          hash = (37 * hash) + CHECK_BACKUP_FIELD_NUMBER;
          hash = (53 * hash) + getCheckBackup().hashCode();
          break;
        case 9:
          hash = (37 * hash) + PERFORM_ATTESTATION_FIELD_NUMBER;
          hash = (53 * hash) + getPerformAttestation().hashCode();
          break;
        case 10:
          hash = (37 * hash) + CHECK_SDCARD_FIELD_NUMBER;
          hash = (53 * hash) + getCheckSdcard().hashCode();
          break;
        case 12:
          hash = (37 * hash) + FINGERPRINT_FIELD_NUMBER;
          hash = (53 * hash) + getFingerprint().hashCode();
          break;
        case 13:
          hash = (37 * hash) + BTC_FIELD_NUMBER;
          hash = (53 * hash) + getBtc().hashCode();
          break;
        case 14:
          hash = (37 * hash) + ELECTRUM_ENCRYPTION_KEY_FIELD_NUMBER;
          hash = (53 * hash) + getElectrumEncryptionKey().hashCode();
          break;
        case 16:
          hash = (37 * hash) + BIP85_FIELD_NUMBER;
          hash = (53 * hash) + getBip85().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sparrowwallet.lark.bitbox02.generated.Hww.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sparrowwallet.lark.bitbox02.generated.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sparrowwallet.lark.bitbox02.generated.Response)
        com.sparrowwallet.lark.bitbox02.generated.Hww.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sparrowwallet.lark.bitbox02.generated.Hww.Response.class, com.sparrowwallet.lark.bitbox02.generated.Hww.Response.Builder.class);
      }

      // Construct using com.sparrowwallet.lark.bitbox02.generated.Hww.Response.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (successBuilder_ != null) {
          successBuilder_.clear();
        }
        if (errorBuilder_ != null) {
          errorBuilder_.clear();
        }
        if (deviceInfoBuilder_ != null) {
          deviceInfoBuilder_.clear();
        }
        if (pubBuilder_ != null) {
          pubBuilder_.clear();
        }
        if (btcSignNextBuilder_ != null) {
          btcSignNextBuilder_.clear();
        }
        if (listBackupsBuilder_ != null) {
          listBackupsBuilder_.clear();
        }
        if (checkBackupBuilder_ != null) {
          checkBackupBuilder_.clear();
        }
        if (performAttestationBuilder_ != null) {
          performAttestationBuilder_.clear();
        }
        if (checkSdcardBuilder_ != null) {
          checkSdcardBuilder_.clear();
        }
        if (fingerprintBuilder_ != null) {
          fingerprintBuilder_.clear();
        }
        if (btcBuilder_ != null) {
          btcBuilder_.clear();
        }
        if (electrumEncryptionKeyBuilder_ != null) {
          electrumEncryptionKeyBuilder_.clear();
        }
        if (bip85Builder_ != null) {
          bip85Builder_.clear();
        }
        responseCase_ = 0;
        response_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.internal_static_com_sparrowwallet_lark_bitbox02_generated_Response_descriptor;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Response getDefaultInstanceForType() {
        return com.sparrowwallet.lark.bitbox02.generated.Hww.Response.getDefaultInstance();
      }

      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Response build() {
        com.sparrowwallet.lark.bitbox02.generated.Hww.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Response buildPartial() {
        com.sparrowwallet.lark.bitbox02.generated.Hww.Response result = new com.sparrowwallet.lark.bitbox02.generated.Hww.Response(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.sparrowwallet.lark.bitbox02.generated.Hww.Response result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(com.sparrowwallet.lark.bitbox02.generated.Hww.Response result) {
        result.responseCase_ = responseCase_;
        result.response_ = this.response_;
        if (responseCase_ == 1 &&
            successBuilder_ != null) {
          result.response_ = successBuilder_.build();
        }
        if (responseCase_ == 2 &&
            errorBuilder_ != null) {
          result.response_ = errorBuilder_.build();
        }
        if (responseCase_ == 4 &&
            deviceInfoBuilder_ != null) {
          result.response_ = deviceInfoBuilder_.build();
        }
        if (responseCase_ == 5 &&
            pubBuilder_ != null) {
          result.response_ = pubBuilder_.build();
        }
        if (responseCase_ == 6 &&
            btcSignNextBuilder_ != null) {
          result.response_ = btcSignNextBuilder_.build();
        }
        if (responseCase_ == 7 &&
            listBackupsBuilder_ != null) {
          result.response_ = listBackupsBuilder_.build();
        }
        if (responseCase_ == 8 &&
            checkBackupBuilder_ != null) {
          result.response_ = checkBackupBuilder_.build();
        }
        if (responseCase_ == 9 &&
            performAttestationBuilder_ != null) {
          result.response_ = performAttestationBuilder_.build();
        }
        if (responseCase_ == 10 &&
            checkSdcardBuilder_ != null) {
          result.response_ = checkSdcardBuilder_.build();
        }
        if (responseCase_ == 12 &&
            fingerprintBuilder_ != null) {
          result.response_ = fingerprintBuilder_.build();
        }
        if (responseCase_ == 13 &&
            btcBuilder_ != null) {
          result.response_ = btcBuilder_.build();
        }
        if (responseCase_ == 14 &&
            electrumEncryptionKeyBuilder_ != null) {
          result.response_ = electrumEncryptionKeyBuilder_.build();
        }
        if (responseCase_ == 16 &&
            bip85Builder_ != null) {
          result.response_ = bip85Builder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sparrowwallet.lark.bitbox02.generated.Hww.Response) {
          return mergeFrom((com.sparrowwallet.lark.bitbox02.generated.Hww.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sparrowwallet.lark.bitbox02.generated.Hww.Response other) {
        if (other == com.sparrowwallet.lark.bitbox02.generated.Hww.Response.getDefaultInstance()) return this;
        switch (other.getResponseCase()) {
          case SUCCESS: {
            mergeSuccess(other.getSuccess());
            break;
          }
          case ERROR: {
            mergeError(other.getError());
            break;
          }
          case DEVICE_INFO: {
            mergeDeviceInfo(other.getDeviceInfo());
            break;
          }
          case PUB: {
            mergePub(other.getPub());
            break;
          }
          case BTC_SIGN_NEXT: {
            mergeBtcSignNext(other.getBtcSignNext());
            break;
          }
          case LIST_BACKUPS: {
            mergeListBackups(other.getListBackups());
            break;
          }
          case CHECK_BACKUP: {
            mergeCheckBackup(other.getCheckBackup());
            break;
          }
          case PERFORM_ATTESTATION: {
            mergePerformAttestation(other.getPerformAttestation());
            break;
          }
          case CHECK_SDCARD: {
            mergeCheckSdcard(other.getCheckSdcard());
            break;
          }
          case FINGERPRINT: {
            mergeFingerprint(other.getFingerprint());
            break;
          }
          case BTC: {
            mergeBtc(other.getBtc());
            break;
          }
          case ELECTRUM_ENCRYPTION_KEY: {
            mergeElectrumEncryptionKey(other.getElectrumEncryptionKey());
            break;
          }
          case BIP85: {
            mergeBip85(other.getBip85());
            break;
          }
          case RESPONSE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getSuccessFieldBuilder().getBuilder(),
                    extensionRegistry);
                responseCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getErrorFieldBuilder().getBuilder(),
                    extensionRegistry);
                responseCase_ = 2;
                break;
              } // case 18
              case 34: {
                input.readMessage(
                    getDeviceInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                responseCase_ = 4;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getPubFieldBuilder().getBuilder(),
                    extensionRegistry);
                responseCase_ = 5;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getBtcSignNextFieldBuilder().getBuilder(),
                    extensionRegistry);
                responseCase_ = 6;
                break;
              } // case 50
              case 58: {
                input.readMessage(
                    getListBackupsFieldBuilder().getBuilder(),
                    extensionRegistry);
                responseCase_ = 7;
                break;
              } // case 58
              case 66: {
                input.readMessage(
                    getCheckBackupFieldBuilder().getBuilder(),
                    extensionRegistry);
                responseCase_ = 8;
                break;
              } // case 66
              case 74: {
                input.readMessage(
                    getPerformAttestationFieldBuilder().getBuilder(),
                    extensionRegistry);
                responseCase_ = 9;
                break;
              } // case 74
              case 82: {
                input.readMessage(
                    getCheckSdcardFieldBuilder().getBuilder(),
                    extensionRegistry);
                responseCase_ = 10;
                break;
              } // case 82
              case 98: {
                input.readMessage(
                    getFingerprintFieldBuilder().getBuilder(),
                    extensionRegistry);
                responseCase_ = 12;
                break;
              } // case 98
              case 106: {
                input.readMessage(
                    getBtcFieldBuilder().getBuilder(),
                    extensionRegistry);
                responseCase_ = 13;
                break;
              } // case 106
              case 114: {
                input.readMessage(
                    getElectrumEncryptionKeyFieldBuilder().getBuilder(),
                    extensionRegistry);
                responseCase_ = 14;
                break;
              } // case 114
              case 130: {
                input.readMessage(
                    getBip85FieldBuilder().getBuilder(),
                    extensionRegistry);
                responseCase_ = 16;
                break;
              } // case 130
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int responseCase_ = 0;
      private java.lang.Object response_;
      public ResponseCase
          getResponseCase() {
        return ResponseCase.forNumber(
            responseCase_);
      }

      public Builder clearResponse() {
        responseCase_ = 0;
        response_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Hww.Success, com.sparrowwallet.lark.bitbox02.generated.Hww.Success.Builder, com.sparrowwallet.lark.bitbox02.generated.Hww.SuccessOrBuilder> successBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Success success = 1;</code>
       * @return Whether the success field is set.
       */
      @java.lang.Override
      public boolean hasSuccess() {
        return responseCase_ == 1;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Success success = 1;</code>
       * @return The success.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Success getSuccess() {
        if (successBuilder_ == null) {
          if (responseCase_ == 1) {
            return (com.sparrowwallet.lark.bitbox02.generated.Hww.Success) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Hww.Success.getDefaultInstance();
        } else {
          if (responseCase_ == 1) {
            return successBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Hww.Success.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Success success = 1;</code>
       */
      public Builder setSuccess(com.sparrowwallet.lark.bitbox02.generated.Hww.Success value) {
        if (successBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          successBuilder_.setMessage(value);
        }
        responseCase_ = 1;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Success success = 1;</code>
       */
      public Builder setSuccess(
          com.sparrowwallet.lark.bitbox02.generated.Hww.Success.Builder builderForValue) {
        if (successBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          successBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 1;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Success success = 1;</code>
       */
      public Builder mergeSuccess(com.sparrowwallet.lark.bitbox02.generated.Hww.Success value) {
        if (successBuilder_ == null) {
          if (responseCase_ == 1 &&
              response_ != com.sparrowwallet.lark.bitbox02.generated.Hww.Success.getDefaultInstance()) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Hww.Success.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Hww.Success) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 1) {
            successBuilder_.mergeFrom(value);
          } else {
            successBuilder_.setMessage(value);
          }
        }
        responseCase_ = 1;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Success success = 1;</code>
       */
      public Builder clearSuccess() {
        if (successBuilder_ == null) {
          if (responseCase_ == 1) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 1) {
            responseCase_ = 0;
            response_ = null;
          }
          successBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Success success = 1;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Success.Builder getSuccessBuilder() {
        return getSuccessFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Success success = 1;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.SuccessOrBuilder getSuccessOrBuilder() {
        if ((responseCase_ == 1) && (successBuilder_ != null)) {
          return successBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 1) {
            return (com.sparrowwallet.lark.bitbox02.generated.Hww.Success) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Hww.Success.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Success success = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Hww.Success, com.sparrowwallet.lark.bitbox02.generated.Hww.Success.Builder, com.sparrowwallet.lark.bitbox02.generated.Hww.SuccessOrBuilder> 
          getSuccessFieldBuilder() {
        if (successBuilder_ == null) {
          if (!(responseCase_ == 1)) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Hww.Success.getDefaultInstance();
          }
          successBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Hww.Success, com.sparrowwallet.lark.bitbox02.generated.Hww.Success.Builder, com.sparrowwallet.lark.bitbox02.generated.Hww.SuccessOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Hww.Success) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 1;
        onChanged();
        return successBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Hww.Error, com.sparrowwallet.lark.bitbox02.generated.Hww.Error.Builder, com.sparrowwallet.lark.bitbox02.generated.Hww.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Error error = 2;</code>
       * @return Whether the error field is set.
       */
      @java.lang.Override
      public boolean hasError() {
        return responseCase_ == 2;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Error error = 2;</code>
       * @return The error.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Error getError() {
        if (errorBuilder_ == null) {
          if (responseCase_ == 2) {
            return (com.sparrowwallet.lark.bitbox02.generated.Hww.Error) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Hww.Error.getDefaultInstance();
        } else {
          if (responseCase_ == 2) {
            return errorBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Hww.Error.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Error error = 2;</code>
       */
      public Builder setError(com.sparrowwallet.lark.bitbox02.generated.Hww.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }
        responseCase_ = 2;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Error error = 2;</code>
       */
      public Builder setError(
          com.sparrowwallet.lark.bitbox02.generated.Hww.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 2;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Error error = 2;</code>
       */
      public Builder mergeError(com.sparrowwallet.lark.bitbox02.generated.Hww.Error value) {
        if (errorBuilder_ == null) {
          if (responseCase_ == 2 &&
              response_ != com.sparrowwallet.lark.bitbox02.generated.Hww.Error.getDefaultInstance()) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Hww.Error.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Hww.Error) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 2) {
            errorBuilder_.mergeFrom(value);
          } else {
            errorBuilder_.setMessage(value);
          }
        }
        responseCase_ = 2;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Error error = 2;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          if (responseCase_ == 2) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 2) {
            responseCase_ = 0;
            response_ = null;
          }
          errorBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Error error = 2;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Hww.Error.Builder getErrorBuilder() {
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Error error = 2;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Hww.ErrorOrBuilder getErrorOrBuilder() {
        if ((responseCase_ == 2) && (errorBuilder_ != null)) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 2) {
            return (com.sparrowwallet.lark.bitbox02.generated.Hww.Error) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Hww.Error.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.Error error = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Hww.Error, com.sparrowwallet.lark.bitbox02.generated.Hww.Error.Builder, com.sparrowwallet.lark.bitbox02.generated.Hww.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          if (!(responseCase_ == 2)) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Hww.Error.getDefaultInstance();
          }
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Hww.Error, com.sparrowwallet.lark.bitbox02.generated.Hww.Error.Builder, com.sparrowwallet.lark.bitbox02.generated.Hww.ErrorOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Hww.Error) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 2;
        onChanged();
        return errorBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponseOrBuilder> deviceInfoBuilder_;
      /**
       * <pre>
       * removed: RandomNumberResponse random_number = 3;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoResponse device_info = 4;</code>
       * @return Whether the deviceInfo field is set.
       */
      @java.lang.Override
      public boolean hasDeviceInfo() {
        return responseCase_ == 4;
      }
      /**
       * <pre>
       * removed: RandomNumberResponse random_number = 3;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoResponse device_info = 4;</code>
       * @return The deviceInfo.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse getDeviceInfo() {
        if (deviceInfoBuilder_ == null) {
          if (responseCase_ == 4) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse.getDefaultInstance();
        } else {
          if (responseCase_ == 4) {
            return deviceInfoBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * removed: RandomNumberResponse random_number = 3;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoResponse device_info = 4;</code>
       */
      public Builder setDeviceInfo(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse value) {
        if (deviceInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          deviceInfoBuilder_.setMessage(value);
        }
        responseCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * removed: RandomNumberResponse random_number = 3;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoResponse device_info = 4;</code>
       */
      public Builder setDeviceInfo(
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse.Builder builderForValue) {
        if (deviceInfoBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          deviceInfoBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * removed: RandomNumberResponse random_number = 3;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoResponse device_info = 4;</code>
       */
      public Builder mergeDeviceInfo(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse value) {
        if (deviceInfoBuilder_ == null) {
          if (responseCase_ == 4 &&
              response_ != com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse.getDefaultInstance()) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 4) {
            deviceInfoBuilder_.mergeFrom(value);
          } else {
            deviceInfoBuilder_.setMessage(value);
          }
        }
        responseCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * removed: RandomNumberResponse random_number = 3;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoResponse device_info = 4;</code>
       */
      public Builder clearDeviceInfo() {
        if (deviceInfoBuilder_ == null) {
          if (responseCase_ == 4) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 4) {
            responseCase_ = 0;
            response_ = null;
          }
          deviceInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * removed: RandomNumberResponse random_number = 3;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoResponse device_info = 4;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse.Builder getDeviceInfoBuilder() {
        return getDeviceInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * removed: RandomNumberResponse random_number = 3;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoResponse device_info = 4;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponseOrBuilder getDeviceInfoOrBuilder() {
        if ((responseCase_ == 4) && (deviceInfoBuilder_ != null)) {
          return deviceInfoBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 4) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * removed: RandomNumberResponse random_number = 3;
       * </pre>
       *
       * <code>.com.sparrowwallet.lark.bitbox02.generated.DeviceInfoResponse device_info = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponseOrBuilder> 
          getDeviceInfoFieldBuilder() {
        if (deviceInfoBuilder_ == null) {
          if (!(responseCase_ == 4)) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse.getDefaultInstance();
          }
          deviceInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponseOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.DeviceInfoResponse) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 4;
        onChanged();
        return deviceInfoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse, com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Common.PubResponseOrBuilder> pubBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PubResponse pub = 5;</code>
       * @return Whether the pub field is set.
       */
      @java.lang.Override
      public boolean hasPub() {
        return responseCase_ == 5;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PubResponse pub = 5;</code>
       * @return The pub.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse getPub() {
        if (pubBuilder_ == null) {
          if (responseCase_ == 5) {
            return (com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse.getDefaultInstance();
        } else {
          if (responseCase_ == 5) {
            return pubBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PubResponse pub = 5;</code>
       */
      public Builder setPub(com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse value) {
        if (pubBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          pubBuilder_.setMessage(value);
        }
        responseCase_ = 5;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PubResponse pub = 5;</code>
       */
      public Builder setPub(
          com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse.Builder builderForValue) {
        if (pubBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          pubBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 5;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PubResponse pub = 5;</code>
       */
      public Builder mergePub(com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse value) {
        if (pubBuilder_ == null) {
          if (responseCase_ == 5 &&
              response_ != com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse.getDefaultInstance()) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 5) {
            pubBuilder_.mergeFrom(value);
          } else {
            pubBuilder_.setMessage(value);
          }
        }
        responseCase_ = 5;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PubResponse pub = 5;</code>
       */
      public Builder clearPub() {
        if (pubBuilder_ == null) {
          if (responseCase_ == 5) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 5) {
            responseCase_ = 0;
            response_ = null;
          }
          pubBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PubResponse pub = 5;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse.Builder getPubBuilder() {
        return getPubFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PubResponse pub = 5;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Common.PubResponseOrBuilder getPubOrBuilder() {
        if ((responseCase_ == 5) && (pubBuilder_ != null)) {
          return pubBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 5) {
            return (com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PubResponse pub = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse, com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Common.PubResponseOrBuilder> 
          getPubFieldBuilder() {
        if (pubBuilder_ == null) {
          if (!(responseCase_ == 5)) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse.getDefaultInstance();
          }
          pubBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse, com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Common.PubResponseOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Common.PubResponse) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 5;
        onChanged();
        return pubBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponseOrBuilder> btcSignNextBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignNextResponse btc_sign_next = 6;</code>
       * @return Whether the btcSignNext field is set.
       */
      @java.lang.Override
      public boolean hasBtcSignNext() {
        return responseCase_ == 6;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignNextResponse btc_sign_next = 6;</code>
       * @return The btcSignNext.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse getBtcSignNext() {
        if (btcSignNextBuilder_ == null) {
          if (responseCase_ == 6) {
            return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse.getDefaultInstance();
        } else {
          if (responseCase_ == 6) {
            return btcSignNextBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignNextResponse btc_sign_next = 6;</code>
       */
      public Builder setBtcSignNext(com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse value) {
        if (btcSignNextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          btcSignNextBuilder_.setMessage(value);
        }
        responseCase_ = 6;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignNextResponse btc_sign_next = 6;</code>
       */
      public Builder setBtcSignNext(
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse.Builder builderForValue) {
        if (btcSignNextBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          btcSignNextBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 6;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignNextResponse btc_sign_next = 6;</code>
       */
      public Builder mergeBtcSignNext(com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse value) {
        if (btcSignNextBuilder_ == null) {
          if (responseCase_ == 6 &&
              response_ != com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse.getDefaultInstance()) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 6) {
            btcSignNextBuilder_.mergeFrom(value);
          } else {
            btcSignNextBuilder_.setMessage(value);
          }
        }
        responseCase_ = 6;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignNextResponse btc_sign_next = 6;</code>
       */
      public Builder clearBtcSignNext() {
        if (btcSignNextBuilder_ == null) {
          if (responseCase_ == 6) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 6) {
            responseCase_ = 0;
            response_ = null;
          }
          btcSignNextBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignNextResponse btc_sign_next = 6;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse.Builder getBtcSignNextBuilder() {
        return getBtcSignNextFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignNextResponse btc_sign_next = 6;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponseOrBuilder getBtcSignNextOrBuilder() {
        if ((responseCase_ == 6) && (btcSignNextBuilder_ != null)) {
          return btcSignNextBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 6) {
            return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCSignNextResponse btc_sign_next = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponseOrBuilder> 
          getBtcSignNextFieldBuilder() {
        if (btcSignNextBuilder_ == null) {
          if (!(responseCase_ == 6)) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse.getDefaultInstance();
          }
          btcSignNextBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponseOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCSignNextResponse) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 6;
        onChanged();
        return btcSignNextBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponseOrBuilder> listBackupsBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsResponse list_backups = 7;</code>
       * @return Whether the listBackups field is set.
       */
      @java.lang.Override
      public boolean hasListBackups() {
        return responseCase_ == 7;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsResponse list_backups = 7;</code>
       * @return The listBackups.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse getListBackups() {
        if (listBackupsBuilder_ == null) {
          if (responseCase_ == 7) {
            return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse.getDefaultInstance();
        } else {
          if (responseCase_ == 7) {
            return listBackupsBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsResponse list_backups = 7;</code>
       */
      public Builder setListBackups(com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse value) {
        if (listBackupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          listBackupsBuilder_.setMessage(value);
        }
        responseCase_ = 7;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsResponse list_backups = 7;</code>
       */
      public Builder setListBackups(
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse.Builder builderForValue) {
        if (listBackupsBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          listBackupsBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 7;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsResponse list_backups = 7;</code>
       */
      public Builder mergeListBackups(com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse value) {
        if (listBackupsBuilder_ == null) {
          if (responseCase_ == 7 &&
              response_ != com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse.getDefaultInstance()) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse.newBuilder((com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 7) {
            listBackupsBuilder_.mergeFrom(value);
          } else {
            listBackupsBuilder_.setMessage(value);
          }
        }
        responseCase_ = 7;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsResponse list_backups = 7;</code>
       */
      public Builder clearListBackups() {
        if (listBackupsBuilder_ == null) {
          if (responseCase_ == 7) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 7) {
            responseCase_ = 0;
            response_ = null;
          }
          listBackupsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsResponse list_backups = 7;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse.Builder getListBackupsBuilder() {
        return getListBackupsFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsResponse list_backups = 7;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponseOrBuilder getListBackupsOrBuilder() {
        if ((responseCase_ == 7) && (listBackupsBuilder_ != null)) {
          return listBackupsBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 7) {
            return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ListBackupsResponse list_backups = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponseOrBuilder> 
          getListBackupsFieldBuilder() {
        if (listBackupsBuilder_ == null) {
          if (!(responseCase_ == 7)) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse.getDefaultInstance();
          }
          listBackupsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponseOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.ListBackupsResponse) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 7;
        onChanged();
        return listBackupsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponseOrBuilder> checkBackupBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupResponse check_backup = 8;</code>
       * @return Whether the checkBackup field is set.
       */
      @java.lang.Override
      public boolean hasCheckBackup() {
        return responseCase_ == 8;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupResponse check_backup = 8;</code>
       * @return The checkBackup.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse getCheckBackup() {
        if (checkBackupBuilder_ == null) {
          if (responseCase_ == 8) {
            return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse.getDefaultInstance();
        } else {
          if (responseCase_ == 8) {
            return checkBackupBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupResponse check_backup = 8;</code>
       */
      public Builder setCheckBackup(com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse value) {
        if (checkBackupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          checkBackupBuilder_.setMessage(value);
        }
        responseCase_ = 8;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupResponse check_backup = 8;</code>
       */
      public Builder setCheckBackup(
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse.Builder builderForValue) {
        if (checkBackupBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          checkBackupBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 8;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupResponse check_backup = 8;</code>
       */
      public Builder mergeCheckBackup(com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse value) {
        if (checkBackupBuilder_ == null) {
          if (responseCase_ == 8 &&
              response_ != com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse.getDefaultInstance()) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse.newBuilder((com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 8) {
            checkBackupBuilder_.mergeFrom(value);
          } else {
            checkBackupBuilder_.setMessage(value);
          }
        }
        responseCase_ = 8;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupResponse check_backup = 8;</code>
       */
      public Builder clearCheckBackup() {
        if (checkBackupBuilder_ == null) {
          if (responseCase_ == 8) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 8) {
            responseCase_ = 0;
            response_ = null;
          }
          checkBackupBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupResponse check_backup = 8;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse.Builder getCheckBackupBuilder() {
        return getCheckBackupFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupResponse check_backup = 8;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponseOrBuilder getCheckBackupOrBuilder() {
        if ((responseCase_ == 8) && (checkBackupBuilder_ != null)) {
          return checkBackupBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 8) {
            return (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckBackupResponse check_backup = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponseOrBuilder> 
          getCheckBackupFieldBuilder() {
        if (checkBackupBuilder_ == null) {
          if (!(responseCase_ == 8)) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse.getDefaultInstance();
          }
          checkBackupBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponseOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.BackupCommands.CheckBackupResponse) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 8;
        onChanged();
        return checkBackupBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse, com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponseOrBuilder> performAttestationBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationResponse perform_attestation = 9;</code>
       * @return Whether the performAttestation field is set.
       */
      @java.lang.Override
      public boolean hasPerformAttestation() {
        return responseCase_ == 9;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationResponse perform_attestation = 9;</code>
       * @return The performAttestation.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse getPerformAttestation() {
        if (performAttestationBuilder_ == null) {
          if (responseCase_ == 9) {
            return (com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse.getDefaultInstance();
        } else {
          if (responseCase_ == 9) {
            return performAttestationBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationResponse perform_attestation = 9;</code>
       */
      public Builder setPerformAttestation(com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse value) {
        if (performAttestationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          performAttestationBuilder_.setMessage(value);
        }
        responseCase_ = 9;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationResponse perform_attestation = 9;</code>
       */
      public Builder setPerformAttestation(
          com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse.Builder builderForValue) {
        if (performAttestationBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          performAttestationBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 9;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationResponse perform_attestation = 9;</code>
       */
      public Builder mergePerformAttestation(com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse value) {
        if (performAttestationBuilder_ == null) {
          if (responseCase_ == 9 &&
              response_ != com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse.getDefaultInstance()) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse.newBuilder((com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 9) {
            performAttestationBuilder_.mergeFrom(value);
          } else {
            performAttestationBuilder_.setMessage(value);
          }
        }
        responseCase_ = 9;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationResponse perform_attestation = 9;</code>
       */
      public Builder clearPerformAttestation() {
        if (performAttestationBuilder_ == null) {
          if (responseCase_ == 9) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 9) {
            responseCase_ = 0;
            response_ = null;
          }
          performAttestationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationResponse perform_attestation = 9;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse.Builder getPerformAttestationBuilder() {
        return getPerformAttestationFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationResponse perform_attestation = 9;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponseOrBuilder getPerformAttestationOrBuilder() {
        if ((responseCase_ == 9) && (performAttestationBuilder_ != null)) {
          return performAttestationBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 9) {
            return (com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.PerformAttestationResponse perform_attestation = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse, com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponseOrBuilder> 
          getPerformAttestationFieldBuilder() {
        if (performAttestationBuilder_ == null) {
          if (!(responseCase_ == 9)) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse.getDefaultInstance();
          }
          performAttestationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse, com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponseOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.PerformAttestationResponse) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 9;
        onChanged();
        return performAttestationBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponseOrBuilder> checkSdcardBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardResponse check_sdcard = 10;</code>
       * @return Whether the checkSdcard field is set.
       */
      @java.lang.Override
      public boolean hasCheckSdcard() {
        return responseCase_ == 10;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardResponse check_sdcard = 10;</code>
       * @return The checkSdcard.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse getCheckSdcard() {
        if (checkSdcardBuilder_ == null) {
          if (responseCase_ == 10) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse.getDefaultInstance();
        } else {
          if (responseCase_ == 10) {
            return checkSdcardBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardResponse check_sdcard = 10;</code>
       */
      public Builder setCheckSdcard(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse value) {
        if (checkSdcardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          checkSdcardBuilder_.setMessage(value);
        }
        responseCase_ = 10;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardResponse check_sdcard = 10;</code>
       */
      public Builder setCheckSdcard(
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse.Builder builderForValue) {
        if (checkSdcardBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          checkSdcardBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 10;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardResponse check_sdcard = 10;</code>
       */
      public Builder mergeCheckSdcard(com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse value) {
        if (checkSdcardBuilder_ == null) {
          if (responseCase_ == 10 &&
              response_ != com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse.getDefaultInstance()) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 10) {
            checkSdcardBuilder_.mergeFrom(value);
          } else {
            checkSdcardBuilder_.setMessage(value);
          }
        }
        responseCase_ = 10;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardResponse check_sdcard = 10;</code>
       */
      public Builder clearCheckSdcard() {
        if (checkSdcardBuilder_ == null) {
          if (responseCase_ == 10) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 10) {
            responseCase_ = 0;
            response_ = null;
          }
          checkSdcardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardResponse check_sdcard = 10;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse.Builder getCheckSdcardBuilder() {
        return getCheckSdcardFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardResponse check_sdcard = 10;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponseOrBuilder getCheckSdcardOrBuilder() {
        if ((responseCase_ == 10) && (checkSdcardBuilder_ != null)) {
          return checkSdcardBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 10) {
            return (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.CheckSDCardResponse check_sdcard = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponseOrBuilder> 
          getCheckSdcardFieldBuilder() {
        if (checkSdcardBuilder_ == null) {
          if (!(responseCase_ == 10)) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse.getDefaultInstance();
          }
          checkSdcardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponseOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.CheckSDCardResponse) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 10;
        onChanged();
        return checkSdcardBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse, com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponseOrBuilder> fingerprintBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintResponse fingerprint = 12;</code>
       * @return Whether the fingerprint field is set.
       */
      @java.lang.Override
      public boolean hasFingerprint() {
        return responseCase_ == 12;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintResponse fingerprint = 12;</code>
       * @return The fingerprint.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse getFingerprint() {
        if (fingerprintBuilder_ == null) {
          if (responseCase_ == 12) {
            return (com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse.getDefaultInstance();
        } else {
          if (responseCase_ == 12) {
            return fingerprintBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintResponse fingerprint = 12;</code>
       */
      public Builder setFingerprint(com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse value) {
        if (fingerprintBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          fingerprintBuilder_.setMessage(value);
        }
        responseCase_ = 12;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintResponse fingerprint = 12;</code>
       */
      public Builder setFingerprint(
          com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse.Builder builderForValue) {
        if (fingerprintBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          fingerprintBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 12;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintResponse fingerprint = 12;</code>
       */
      public Builder mergeFingerprint(com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse value) {
        if (fingerprintBuilder_ == null) {
          if (responseCase_ == 12 &&
              response_ != com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse.getDefaultInstance()) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 12) {
            fingerprintBuilder_.mergeFrom(value);
          } else {
            fingerprintBuilder_.setMessage(value);
          }
        }
        responseCase_ = 12;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintResponse fingerprint = 12;</code>
       */
      public Builder clearFingerprint() {
        if (fingerprintBuilder_ == null) {
          if (responseCase_ == 12) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 12) {
            responseCase_ = 0;
            response_ = null;
          }
          fingerprintBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintResponse fingerprint = 12;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse.Builder getFingerprintBuilder() {
        return getFingerprintFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintResponse fingerprint = 12;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponseOrBuilder getFingerprintOrBuilder() {
        if ((responseCase_ == 12) && (fingerprintBuilder_ != null)) {
          return fingerprintBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 12) {
            return (com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.RootFingerprintResponse fingerprint = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse, com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponseOrBuilder> 
          getFingerprintFieldBuilder() {
        if (fingerprintBuilder_ == null) {
          if (!(responseCase_ == 12)) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse.getDefaultInstance();
          }
          fingerprintBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse, com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponseOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Common.RootFingerprintResponse) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 12;
        onChanged();
        return fingerprintBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponseOrBuilder> btcBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCResponse btc = 13;</code>
       * @return Whether the btc field is set.
       */
      @java.lang.Override
      public boolean hasBtc() {
        return responseCase_ == 13;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCResponse btc = 13;</code>
       * @return The btc.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse getBtc() {
        if (btcBuilder_ == null) {
          if (responseCase_ == 13) {
            return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse.getDefaultInstance();
        } else {
          if (responseCase_ == 13) {
            return btcBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCResponse btc = 13;</code>
       */
      public Builder setBtc(com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse value) {
        if (btcBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          btcBuilder_.setMessage(value);
        }
        responseCase_ = 13;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCResponse btc = 13;</code>
       */
      public Builder setBtc(
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse.Builder builderForValue) {
        if (btcBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          btcBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 13;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCResponse btc = 13;</code>
       */
      public Builder mergeBtc(com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse value) {
        if (btcBuilder_ == null) {
          if (responseCase_ == 13 &&
              response_ != com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse.getDefaultInstance()) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 13) {
            btcBuilder_.mergeFrom(value);
          } else {
            btcBuilder_.setMessage(value);
          }
        }
        responseCase_ = 13;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCResponse btc = 13;</code>
       */
      public Builder clearBtc() {
        if (btcBuilder_ == null) {
          if (responseCase_ == 13) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 13) {
            responseCase_ = 0;
            response_ = null;
          }
          btcBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCResponse btc = 13;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse.Builder getBtcBuilder() {
        return getBtcFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCResponse btc = 13;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponseOrBuilder getBtcOrBuilder() {
        if ((responseCase_ == 13) && (btcBuilder_ != null)) {
          return btcBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 13) {
            return (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BTCResponse btc = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponseOrBuilder> 
          getBtcFieldBuilder() {
        if (btcBuilder_ == null) {
          if (!(responseCase_ == 13)) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse.getDefaultInstance();
          }
          btcBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponseOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Btc.BTCResponse) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 13;
        onChanged();
        return btcBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse, com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponseOrBuilder> electrumEncryptionKeyBuilder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyResponse electrum_encryption_key = 14;</code>
       * @return Whether the electrumEncryptionKey field is set.
       */
      @java.lang.Override
      public boolean hasElectrumEncryptionKey() {
        return responseCase_ == 14;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyResponse electrum_encryption_key = 14;</code>
       * @return The electrumEncryptionKey.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse getElectrumEncryptionKey() {
        if (electrumEncryptionKeyBuilder_ == null) {
          if (responseCase_ == 14) {
            return (com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse.getDefaultInstance();
        } else {
          if (responseCase_ == 14) {
            return electrumEncryptionKeyBuilder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyResponse electrum_encryption_key = 14;</code>
       */
      public Builder setElectrumEncryptionKey(com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse value) {
        if (electrumEncryptionKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          electrumEncryptionKeyBuilder_.setMessage(value);
        }
        responseCase_ = 14;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyResponse electrum_encryption_key = 14;</code>
       */
      public Builder setElectrumEncryptionKey(
          com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse.Builder builderForValue) {
        if (electrumEncryptionKeyBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          electrumEncryptionKeyBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 14;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyResponse electrum_encryption_key = 14;</code>
       */
      public Builder mergeElectrumEncryptionKey(com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse value) {
        if (electrumEncryptionKeyBuilder_ == null) {
          if (responseCase_ == 14 &&
              response_ != com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse.getDefaultInstance()) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 14) {
            electrumEncryptionKeyBuilder_.mergeFrom(value);
          } else {
            electrumEncryptionKeyBuilder_.setMessage(value);
          }
        }
        responseCase_ = 14;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyResponse electrum_encryption_key = 14;</code>
       */
      public Builder clearElectrumEncryptionKey() {
        if (electrumEncryptionKeyBuilder_ == null) {
          if (responseCase_ == 14) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 14) {
            responseCase_ = 0;
            response_ = null;
          }
          electrumEncryptionKeyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyResponse electrum_encryption_key = 14;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse.Builder getElectrumEncryptionKeyBuilder() {
        return getElectrumEncryptionKeyFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyResponse electrum_encryption_key = 14;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponseOrBuilder getElectrumEncryptionKeyOrBuilder() {
        if ((responseCase_ == 14) && (electrumEncryptionKeyBuilder_ != null)) {
          return electrumEncryptionKeyBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 14) {
            return (com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.ElectrumEncryptionKeyResponse electrum_encryption_key = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse, com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponseOrBuilder> 
          getElectrumEncryptionKeyFieldBuilder() {
        if (electrumEncryptionKeyBuilder_ == null) {
          if (!(responseCase_ == 14)) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse.getDefaultInstance();
          }
          electrumEncryptionKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse, com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse.Builder, com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponseOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Keystore.ElectrumEncryptionKeyResponse) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 14;
        onChanged();
        return electrumEncryptionKeyBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response, com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response.Builder, com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85ResponseOrBuilder> bip85Builder_;
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Response bip85 = 16;</code>
       * @return Whether the bip85 field is set.
       */
      @java.lang.Override
      public boolean hasBip85() {
        return responseCase_ == 16;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Response bip85 = 16;</code>
       * @return The bip85.
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response getBip85() {
        if (bip85Builder_ == null) {
          if (responseCase_ == 16) {
            return (com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response.getDefaultInstance();
        } else {
          if (responseCase_ == 16) {
            return bip85Builder_.getMessage();
          }
          return com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Response bip85 = 16;</code>
       */
      public Builder setBip85(com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response value) {
        if (bip85Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          bip85Builder_.setMessage(value);
        }
        responseCase_ = 16;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Response bip85 = 16;</code>
       */
      public Builder setBip85(
          com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response.Builder builderForValue) {
        if (bip85Builder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          bip85Builder_.setMessage(builderForValue.build());
        }
        responseCase_ = 16;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Response bip85 = 16;</code>
       */
      public Builder mergeBip85(com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response value) {
        if (bip85Builder_ == null) {
          if (responseCase_ == 16 &&
              response_ != com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response.getDefaultInstance()) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response.newBuilder((com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 16) {
            bip85Builder_.mergeFrom(value);
          } else {
            bip85Builder_.setMessage(value);
          }
        }
        responseCase_ = 16;
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Response bip85 = 16;</code>
       */
      public Builder clearBip85() {
        if (bip85Builder_ == null) {
          if (responseCase_ == 16) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 16) {
            responseCase_ = 0;
            response_ = null;
          }
          bip85Builder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Response bip85 = 16;</code>
       */
      public com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response.Builder getBip85Builder() {
        return getBip85FieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Response bip85 = 16;</code>
       */
      @java.lang.Override
      public com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85ResponseOrBuilder getBip85OrBuilder() {
        if ((responseCase_ == 16) && (bip85Builder_ != null)) {
          return bip85Builder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 16) {
            return (com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response) response_;
          }
          return com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sparrowwallet.lark.bitbox02.generated.BIP85Response bip85 = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response, com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response.Builder, com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85ResponseOrBuilder> 
          getBip85FieldBuilder() {
        if (bip85Builder_ == null) {
          if (!(responseCase_ == 16)) {
            response_ = com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response.getDefaultInstance();
          }
          bip85Builder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response, com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response.Builder, com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85ResponseOrBuilder>(
                  (com.sparrowwallet.lark.bitbox02.generated.Keystore.BIP85Response) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 16;
        onChanged();
        return bip85Builder_;
      }

      // @@protoc_insertion_point(builder_scope:com.sparrowwallet.lark.bitbox02.generated.Response)
    }

    // @@protoc_insertion_point(class_scope:com.sparrowwallet.lark.bitbox02.generated.Response)
    private static final com.sparrowwallet.lark.bitbox02.generated.Hww.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sparrowwallet.lark.bitbox02.generated.Hww.Response();
    }

    public static com.sparrowwallet.lark.bitbox02.generated.Hww.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      @java.lang.Override
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sparrowwallet.lark.bitbox02.generated.Hww.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sparrowwallet_lark_bitbox02_generated_Error_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sparrowwallet_lark_bitbox02_generated_Error_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sparrowwallet_lark_bitbox02_generated_Success_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sparrowwallet_lark_bitbox02_generated_Success_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sparrowwallet_lark_bitbox02_generated_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sparrowwallet_lark_bitbox02_generated_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sparrowwallet_lark_bitbox02_generated_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sparrowwallet_lark_bitbox02_generated_Response_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\thww.proto\022)com.sparrowwallet.lark.bitb" +
      "ox02.generated\032\014common.proto\032\025backup_com" +
      "mands.proto\032\025bitbox02_system.proto\032\tbtc." +
      "proto\032\016keystore.proto\032\016mnemonic.proto\032\014s" +
      "ystem.proto\032\031perform_attestation.proto\"&" +
      "\n\005Error\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\"\t" +
      "\n\007Success\"\213\021\n\007Request\022V\n\013device_name\030\002 \001" +
      "(\0132?.com.sparrowwallet.lark.bitbox02.gen" +
      "erated.SetDeviceNameRequestH\000\022^\n\017device_" +
      "language\030\003 \001(\0132C.com.sparrowwallet.lark." +
      "bitbox02.generated.SetDeviceLanguageRequ" +
      "estH\000\022S\n\013device_info\030\004 \001(\0132<.com.sparrow" +
      "wallet.lark.bitbox02.generated.DeviceInf" +
      "oRequestH\000\022U\n\014set_password\030\005 \001(\0132=.com.s" +
      "parrowwallet.lark.bitbox02.generated.Set" +
      "PasswordRequestH\000\022W\n\rcreate_backup\030\006 \001(\013" +
      "2>.com.sparrowwallet.lark.bitbox02.gener" +
      "ated.CreateBackupRequestH\000\022W\n\rshow_mnemo" +
      "nic\030\007 \001(\0132>.com.sparrowwallet.lark.bitbo" +
      "x02.generated.ShowMnemonicRequestH\000\022K\n\007b" +
      "tc_pub\030\010 \001(\01328.com.sparrowwallet.lark.bi" +
      "tbox02.generated.BTCPubRequestH\000\022V\n\rbtc_" +
      "sign_init\030\t \001(\0132=.com.sparrowwallet.lark" +
      ".bitbox02.generated.BTCSignInitRequestH\000" +
      "\022X\n\016btc_sign_input\030\n \001(\0132>.com.sparrowwa" +
      "llet.lark.bitbox02.generated.BTCSignInpu" +
      "tRequestH\000\022Z\n\017btc_sign_output\030\013 \001(\0132?.co" +
      "m.sparrowwallet.lark.bitbox02.generated." +
      "BTCSignOutputRequestH\000\022d\n\024insert_remove_" +
      "sdcard\030\014 \001(\0132D.com.sparrowwallet.lark.bi" +
      "tbox02.generated.InsertRemoveSDCardReque" +
      "stH\000\022U\n\014check_sdcard\030\r \001(\0132=.com.sparrow" +
      "wallet.lark.bitbox02.generated.CheckSDCa" +
      "rdRequestH\000\022y\n\037set_mnemonic_passphrase_e" +
      "nabled\030\016 \001(\0132N.com.sparrowwallet.lark.bi" +
      "tbox02.generated.SetMnemonicPassphraseEn" +
      "abledRequestH\000\022U\n\014list_backups\030\017 \001(\0132=.c" +
      "om.sparrowwallet.lark.bitbox02.generated" +
      ".ListBackupsRequestH\000\022Y\n\016restore_backup\030" +
      "\020 \001(\0132?.com.sparrowwallet.lark.bitbox02." +
      "generated.RestoreBackupRequestH\000\022c\n\023perf" +
      "orm_attestation\030\021 \001(\0132D.com.sparrowwalle" +
      "t.lark.bitbox02.generated.PerformAttesta" +
      "tionRequestH\000\022J\n\006reboot\030\022 \001(\01328.com.spar" +
      "rowwallet.lark.bitbox02.generated.Reboot" +
      "RequestH\000\022U\n\014check_backup\030\023 \001(\0132=.com.sp" +
      "arrowwallet.lark.bitbox02.generated.Chec" +
      "kBackupRequestH\000\022H\n\005reset\030\025 \001(\01327.com.sp" +
      "arrowwallet.lark.bitbox02.generated.Rese" +
      "tRequestH\000\022f\n\025restore_from_mnemonic\030\026 \001(" +
      "\0132E.com.sparrowwallet.lark.bitbox02.gene" +
      "rated.RestoreFromMnemonicRequestH\000\022X\n\013fi" +
      "ngerprint\030\030 \001(\0132A.com.sparrowwallet.lark" +
      ".bitbox02.generated.RootFingerprintReque" +
      "stH\000\022D\n\003btc\030\031 \001(\01325.com.sparrowwallet.la" +
      "rk.bitbox02.generated.BTCRequestH\000\022j\n\027el" +
      "ectrum_encryption_key\030\032 \001(\0132G.com.sparro" +
      "wwallet.lark.bitbox02.generated.Electrum" +
      "EncryptionKeyRequestH\000\022H\n\005bip85\030\034 \001(\01327." +
      "com.sparrowwallet.lark.bitbox02.generate" +
      "d.BIP85RequestH\000B\t\n\007requestJ\004\010\001\020\002J\004\010\027\020\030\"" +
      "\344\010\n\010Response\022E\n\007success\030\001 \001(\01322.com.spar" +
      "rowwallet.lark.bitbox02.generated.Succes" +
      "sH\000\022A\n\005error\030\002 \001(\01320.com.sparrowwallet.l" +
      "ark.bitbox02.generated.ErrorH\000\022T\n\013device" +
      "_info\030\004 \001(\0132=.com.sparrowwallet.lark.bit" +
      "box02.generated.DeviceInfoResponseH\000\022E\n\003" +
      "pub\030\005 \001(\01326.com.sparrowwallet.lark.bitbo" +
      "x02.generated.PubResponseH\000\022W\n\rbtc_sign_" +
      "next\030\006 \001(\0132>.com.sparrowwallet.lark.bitb" +
      "ox02.generated.BTCSignNextResponseH\000\022V\n\014" +
      "list_backups\030\007 \001(\0132>.com.sparrowwallet.l" +
      "ark.bitbox02.generated.ListBackupsRespon" +
      "seH\000\022V\n\014check_backup\030\010 \001(\0132>.com.sparrow" +
      "wallet.lark.bitbox02.generated.CheckBack" +
      "upResponseH\000\022d\n\023perform_attestation\030\t \001(" +
      "\0132E.com.sparrowwallet.lark.bitbox02.gene" +
      "rated.PerformAttestationResponseH\000\022V\n\014ch" +
      "eck_sdcard\030\n \001(\0132>.com.sparrowwallet.lar" +
      "k.bitbox02.generated.CheckSDCardResponse" +
      "H\000\022Y\n\013fingerprint\030\014 \001(\0132B.com.sparrowwal" +
      "let.lark.bitbox02.generated.RootFingerpr" +
      "intResponseH\000\022E\n\003btc\030\r \001(\01326.com.sparrow" +
      "wallet.lark.bitbox02.generated.BTCRespon" +
      "seH\000\022k\n\027electrum_encryption_key\030\016 \001(\0132H." +
      "com.sparrowwallet.lark.bitbox02.generate" +
      "d.ElectrumEncryptionKeyResponseH\000\022I\n\005bip" +
      "85\030\020 \001(\01328.com.sparrowwallet.lark.bitbox" +
      "02.generated.BIP85ResponseH\000B\n\n\010response" +
      "J\004\010\003\020\004b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.sparrowwallet.lark.bitbox02.generated.Common.getDescriptor(),
          com.sparrowwallet.lark.bitbox02.generated.BackupCommands.getDescriptor(),
          com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.getDescriptor(),
          com.sparrowwallet.lark.bitbox02.generated.Btc.getDescriptor(),
          com.sparrowwallet.lark.bitbox02.generated.Keystore.getDescriptor(),
          com.sparrowwallet.lark.bitbox02.generated.Mnemonic.getDescriptor(),
          com.sparrowwallet.lark.bitbox02.generated.System.getDescriptor(),
          com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.getDescriptor(),
        });
    internal_static_com_sparrowwallet_lark_bitbox02_generated_Error_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_sparrowwallet_lark_bitbox02_generated_Error_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_sparrowwallet_lark_bitbox02_generated_Error_descriptor,
        new java.lang.String[] { "Code", "Message", });
    internal_static_com_sparrowwallet_lark_bitbox02_generated_Success_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_sparrowwallet_lark_bitbox02_generated_Success_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_sparrowwallet_lark_bitbox02_generated_Success_descriptor,
        new java.lang.String[] { });
    internal_static_com_sparrowwallet_lark_bitbox02_generated_Request_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_sparrowwallet_lark_bitbox02_generated_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_sparrowwallet_lark_bitbox02_generated_Request_descriptor,
        new java.lang.String[] { "DeviceName", "DeviceLanguage", "DeviceInfo", "SetPassword", "CreateBackup", "ShowMnemonic", "BtcPub", "BtcSignInit", "BtcSignInput", "BtcSignOutput", "InsertRemoveSdcard", "CheckSdcard", "SetMnemonicPassphraseEnabled", "ListBackups", "RestoreBackup", "PerformAttestation", "Reboot", "CheckBackup", "Reset", "RestoreFromMnemonic", "Fingerprint", "Btc", "ElectrumEncryptionKey", "Bip85", "Request", });
    internal_static_com_sparrowwallet_lark_bitbox02_generated_Response_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_sparrowwallet_lark_bitbox02_generated_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_sparrowwallet_lark_bitbox02_generated_Response_descriptor,
        new java.lang.String[] { "Success", "Error", "DeviceInfo", "Pub", "BtcSignNext", "ListBackups", "CheckBackup", "PerformAttestation", "CheckSdcard", "Fingerprint", "Btc", "ElectrumEncryptionKey", "Bip85", "Response", });
    descriptor.resolveAllFeaturesImmutable();
    com.sparrowwallet.lark.bitbox02.generated.Common.getDescriptor();
    com.sparrowwallet.lark.bitbox02.generated.BackupCommands.getDescriptor();
    com.sparrowwallet.lark.bitbox02.generated.Bitbox02System.getDescriptor();
    com.sparrowwallet.lark.bitbox02.generated.Btc.getDescriptor();
    com.sparrowwallet.lark.bitbox02.generated.Keystore.getDescriptor();
    com.sparrowwallet.lark.bitbox02.generated.Mnemonic.getDescriptor();
    com.sparrowwallet.lark.bitbox02.generated.System.getDescriptor();
    com.sparrowwallet.lark.bitbox02.generated.PerformAttestation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
